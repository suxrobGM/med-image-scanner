{"version":3,"file":"7376.bundle.56bef2621811f4a102ae.js","mappings":"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","sources":["webpack:///../../../modes/segmentation/src/id.js","webpack:///../../../modes/segmentation/src/toolbarButtons.ts","webpack:///../../../modes/segmentation/src/segmentationButtons.ts","webpack:///../../../modes/segmentation/src/initToolGroups.ts","webpack:///../../../modes/segmentation/src/index.tsx"],"sourcesContent":["import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\n\r\nexport { id };\r\n","import type { Button } from '@ohif/core/types';\r\nimport { ToolbarService, ViewportGridService } from '@ohif/core';\r\n\r\nconst { createButton } = ToolbarService;\r\n\r\nconst ReferenceLinesListeners: RunCommand = [\r\n  {\r\n    commandName: 'setSourceViewportForReferenceLinesTool',\r\n    context: 'CORNERSTONE',\r\n  },\r\n];\r\n\r\nexport const setToolActiveToolbar = {\r\n  commandName: 'setToolActiveToolbar',\r\n  commandOptions: {\r\n    toolGroupIds: ['default', 'mpr', 'SRToolGroup', 'volume3d'],\r\n  },\r\n};\r\n\r\nconst toolbarButtons: Button[] = [\r\n  {\r\n    id: 'Zoom',\r\n    uiType: 'ohif.radioGroup',\r\n    props: {\r\n      icon: 'tool-zoom',\r\n      label: 'Zoom',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'WindowLevel',\r\n    uiType: 'ohif.radioGroup',\r\n    props: {\r\n      icon: 'tool-window-level',\r\n      label: 'Window Level',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'Pan',\r\n    uiType: 'ohif.radioGroup',\r\n    props: {\r\n      icon: 'tool-move',\r\n      label: 'Pan',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: 'evaluate.cornerstoneTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'TrackballRotate',\r\n    uiType: 'ohif.radioGroup',\r\n    props: {\r\n      type: 'tool',\r\n      icon: 'tool-3d-rotate',\r\n      label: '3D Rotate',\r\n      commands: setToolActiveToolbar,\r\n      evaluate: {\r\n        name: 'evaluate.cornerstoneTool',\r\n        disabledText: 'Select a 3D viewport to enable this tool',\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'Capture',\r\n    uiType: 'ohif.radioGroup',\r\n    props: {\r\n      icon: 'tool-capture',\r\n      label: 'Capture',\r\n      commands: 'showDownloadViewportModal',\r\n      evaluate: 'evaluate.action',\r\n    },\r\n  },\r\n  {\r\n    id: 'Layout',\r\n    uiType: 'ohif.layoutSelector',\r\n    props: {\r\n      rows: 3,\r\n      columns: 4,\r\n      evaluate: 'evaluate.action',\r\n      commands: 'setViewportGridLayout',\r\n    },\r\n  },\r\n  {\r\n    id: 'Crosshairs',\r\n    uiType: 'ohif.radioGroup',\r\n    props: {\r\n      icon: 'tool-crosshair',\r\n      label: 'Crosshairs',\r\n      commands: {\r\n        commandName: 'setToolActiveToolbar',\r\n        commandOptions: {\r\n          toolGroupIds: ['mpr'],\r\n        },\r\n      },\r\n      evaluate: {\r\n        name: 'evaluate.cornerstoneTool',\r\n        disabledText: 'Select an MPR viewport to enable this tool',\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'MoreTools',\r\n    uiType: 'ohif.splitButton',\r\n    props: {\r\n      groupId: 'MoreTools',\r\n      evaluate: 'evaluate.group.promoteToPrimaryIfCornerstoneToolNotActiveInTheList',\r\n      primary: createButton({\r\n        id: 'Reset',\r\n        icon: 'tool-reset',\r\n        tooltip: 'Reset View',\r\n        label: 'Reset',\r\n        commands: 'resetViewport',\r\n        evaluate: 'evaluate.action',\r\n      }),\r\n      secondary: {\r\n        icon: 'chevron-down',\r\n        label: '',\r\n        tooltip: 'More Tools',\r\n      },\r\n      items: [\r\n        createButton({\r\n          id: 'Reset',\r\n          icon: 'tool-reset',\r\n          label: 'Reset View',\r\n          tooltip: 'Reset View',\r\n          commands: 'resetViewport',\r\n          evaluate: 'evaluate.action',\r\n        }),\r\n        createButton({\r\n          id: 'rotate-right',\r\n          icon: 'tool-rotate-right',\r\n          label: 'Rotate Right',\r\n          tooltip: 'Rotate +90',\r\n          commands: 'rotateViewportCW',\r\n          evaluate: 'evaluate.action',\r\n        }),\r\n        createButton({\r\n          id: 'flipHorizontal',\r\n          icon: 'tool-flip-horizontal',\r\n          label: 'Flip Horizontal',\r\n          tooltip: 'Flip Horizontally',\r\n          commands: 'flipViewportHorizontal',\r\n          evaluate: ['evaluate.viewportProperties.toggle', 'evaluate.not3D'],\r\n        }),\r\n        createButton({\r\n          id: 'ReferenceLines',\r\n          icon: 'tool-referenceLines',\r\n          label: 'Reference Lines',\r\n          tooltip: 'Show Reference Lines',\r\n          commands: 'toggleEnabledDisabledToolbar',\r\n          listeners: {\r\n            [ViewportGridService.EVENTS.ACTIVE_VIEWPORT_ID_CHANGED]: ReferenceLinesListeners,\r\n            [ViewportGridService.EVENTS.VIEWPORTS_READY]: ReferenceLinesListeners,\r\n          },\r\n          evaluate: 'evaluate.cornerstoneTool.toggle',\r\n        }),\r\n        createButton({\r\n          id: 'ImageOverlayViewer',\r\n          icon: 'toggle-dicom-overlay',\r\n          label: 'Image Overlay',\r\n          tooltip: 'Toggle Image Overlay',\r\n          commands: 'toggleEnabledDisabledToolbar',\r\n          evaluate: 'evaluate.cornerstoneTool.toggle',\r\n        }),\r\n        createButton({\r\n          id: 'StackScroll',\r\n          icon: 'tool-stack-scroll',\r\n          label: 'Stack Scroll',\r\n          tooltip: 'Stack Scroll',\r\n          commands: setToolActiveToolbar,\r\n          evaluate: 'evaluate.cornerstoneTool',\r\n        }),\r\n        createButton({\r\n          id: 'invert',\r\n          icon: 'tool-invert',\r\n          label: 'Invert',\r\n          tooltip: 'Invert Colors',\r\n          commands: 'invertViewport',\r\n          evaluate: 'evaluate.viewportProperties.toggle',\r\n        }),\r\n        createButton({\r\n          id: 'Probe',\r\n          icon: 'tool-probe',\r\n          label: 'Probe',\r\n          tooltip: 'Probe',\r\n          commands: setToolActiveToolbar,\r\n          evaluate: 'evaluate.cornerstoneTool',\r\n        }),\r\n        createButton({\r\n          id: 'Cine',\r\n          icon: 'tool-cine',\r\n          label: 'Cine',\r\n          tooltip: 'Cine',\r\n          commands: 'toggleCine',\r\n          evaluate: ['evaluate.cine', 'evaluate.not3D'],\r\n        }),\r\n        createButton({\r\n          id: 'Angle',\r\n          icon: 'tool-angle',\r\n          label: 'Angle',\r\n          tooltip: 'Angle',\r\n          commands: setToolActiveToolbar,\r\n          evaluate: 'evaluate.cornerstoneTool',\r\n        }),\r\n        createButton({\r\n          id: 'Magnify',\r\n          icon: 'tool-magnify',\r\n          label: 'Zoom-in',\r\n          tooltip: 'Zoom-in',\r\n          commands: setToolActiveToolbar,\r\n          evaluate: 'evaluate.cornerstoneTool',\r\n        }),\r\n        createButton({\r\n          id: 'RectangleROI',\r\n          icon: 'tool-rectangle',\r\n          label: 'Rectangle',\r\n          tooltip: 'Rectangle',\r\n          commands: setToolActiveToolbar,\r\n          evaluate: 'evaluate.cornerstoneTool',\r\n        }),\r\n        createButton({\r\n          id: 'CalibrationLine',\r\n          icon: 'tool-calibration',\r\n          label: 'Calibration',\r\n          tooltip: 'Calibration Line',\r\n          commands: setToolActiveToolbar,\r\n          evaluate: 'evaluate.cornerstoneTool',\r\n        }),\r\n        createButton({\r\n          id: 'TagBrowser',\r\n          icon: 'dicom-tag-browser',\r\n          label: 'Dicom Tag Browser',\r\n          tooltip: 'Dicom Tag Browser',\r\n          commands: 'openDICOMTagViewer',\r\n        }),\r\n        createButton({\r\n          id: 'AdvancedMagnify',\r\n          icon: 'icon-tool-loupe',\r\n          label: 'Magnify Probe',\r\n          tooltip: 'Magnify Probe',\r\n          commands: 'toggleActiveDisabledToolbar',\r\n          evaluate: 'evaluate.cornerstoneTool.toggle.ifStrictlyDisabled',\r\n        }),\r\n        createButton({\r\n          id: 'UltrasoundDirectionalTool',\r\n          icon: 'icon-tool-ultrasound-bidirectional',\r\n          label: 'Ultrasound Directional',\r\n          tooltip: 'Ultrasound Directional',\r\n          commands: setToolActiveToolbar,\r\n          evaluate: ['evaluate.cornerstoneTool', 'evaluate.isUS'],\r\n        }),\r\n        createButton({\r\n          id: 'WindowLevelRegion',\r\n          icon: 'icon-tool-window-region',\r\n          label: 'Window Level Region',\r\n          tooltip: 'Window Level Region',\r\n          commands: setToolActiveToolbar,\r\n          evaluate: 'evaluate.cornerstoneTool',\r\n        }),\r\n      ],\r\n    },\r\n  },\r\n];\r\n\r\nexport default toolbarButtons;\r\n","import type { Button } from '@ohif/core/types';\r\n\r\nconst toolbarButtons: Button[] = [\r\n  {\r\n    id: 'BrushTools',\r\n    uiType: 'ohif.buttonGroup',\r\n    props: {\r\n      groupId: 'BrushTools',\r\n      items: [\r\n        {\r\n          id: 'Brush',\r\n          icon: 'icon-tool-brush',\r\n          label: 'Brush',\r\n          evaluate: {\r\n            name: 'evaluate.cornerstone.segmentation',\r\n            toolNames: ['CircularBrush', 'SphereBrush'],\r\n            disabledText: 'Create new segmentation to enable this tool.',\r\n          },\r\n          options: [\r\n            {\r\n              name: 'Radius (mm)',\r\n              id: 'brush-radius',\r\n              type: 'range',\r\n              min: 0.5,\r\n              max: 99.5,\r\n              step: 0.5,\r\n              value: 25,\r\n              commands: {\r\n                commandName: 'setBrushSize',\r\n                commandOptions: { toolNames: ['CircularBrush', 'SphereBrush'] },\r\n              },\r\n            },\r\n            {\r\n              name: 'Shape',\r\n              type: 'radio',\r\n              id: 'brush-mode',\r\n              value: 'CircularBrush',\r\n              values: [\r\n                { value: 'CircularBrush', label: 'Circle' },\r\n                { value: 'SphereBrush', label: 'Sphere' },\r\n              ],\r\n              commands: 'setToolActiveToolbar',\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 'Eraser',\r\n          icon: 'icon-tool-eraser',\r\n          label: 'Eraser',\r\n          evaluate: {\r\n            name: 'evaluate.cornerstone.segmentation',\r\n            toolNames: ['CircularEraser', 'SphereEraser'],\r\n          },\r\n          options: [\r\n            {\r\n              name: 'Radius (mm)',\r\n              id: 'eraser-radius',\r\n              type: 'range',\r\n              min: 0.5,\r\n              max: 99.5,\r\n              step: 0.5,\r\n              value: 25,\r\n              commands: {\r\n                commandName: 'setBrushSize',\r\n                commandOptions: { toolNames: ['CircularEraser', 'SphereEraser'] },\r\n              },\r\n            },\r\n            {\r\n              name: 'Shape',\r\n              type: 'radio',\r\n              id: 'eraser-mode',\r\n              value: 'CircularEraser',\r\n              values: [\r\n                { value: 'CircularEraser', label: 'Circle' },\r\n                { value: 'SphereEraser', label: 'Sphere' },\r\n              ],\r\n              commands: 'setToolActiveToolbar',\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 'Threshold',\r\n          icon: 'icon-tool-threshold',\r\n          label: 'Threshold Tool',\r\n          evaluate: {\r\n            name: 'evaluate.cornerstone.segmentation',\r\n            toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\r\n          },\r\n          options: [\r\n            {\r\n              name: 'Radius (mm)',\r\n              id: 'threshold-radius',\r\n              type: 'range',\r\n              min: 0.5,\r\n              max: 99.5,\r\n              step: 0.5,\r\n              value: 25,\r\n              commands: {\r\n                commandName: 'setBrushSize',\r\n                commandOptions: {\r\n                  toolNames: [\r\n                    'ThresholdCircularBrush',\r\n                    'ThresholdSphereBrush',\r\n                    'ThresholdCircularBrushDynamic',\r\n                  ],\r\n                },\r\n              },\r\n            },\r\n\r\n            {\r\n              name: 'Threshold',\r\n              type: 'radio',\r\n              id: 'dynamic-mode',\r\n              value: 'ThresholdRange',\r\n              values: [\r\n                { value: 'ThresholdDynamic', label: 'Dynamic' },\r\n                { value: 'ThresholdRange', label: 'Range' },\r\n              ],\r\n              commands: ({ value, commandsManager, options }) => {\r\n                if (value === 'ThresholdDynamic') {\r\n                  commandsManager.run('setToolActive', {\r\n                    toolName: 'ThresholdCircularBrushDynamic',\r\n                  });\r\n\r\n                  return;\r\n                }\r\n\r\n                // check the condition of the threshold-range option\r\n                const thresholdRangeOption = options.find(\r\n                  option => option.id === 'threshold-shape'\r\n                );\r\n\r\n                commandsManager.run('setToolActiveToolbar', {\r\n                  toolName: thresholdRangeOption.value,\r\n                });\r\n              },\r\n            },\r\n            {\r\n              name: 'Shape',\r\n              type: 'radio',\r\n              id: 'threshold-shape',\r\n              value: 'ThresholdCircularBrush',\r\n              values: [\r\n                { value: 'ThresholdCircularBrush', label: 'Circle' },\r\n                { value: 'ThresholdSphereBrush', label: 'Sphere' },\r\n              ],\r\n              condition: ({ options }) =>\r\n                options.find(option => option.id === 'dynamic-mode').value === 'ThresholdRange',\r\n              commands: 'setToolActiveToolbar',\r\n            },\r\n            {\r\n              name: 'ThresholdRange',\r\n              type: 'double-range',\r\n              id: 'threshold-range',\r\n              min: -1000,\r\n              max: 1000,\r\n              step: 1,\r\n              value: [100, 600],\r\n              condition: ({ options }) =>\r\n                options.find(option => option.id === 'dynamic-mode').value === 'ThresholdRange',\r\n              commands: {\r\n                commandName: 'setThresholdRange',\r\n                commandOptions: {\r\n                  toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Shapes',\r\n    uiType: 'ohif.radioGroup',\r\n    props: {\r\n      label: 'Shapes',\r\n      evaluate: {\r\n        name: 'evaluate.cornerstone.segmentation',\r\n        toolNames: ['CircleScissor', 'SphereScissor', 'RectangleScissor'],\r\n      },\r\n      icon: 'icon-tool-shape',\r\n      options: [\r\n        {\r\n          name: 'Shape',\r\n          type: 'radio',\r\n          value: 'CircleScissor',\r\n          id: 'shape-mode',\r\n          values: [\r\n            { value: 'CircleScissor', label: 'Circle' },\r\n            { value: 'SphereScissor', label: 'Sphere' },\r\n            { value: 'RectangleScissor', label: 'Rectangle' },\r\n          ],\r\n          commands: 'setToolActiveToolbar',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n];\r\n\r\nexport default toolbarButtons;\r\n","const colours = {\r\n  'viewport-0': 'rgb(200, 0, 0)',\r\n  'viewport-1': 'rgb(200, 200, 0)',\r\n  'viewport-2': 'rgb(0, 200, 0)',\r\n};\r\n\r\nconst colorsByOrientation = {\r\n  axial: 'rgb(200, 0, 0)',\r\n  sagittal: 'rgb(200, 200, 0)',\r\n  coronal: 'rgb(0, 200, 0)',\r\n};\r\n\r\nfunction createTools(utilityModule) {\r\n  const { toolNames, Enums } = utilityModule.exports;\r\n  return {\r\n    active: [\r\n      { toolName: toolNames.WindowLevel, bindings: [{ mouseButton: Enums.MouseBindings.Primary }] },\r\n      { toolName: toolNames.Pan, bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }] },\r\n      { toolName: toolNames.Zoom, bindings: [{ mouseButton: Enums.MouseBindings.Secondary }] },\r\n      { toolName: toolNames.StackScrollMouseWheel, bindings: [] },\r\n    ],\r\n    passive: [\r\n      {\r\n        toolName: 'CircularBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'FILL_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'CircularEraser',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'ERASE_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'SphereBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'FILL_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'SphereEraser',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'ERASE_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdCircularBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdSphereBrush',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_SPHERE',\r\n        },\r\n      },\r\n      {\r\n        toolName: 'ThresholdCircularBrushDynamic',\r\n        parentTool: 'Brush',\r\n        configuration: {\r\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\r\n          // preview: {\r\n          //   enabled: true,\r\n          // },\r\n          strategySpecificConfiguration: {\r\n            // to use the use the center segment index to determine\r\n            // if inside -> same segment, if outside -> eraser\r\n            // useCenterSegmentIndex: true,\r\n            THRESHOLD: {\r\n              isDynamic: true,\r\n              dynamicRadius: 3,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      { toolName: toolNames.CircleScissors },\r\n      { toolName: toolNames.RectangleScissors },\r\n      { toolName: toolNames.SphereScissors },\r\n      { toolName: toolNames.StackScroll },\r\n      { toolName: toolNames.Magnify },\r\n      { toolName: toolNames.SegmentationDisplay },\r\n      { toolName: toolNames.WindowLevelRegion },\r\n\r\n      { toolName: toolNames.UltrasoundDirectional },\r\n    ],\r\n    disabled: [{ toolName: toolNames.ReferenceLines }, { toolName: toolNames.AdvancedMagnify }],\r\n  };\r\n}\r\n\r\nfunction initDefaultToolGroup(extensionManager, toolGroupService, commandsManager, toolGroupId) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n  const tools = createTools(utilityModule);\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupId, tools);\r\n}\r\n\r\nfunction initMPRToolGroup(extensionManager, toolGroupService, commandsManager) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n  const servicesManager = extensionManager._servicesManager;\r\n  const { cornerstoneViewportService } = servicesManager.services;\r\n  const tools = createTools(utilityModule);\r\n  tools.disabled.push(\r\n    {\r\n      toolName: utilityModule.exports.toolNames.Crosshairs,\r\n      configuration: {\r\n        viewportIndicators: true,\r\n        viewportIndicatorsConfig: {\r\n          circleRadius: 5,\r\n          xOffset: 0.95,\r\n          yOffset: 0.05,\r\n        },\r\n        disableOnPassive: true,\r\n        autoPan: {\r\n          enabled: false,\r\n          panSize: 10,\r\n        },\r\n        getReferenceLineColor: viewportId => {\r\n          const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\r\n          const viewportOptions = viewportInfo?.viewportOptions;\r\n          if (viewportOptions) {\r\n            return (\r\n              colours[viewportOptions.id] ||\r\n              colorsByOrientation[viewportOptions.orientation] ||\r\n              '#0c0'\r\n            );\r\n          } else {\r\n            console.warn('missing viewport?', viewportId);\r\n            return '#0c0';\r\n          }\r\n        },\r\n      },\r\n    },\r\n    { toolName: utilityModule.exports.toolNames.ReferenceLines }\r\n  );\r\n  toolGroupService.createToolGroupAndAddTools('mpr', tools);\r\n}\r\n\r\nfunction initVolume3DToolGroup(extensionManager, toolGroupService) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n\r\n  const { toolNames, Enums } = utilityModule.exports;\r\n\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.TrackballRotateTool,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\r\n      },\r\n    ],\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools('volume3d', tools);\r\n}\r\n\r\nfunction initToolGroups(extensionManager, toolGroupService, commandsManager) {\r\n  initDefaultToolGroup(extensionManager, toolGroupService, commandsManager, 'default');\r\n  initMPRToolGroup(extensionManager, toolGroupService, commandsManager);\r\n  initVolume3DToolGroup(extensionManager, toolGroupService);\r\n}\r\n\r\nexport default initToolGroups;\r\n","import { hotkeys } from '@ohif/core';\r\nimport { id } from './id';\r\nimport toolbarButtons from './toolbarButtons';\r\nimport segmentationButtons from './segmentationButtons';\r\nimport initToolGroups from './initToolGroups';\r\n\r\nconst DEFAULT_TOOL_GROUP_ID = 'default';\r\nconst VOLUME3D_TOOL_GROUP_ID = 'volume3d';\r\n\r\nconst ohif = {\r\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\r\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\r\n  hangingProtocol: '@ohif/extension-default.hangingProtocolModule.default',\r\n  leftPanel: '@ohif/extension-default.panelModule.seriesList',\r\n  rightPanel: '@ohif/extension-default.panelModule.measure',\r\n};\r\n\r\nconst cornerstone = {\r\n  viewport: '@ohif/extension-cornerstone.viewportModule.cornerstone',\r\n};\r\n\r\nconst segmentation = {\r\n  panel: '@ohif/extension-cornerstone-dicom-seg.panelModule.panelSegmentation',\r\n  panelTool: '@ohif/extension-cornerstone-dicom-seg.panelModule.panelSegmentationWithTools',\r\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-seg.sopClassHandlerModule.dicom-seg',\r\n  viewport: '@ohif/extension-cornerstone-dicom-seg.viewportModule.dicom-seg',\r\n};\r\n\r\n/**\r\n * Just two dependencies to be able to render a viewport with panels in order\r\n * to make sure that the mode is working.\r\n */\r\nconst extensionDependencies = {\r\n  '@ohif/extension-default': '^3.0.0',\r\n  '@ohif/extension-cornerstone': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-seg': '^3.0.0',\r\n};\r\n\r\nfunction modeFactory({ modeConfiguration }) {\r\n  return {\r\n    /**\r\n     * Mode ID, which should be unique among modes used by the viewer. This ID\r\n     * is used to identify the mode in the viewer's state.\r\n     */\r\n    id,\r\n    routeName: 'segmentation',\r\n    /**\r\n     * Mode name, which is displayed in the viewer's UI in the workList, for the\r\n     * user to select the mode.\r\n     */\r\n    displayName: 'Segmentation',\r\n    /**\r\n     * Runs when the Mode Route is mounted to the DOM. Usually used to initialize\r\n     * Services and other resources.\r\n     */\r\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }: withAppTypes) => {\r\n      const { measurementService, toolbarService, toolGroupService } = servicesManager.services;\r\n\r\n      measurementService.clearMeasurements();\r\n\r\n      // Init Default and SR ToolGroups\r\n      initToolGroups(extensionManager, toolGroupService, commandsManager);\r\n\r\n      toolbarService.addButtons(toolbarButtons);\r\n      toolbarService.addButtons(segmentationButtons);\r\n\r\n      toolbarService.createButtonSection('primary', [\r\n        'WindowLevel',\r\n        'Pan',\r\n        'Zoom',\r\n        'TrackballRotate',\r\n        'Capture',\r\n        'Layout',\r\n        'Crosshairs',\r\n        'MoreTools',\r\n      ]);\r\n      toolbarService.createButtonSection('segmentationToolbox', ['BrushTools', 'Shapes']);\r\n    },\r\n    onModeExit: ({ servicesManager }: withAppTypes) => {\r\n      const {\r\n        toolGroupService,\r\n        syncGroupService,\r\n        toolbarService,\r\n        segmentationService,\r\n        cornerstoneViewportService,\r\n        uiDialogService,\r\n        uiModalService,\r\n      } = servicesManager.services;\r\n\r\n      uiDialogService.dismissAll();\r\n      uiModalService.hide();\r\n      toolGroupService.destroy();\r\n      syncGroupService.destroy();\r\n      segmentationService.destroy();\r\n      cornerstoneViewportService.destroy();\r\n    },\r\n    /** */\r\n    validationTags: {\r\n      study: [],\r\n      series: [],\r\n    },\r\n    /**\r\n     * A boolean return value that indicates whether the mode is valid for the\r\n     * modalities of the selected studies. Currently we don't have stack viewport\r\n     * segmentations and we should exclude them\r\n     */\r\n    isValidMode: ({ modalities }) => {\r\n      // Don't show the mode if the selected studies have only one modality\r\n      // that is not supported by the mode\r\n      const modalitiesArray = modalities.split('\\\\');\r\n      return {\r\n        valid:\r\n          modalitiesArray.length === 1\r\n            ? !['SM', 'US', 'MG', 'OT', 'DOC', 'CR'].includes(modalitiesArray[0])\r\n            : true,\r\n        description:\r\n          'The mode does not support studies that ONLY include the following modalities: SM, US, MG, OT, DOC, CR',\r\n      };\r\n    },\r\n    /**\r\n     * Mode Routes are used to define the mode's behavior. A list of Mode Route\r\n     * that includes the mode's path and the layout to be used. The layout will\r\n     * include the components that are used in the layout. For instance, if the\r\n     * default layoutTemplate is used (id: '@ohif/extension-default.layoutTemplateModule.viewerLayout')\r\n     * it will include the leftPanels, rightPanels, and viewports. However, if\r\n     * you define another layoutTemplate that includes a Footer for instance,\r\n     * you should provide the Footer component here too. Note: We use Strings\r\n     * to reference the component's ID as they are registered in the internal\r\n     * ExtensionManager. The template for the string is:\r\n     * `${extensionId}.{moduleType}.${componentId}`.\r\n     */\r\n    routes: [\r\n      {\r\n        path: 'template',\r\n        layoutTemplate: ({ location, servicesManager }) => {\r\n          return {\r\n            id: ohif.layout,\r\n            props: {\r\n              leftPanels: [ohif.leftPanel],\r\n              rightPanels: [segmentation.panelTool],\r\n              viewports: [\r\n                {\r\n                  namespace: cornerstone.viewport,\r\n                  displaySetsToDisplay: [ohif.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: segmentation.viewport,\r\n                  displaySetsToDisplay: [segmentation.sopClassHandler],\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ],\r\n    /** List of extensions that are used by the mode */\r\n    extensions: extensionDependencies,\r\n    /** HangingProtocol used by the mode */\r\n    // Commented out to just use the most applicable registered hanging protocol\r\n    // The example is used for a grid layout to specify that as a preferred layout\r\n    // hangingProtocol: ['@ohif/mnGrid'],\r\n    /** SopClassHandlers used by the mode */\r\n    sopClassHandlers: [ohif.sopClassHandler, segmentation.sopClassHandler],\r\n    /** hotkeys for mode */\r\n    hotkeys: [...hotkeys.defaults.hotkeyBindings],\r\n  };\r\n}\r\n\r\nconst mode = {\r\n  id,\r\n  modeFactory,\r\n  extensionDependencies,\r\n};\r\n\r\nexport default mode;\r\n"],"names":["id","packageJson","createButton","ToolbarService","ReferenceLinesListeners","commandName","context","setToolActiveToolbar","commandOptions","toolGroupIds","uiType","props","icon","label","commands","evaluate","type","name","disabledText","rows","columns","groupId","primary","tooltip","secondary","items","listeners","ViewportGridService","EVENTS","ACTIVE_VIEWPORT_ID_CHANGED","VIEWPORTS_READY","toolNames","options","min","max","step","value","values","commandsManager","run","toolName","thresholdRangeOption","find","option","condition","colours","colorsByOrientation","axial","sagittal","coronal","createTools","utilityModule","Enums","exports","active","WindowLevel","bindings","mouseButton","MouseBindings","Primary","Pan","Auxiliary","Zoom","Secondary","StackScrollMouseWheel","passive","parentTool","configuration","activeStrategy","strategySpecificConfiguration","THRESHOLD","isDynamic","dynamicRadius","CircleScissors","RectangleScissors","SphereScissors","StackScroll","Magnify","SegmentationDisplay","WindowLevelRegion","UltrasoundDirectional","disabled","ReferenceLines","AdvancedMagnify","extensionManager","toolGroupService","toolGroupId","tools","getModuleEntry","createToolGroupAndAddTools","initDefaultToolGroup","servicesManager","_servicesManager","cornerstoneViewportService","services","push","Crosshairs","viewportIndicators","viewportIndicatorsConfig","circleRadius","xOffset","yOffset","disableOnPassive","autoPan","enabled","panSize","getReferenceLineColor","viewportId","viewportInfo","getViewportInfo","viewportOptions","orientation","console","warn","initMPRToolGroup","TrackballRotateTool","initVolume3DToolGroup","ohif","cornerstone","segmentation","extensionDependencies","modeFactory","modeConfiguration","routeName","displayName","onModeEnter","measurementService","toolbarService","clearMeasurements","initToolGroups","addButtons","toolbarButtons","segmentationButtons","createButtonSection","onModeExit","syncGroupService","segmentationService","uiDialogService","uiModalService","dismissAll","hide","destroy","validationTags","study","series","isValidMode","modalities","modalitiesArray","split","valid","length","includes","description","routes","path","layoutTemplate","location","leftPanels","rightPanels","viewports","namespace","displaySetsToDisplay","extensions","sopClassHandlers","hotkeys","defaults","hotkeyBindings"],"sourceRoot":""}