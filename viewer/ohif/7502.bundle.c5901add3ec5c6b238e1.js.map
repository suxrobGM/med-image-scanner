{"version":3,"file":"7502.bundle.c5901add3ec5c6b238e1.js","mappings":"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","sources":["webpack:///../../../modes/microscopy/src/id.js","webpack:///../../../modes/microscopy/src/toolbarButtons.js","webpack:///../../../modes/microscopy/src/index.tsx"],"sourcesContent":["import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\n\r\nexport { id };\r\n","import { ToolbarService } from '@ohif/core';\r\n\r\nconst toolbarButtons = [\r\n  {\r\n    id: 'MeasurementTools',\r\n    uiType: 'ohif.splitButton',\r\n    props: {\r\n      groupId: 'MeasurementTools',\r\n      // group evaluate to determine which item should move to the top\r\n      evaluate: 'evaluate.group.promoteToPrimary',\r\n      primary: ToolbarService.createButton({\r\n        id: 'line',\r\n        icon: 'tool-length',\r\n        label: 'Line',\r\n        tooltip: 'Line',\r\n        commands: [\r\n          {\r\n            commandName: 'setToolActive',\r\n            commandOptions: { toolName: 'line' },\r\n            context: 'MICROSCOPY',\r\n          },\r\n        ],\r\n        evaluate: 'evaluate.microscopyTool',\r\n      }),\r\n      secondary: {\r\n        icon: 'chevron-down',\r\n        tooltip: 'More Measure Tools',\r\n      },\r\n      items: [\r\n        ToolbarService.createButton({\r\n          id: 'line',\r\n          icon: 'tool-length',\r\n          label: 'Line',\r\n          tooltip: 'Line',\r\n          commands: [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: { toolName: 'line' },\r\n              context: 'MICROSCOPY',\r\n            },\r\n          ],\r\n          evaluate: 'evaluate.microscopyTool',\r\n        }),\r\n        ToolbarService.createButton({\r\n          id: 'point',\r\n          icon: 'tool-point',\r\n          label: 'Point',\r\n          tooltip: 'Point Tool',\r\n          commands: [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: { toolName: 'point' },\r\n              context: 'MICROSCOPY',\r\n            },\r\n          ],\r\n          evaluate: 'evaluate.microscopyTool',\r\n        }),\r\n        // Point Tool was previously defined\r\n        ToolbarService.createButton({\r\n          id: 'polygon',\r\n          icon: 'tool-polygon',\r\n          label: 'Polygon',\r\n          tooltip: 'Polygon Tool',\r\n          commands: [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: { toolName: 'polygon' },\r\n              context: 'MICROSCOPY',\r\n            },\r\n          ],\r\n          evaluate: 'evaluate.microscopyTool',\r\n        }),\r\n        ToolbarService.createButton({\r\n          id: 'circle',\r\n          icon: 'tool-circle',\r\n          label: 'Circle',\r\n          tooltip: 'Circle Tool',\r\n          commands: [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: { toolName: 'circle' },\r\n              context: 'MICROSCOPY',\r\n            },\r\n          ],\r\n          evaluate: 'evaluate.microscopyTool',\r\n        }),\r\n        ToolbarService.createButton({\r\n          id: 'box',\r\n          icon: 'tool-rectangle',\r\n          label: 'Box',\r\n          tooltip: 'Box Tool',\r\n          commands: [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: { toolName: 'box' },\r\n              context: 'MICROSCOPY',\r\n            },\r\n          ],\r\n          evaluate: 'evaluate.microscopyTool',\r\n        }),\r\n        ToolbarService.createButton({\r\n          id: 'freehandpolygon',\r\n          icon: 'tool-freehand-polygon',\r\n          label: 'Freehand Polygon',\r\n          tooltip: 'Freehand Polygon Tool',\r\n          commands: [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: { toolName: 'freehandpolygon' },\r\n              context: 'MICROSCOPY',\r\n            },\r\n          ],\r\n          evaluate: 'evaluate.microscopyTool',\r\n        }),\r\n        ToolbarService.createButton({\r\n          id: 'freehandline',\r\n          icon: 'tool-freehand-line',\r\n          label: 'Freehand Line',\r\n          tooltip: 'Freehand Line Tool',\r\n          commands: [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: { toolName: 'freehandline' },\r\n              context: 'MICROSCOPY',\r\n            },\r\n          ],\r\n          evaluate: 'evaluate.microscopyTool',\r\n        }),\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'dragPan',\r\n    uiType: 'ohif.radioGroup',\r\n    props: {\r\n      icon: 'tool-move',\r\n      label: 'Pan',\r\n      commands: [\r\n        {\r\n          commandName: 'setToolActive',\r\n          commandOptions: { toolName: 'dragPan' },\r\n          context: 'MICROSCOPY',\r\n        },\r\n      ],\r\n      evaluate: 'evaluate.microscopyTool',\r\n    },\r\n  },\r\n  {\r\n    id: 'TagBrowser',\r\n    uiType: 'ohif.radioGroup',\r\n    props: {\r\n      icon: 'dicom-tag-browser',\r\n      label: 'Dicom Tag Browser',\r\n      commands: [\r\n        {\r\n          commandName: 'openDICOMTagViewer',\r\n        },\r\n      ],\r\n      evaluate: 'evaluate.action',\r\n    },\r\n  },\r\n];\r\n\r\nexport default toolbarButtons;\r\n","import { hotkeys } from '@ohif/core';\r\nimport i18n from 'i18next';\r\n\r\nimport { id } from './id';\r\nimport toolbarButtons from './toolbarButtons';\r\n\r\nconst ohif = {\r\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\r\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\r\n  hangingProtocols: '@ohif/extension-default.hangingProtocolModule.default',\r\n  leftPanel: '@ohif/extension-default.panelModule.seriesList',\r\n  rightPanel: '@ohif/extension-default.panelModule.measure',\r\n};\r\n\r\nexport const cornerstone = {\r\n  viewport: '@ohif/extension-cornerstone.viewportModule.cornerstone',\r\n};\r\n\r\nconst dicomvideo = {\r\n  sopClassHandler: '@ohif/extension-dicom-video.sopClassHandlerModule.dicom-video',\r\n  viewport: '@ohif/extension-dicom-video.viewportModule.dicom-video',\r\n};\r\n\r\nconst dicompdf = {\r\n  sopClassHandler: '@ohif/extension-dicom-pdf.sopClassHandlerModule.dicom-pdf',\r\n  viewport: '@ohif/extension-dicom-pdf.viewportModule.dicom-pdf',\r\n};\r\n\r\nconst extensionDependencies = {\r\n  // Can derive the versions at least process.env.from npm_package_version\r\n  '@ohif/extension-default': '^3.0.0',\r\n  '@ohif/extension-cornerstone': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-sr': '^3.0.0',\r\n  '@ohif/extension-dicom-pdf': '^3.0.1',\r\n  '@ohif/extension-dicom-video': '^3.0.1',\r\n  '@ohif/extension-dicom-microscopy': '^3.0.0',\r\n};\r\n\r\nfunction modeFactory({ modeConfiguration }) {\r\n  return {\r\n    // TODO: We're using this as a route segment\r\n    // We should not be.\r\n    id,\r\n    routeName: 'microscopy',\r\n    displayName: i18n.t('Modes:Microscopy'),\r\n\r\n    /**\r\n     * Lifecycle hooks\r\n     */\r\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }: withAppTypes) => {\r\n      const { toolbarService } = servicesManager.services;\r\n\r\n      toolbarService.addButtons(toolbarButtons);\r\n      toolbarService.createButtonSection('primary', ['MeasurementTools', 'dragPan', 'TagBrowser']);\r\n    },\r\n\r\n    onModeExit: ({ servicesManager }: withAppTypes) => {\r\n      const { toolbarService, uiDialogService, uiModalService } = servicesManager.services;\r\n\r\n      uiDialogService.dismissAll();\r\n      uiModalService.hide();\r\n      toolbarService.reset();\r\n    },\r\n\r\n    validationTags: {\r\n      study: [],\r\n      series: [],\r\n    },\r\n\r\n    isValidMode: ({ modalities }) => {\r\n      const modalities_list = modalities.split('\\\\');\r\n\r\n      return {\r\n        valid: modalities_list.includes('SM'),\r\n        description: 'Microscopy mode only supports the SM modality',\r\n      };\r\n    },\r\n\r\n    routes: [\r\n      {\r\n        path: 'microscopy',\r\n        /*init: ({ servicesManager, extensionManager }) => {\r\n          //defaultViewerRouteInit\r\n        },*/\r\n        layoutTemplate: ({ location, servicesManager }) => {\r\n          return {\r\n            id: ohif.layout,\r\n            props: {\r\n              leftPanels: [ohif.leftPanel],\r\n              leftPanelClosed: true, // we have problem with rendering thumbnails for microscopy images\r\n              rightPanelClosed: true, // we do not have the save microscopy measurements yet\r\n              rightPanels: ['@ohif/extension-dicom-microscopy.panelModule.measure'],\r\n              viewports: [\r\n                {\r\n                  namespace: '@ohif/extension-dicom-microscopy.viewportModule.microscopy-dicom',\r\n                  displaySetsToDisplay: [\r\n                    '@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopySopClassHandler',\r\n                    '@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopySRSopClassHandler',\r\n                  ],\r\n                },\r\n                {\r\n                  namespace: dicomvideo.viewport,\r\n                  displaySetsToDisplay: [dicomvideo.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicompdf.viewport,\r\n                  displaySetsToDisplay: [dicompdf.sopClassHandler],\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ],\r\n    extensions: extensionDependencies,\r\n    hangingProtocol: ['default'],\r\n\r\n    // Order is important in sop class handlers when two handlers both use\r\n    // the same sop class under different situations.  In that case, the more\r\n    // general handler needs to come last.  For this case, the dicomvideo must\r\n    // come first to remove video transfer syntax before ohif uses images\r\n    sopClassHandlers: [\r\n      '@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopySopClassHandler',\r\n      '@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopySRSopClassHandler',\r\n      dicomvideo.sopClassHandler,\r\n      dicompdf.sopClassHandler,\r\n    ],\r\n    hotkeys: [...hotkeys.defaults.hotkeyBindings],\r\n    ...modeConfiguration,\r\n  };\r\n}\r\n\r\nconst mode = {\r\n  id,\r\n  modeFactory,\r\n  extensionDependencies,\r\n};\r\n\r\nexport default mode;\r\n"],"names":["id","packageJson","uiType","props","groupId","evaluate","primary","ToolbarService","createButton","icon","label","tooltip","commands","commandName","commandOptions","toolName","context","secondary","items","ohif","cornerstone","viewport","dicomvideo","dicompdf","extensionDependencies","modeFactory","modeConfiguration","routeName","displayName","i18n","t","onModeEnter","servicesManager","extensionManager","commandsManager","toolbarService","services","addButtons","toolbarButtons","createButtonSection","onModeExit","uiDialogService","uiModalService","dismissAll","hide","reset","validationTags","study","series","isValidMode","modalities","valid","split","includes","description","routes","path","layoutTemplate","location","leftPanels","leftPanelClosed","rightPanelClosed","rightPanels","viewports","namespace","displaySetsToDisplay","extensions","hangingProtocol","sopClassHandlers","hotkeys","defaults","hotkeyBindings"],"sourceRoot":""}