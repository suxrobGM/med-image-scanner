{"version":3,"file":"9579.bundle.5f9ef61543e3ecccf458.js","mappings":"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","sources":["webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/VideoViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/addImageSlicesToViewports.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/addVolumesToViewports.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/colors/colormap.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/now.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getVOILut.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/setToPixelCoordinateSystem.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/doesImageNeedToBeRendered.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/initializeRenderCanvas.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/saveLastRendered.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/renderColorImage.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/generateColorLUT.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/storedRGBAPixelDataToCanvasImageData.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/storedColorPixelDataToCanvasImageData.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/computeAutoVoi.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/lutMatches.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getLut.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/generateLut.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getModalityLut.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/renderGrayscaleImage.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataPET.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageData.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataRGBA.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataPseudocolorLUT.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataPseudocolorLUTPET.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/renderPseudoColorImage.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/drawImageSync.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/calculateTransform.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/canvasToPixel.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/correctShift.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/setDefaultViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getDefaultViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/createViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getImageFitScale.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getImageSize.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/getTransform.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/pixelToCanvas.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/resetCamera.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/resize.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/fitToWindow.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/transform.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/cpuFallback/rendering/validator.ts","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/Volume.js","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/createVolumeActor.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/helpers/setDefaultVolumeVOI.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/RenderingEngine/vtkClasses/vtkSharedVolumeMapper.js","webpack:///../../../node_modules/@cornerstonejs/core/src/cache/cache.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/constants/rendering.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/constants/epsilon.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/RequestType.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/ViewportStatus.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/BlendModes.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/GeometryType.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/DynamicOperatorType.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/enums/CalibrationTypes.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/getEnabledElement.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/Settings.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/loaders/imageLoader.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/loaders/volumeLoader.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/metaData.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/requestPool/imageLoadPoolManager.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/requestPool/requestPoolManager.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/cacheUtils.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/colormap.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/createLinearRGBTransferFunction.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/getImageSliceDataForVolumeViewport.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/transferFunctionUtils.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/transformWorldToIndex.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/utilities/triggerEvent.ts","webpack:///../../../node_modules/@cornerstonejs/core/src/webWorkerManager/webWorkerManager.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/cursors/SVGCursorDescriptor.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/annotation/BidirectionalTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/base/AnnotationTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/displayTools/Labelmap/labelmapConfig.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/segmentation/RectangleROIThresholdTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/tools/segmentation/RectangleROIStartEndThresholdTool.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/annotationFrameRange.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/annotationHydration.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/boundingBox/getBoundingBoxAroundShape.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/calibrateImageSpacing.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/cine/events.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/cine/playClip.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/clip.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contourSegmentation/addContourSegmentationAnnotation.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contourSegmentation/removeContourSegmentationAnnotation.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/calculatePerimeter.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/findHandlePolylineIndex.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/generateContourSetsFromLabelmap.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/AnnotationToPointData.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/getContourHolesDataCanvas.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/getContourHolesDataWorld.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/contours/updateContourPolyline.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/debounce.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/drawing/getTextBoxCoordsCanvas.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/getCalibratedUnits.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/getSphereBoundsInfo.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/getViewportForAnnotation.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/index.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/isObject.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/aabb/intersectAABB.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/aabb/distanceToPointSquared.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/aabb/distanceToPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/basic/Calculator.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/basic/BasicStatsCalculator.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/ellipse/pointInEllipse.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/ellipse/getCanvasEllipseCorners.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/line/distanceToPointSquaredInfo.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/line/distanceToPointSquared.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/line/distanceToPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/line/intersectLine.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/line/isPointOnLineSegment.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/point/distanceToPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/point/distanceToPointSquared.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/point/mirror.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/isClosed.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/containsPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/containsPoints.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getArea.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getSignedArea.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getWindingDirection.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getNormal3.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getNormal2.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/areLineSegmentsIntersecting.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getLineSegmentIntersectionsIndexes.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getLinesIntersection.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/combinePolyline.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getFirstLineSegmentIntersectionIndexes.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/intersectPolyline.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/decimate.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getLineSegmentIntersectionsCoordinates.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getClosestLineSegmentIntersection.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/getSubPixelSpacingAndXYDirections.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/pointsAreWithinCloseContourProximity.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/addCanvasPointsToArray.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/pointCanProjectOnLine.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/projectTo2D.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/polyline/isPointInsidePolyline3D.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/rectangle/distanceToPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/sphere/pointInSphere.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/vec2/liangBarksyClip.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/planarFreehandROITool/index.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/planar/index.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/pointInShapeCallback.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/pointInSurroundingSphereCallback.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/pointToString.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/polyData/utils.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/rectangleROITool/isAxisAlignedRectangle.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/scroll.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/InterpolationManager/InterpolationManager.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/contourAndFindLargestBidirectional.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/createImageIdReferenceMap.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/floodFill.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/getHoveredContourSegmentationAnnotation.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/getSegmentAtLabelmapBorder.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/getSegmentAtWorldPoint.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/invalidateBrushCursor.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/segmentation/utilities.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/throttle.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/touch/index.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/triggerAnnotationRenderForToolGroupIds.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewportFilters/filterViewportsWithToolEnabled.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewportFilters/filterViewportsWithParallelNormals.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewportFilters/getViewportIdsWithToolToRender.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewportFilters/filterViewportsWithFrameOfReferenceUID.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewport/isViewportPreScaled.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/viewport/jumpToWorld.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/math/vec3/interpolateVec3.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/colorbar/ColorbarCanvas.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/colorbar/Colorbar.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/colorbar/ViewportColorbar.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/colorbar/enums/ColorbarRangeTextPosition.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/windowlevel/getLuminanceFromRegion.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/windowlevel/calculateMinMaxMean.ts","webpack:///../../../node_modules/@cornerstonejs/tools/src/utilities/voi/windowlevel/extractWindowLevelRegionToolData.ts","webpack:///../../../node_modules/@icr/polyseg-wasm/dist/ICRPolySeg.js","webpack:///../../../node_modules/@icr/polyseg-wasm/dist/index.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/ContourLoopExtraction.js","webpack:///../../../node_modules/@cornerstonejs/tools/src/workers/polySegConverters.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/DataModel/PiecewiseFunction.js","webpack:///../../../node_modules/@kitware/vtk.js/Common/DataModel/Plane.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/ImageMarchingSquares.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/Camera.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ImageMapper.js","webpack:///../../../node_modules/@kitware/vtk.js/Rendering/Core/ImageSlice.js","webpack:///../../../node_modules/comlink/dist/esm/comlink.mjs","webpack:///../../../node_modules/d3-array/src/bisector.js"],"sourcesContent":["import { vec3 } from 'gl-matrix';\nimport {\n  Events as EVENTS,\n  VideoEnums as VideoViewportEnum,\n  MetadataModules,\n} from '../enums';\nimport type {\n  IVideoViewport,\n  VideoViewportProperties,\n  Point3,\n  Point2,\n  ICamera,\n  InternalVideoCamera,\n  VideoViewportInput,\n  VOIRange,\n  ICanvasActor,\n  IImage,\n  ViewReferenceSpecifier,\n  ViewReference,\n  ReferenceCompatibleOptions,\n  ImageSetOptions,\n} from '../types';\nimport * as metaData from '../metaData';\nimport { Transform } from './helpers/cpuFallback/rendering/transform';\nimport { triggerEvent } from '../utilities';\nimport Viewport from './Viewport';\nimport { getOrCreateCanvas } from './helpers';\nimport CanvasActor from './CanvasActor';\nimport cache from '../cache';\n\n/**\n * A data type for the scalar data for video data.\n */\nexport type CanvasScalarData = Uint8ClampedArray & {\n  frameNumber?: number;\n  getRange?: () => [number, number];\n};\n\n/**\n * An object representing a single stack viewport, which is a camera\n * looking into an internal scene, and an associated target output `canvas`.\n */\nclass VideoViewport extends Viewport implements IVideoViewport {\n  public static frameRangeExtractor = /(\\/frames\\/|[&?]frameNumber=)([^/&?]*)/i;\n\n  public modality;\n  // Viewport Data\n  protected imageId: string;\n  readonly uid;\n  readonly renderingEngineId: string;\n  readonly canvasContext: CanvasRenderingContext2D;\n  private videoElement?: HTMLVideoElement;\n  private videoWidth = 0;\n  private videoHeight = 0;\n\n  private loop = true;\n  private mute = true;\n  private isPlaying = false;\n  private scrollSpeed = 1;\n  private playbackRate = 1;\n  private scalarData: CanvasScalarData;\n\n  /**\n   * This is used to pause initially so that we get at least one render to allow\n   * navigating frames.  Otherwise the viewport is blank initially until the user\n   * hits play manually.\n   */\n  private initialRender: () => void;\n\n  /**\n   * The range is the set of frames to play\n   */\n  private frameRange: [number, number] = [0, 0];\n\n  protected metadata;\n\n  /**\n   * The fps, frames per second is used to calculate time/frame mapping values.\n   * It is provided by the CINE Module in the metadata, defaulting to 30 if not\n   * provided.\n   */\n  private fps = 30;\n\n  /** The number of frames in the video */\n  private numberOfFrames: number;\n\n  private videoCamera: InternalVideoCamera = {\n    panWorld: [0, 0],\n    parallelScale: 1,\n  };\n\n  /**\n   * feFilter is an inline string value for the CSS filter on the video\n   * CSS filters can reference SVG filters, so for the typical use case here\n   * the CSS filter is actually an link link to a SVG filter.\n   */\n  private feFilter: string;\n\n  /**\n   * An average white point value, used to color balance the image so that\n   * the given white is mapped to [255,255,255] via multiplication per channel.\n   */\n  private averageWhite: [number, number, number];\n\n  /**\n   * The VOI Range is used to apply contrast/brightness adjustments to the image.\n   */\n  private voiRange: VOIRange = {\n    lower: 0,\n    upper: 255,\n  };\n\n  constructor(props: VideoViewportInput) {\n    super({\n      ...props,\n      canvas: props.canvas || getOrCreateCanvas(props.element),\n    });\n    this.canvasContext = this.canvas.getContext('2d');\n    this.renderingEngineId = props.renderingEngineId;\n\n    this.element.setAttribute('data-viewport-uid', this.id);\n    this.element.setAttribute(\n      'data-rendering-engine-uid',\n      this.renderingEngineId\n    );\n\n    this.videoElement = document.createElement('video');\n    this.videoElement.muted = this.mute;\n    this.videoElement.loop = this.loop;\n    this.videoElement.autoplay = true;\n    this.videoElement.crossOrigin = 'anonymous';\n\n    this.addEventListeners();\n    this.resize();\n  }\n\n  public static get useCustomRenderingPipeline() {\n    return true;\n  }\n\n  private addEventListeners() {\n    this.canvas.addEventListener(\n      EVENTS.ELEMENT_DISABLED,\n      this.elementDisabledHandler\n    );\n  }\n\n  private removeEventListeners() {\n    this.canvas.removeEventListener(\n      EVENTS.ELEMENT_DISABLED,\n      this.elementDisabledHandler\n    );\n  }\n\n  private elementDisabledHandler() {\n    this.removeEventListeners();\n    this.videoElement.remove();\n  }\n\n  public getImageDataMetadata(image: IImage | string) {\n    const imageId = typeof image === 'string' ? image : image.imageId;\n    const imagePlaneModule = metaData.get(MetadataModules.IMAGE_PLANE, imageId);\n\n    let rowCosines = <Point3>imagePlaneModule.rowCosines;\n    let columnCosines = <Point3>imagePlaneModule.columnCosines;\n\n    // if null or undefined\n    if (rowCosines == null || columnCosines == null) {\n      rowCosines = <Point3>[1, 0, 0];\n      columnCosines = <Point3>[0, 1, 0];\n    }\n\n    const rowCosineVec = vec3.fromValues(\n      rowCosines[0],\n      rowCosines[1],\n      rowCosines[2]\n    );\n    const colCosineVec = vec3.fromValues(\n      columnCosines[0],\n      columnCosines[1],\n      columnCosines[2]\n    );\n\n    const { rows, columns } = imagePlaneModule;\n    const scanAxisNormal = vec3.create();\n    vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n\n    let origin = imagePlaneModule.imagePositionPatient;\n    // if null or undefined\n    if (origin == null) {\n      origin = [0, 0, 0];\n    }\n\n    const xSpacing = imagePlaneModule.columnPixelSpacing || 1;\n    const ySpacing = imagePlaneModule.rowPixelSpacing || 1;\n    const xVoxels = imagePlaneModule.columns;\n    const yVoxels = imagePlaneModule.rows;\n\n    const zSpacing = 1;\n    const zVoxels = 1;\n\n    this.hasPixelSpacing = !!imagePlaneModule.columnPixelSpacing;\n    return {\n      bitsAllocated: 8,\n      numComps: 3,\n      origin,\n      rows,\n      columns,\n      direction: [...rowCosineVec, ...colCosineVec, ...scanAxisNormal],\n      dimensions: [xVoxels, yVoxels, zVoxels],\n      spacing: [xSpacing, ySpacing, zSpacing],\n      hasPixelSpacing: this.hasPixelSpacing,\n      numVoxels: xVoxels * yVoxels * zVoxels,\n      imagePlaneModule,\n    };\n  }\n\n  /**\n   * This is a wrapper for setVideo to allow generic behaviour\n   *\n   * @param _groupId - the id for the overall set of image ids.  Unused for video viewport.\n   * @param imageIds - a singleton list containing the imageId of a video.\n   */\n  public setDataIds(imageIds: string[], options?: ImageSetOptions) {\n    this.setVideo(\n      imageIds[0],\n      (options?.viewReference?.sliceIndex as number) || 1\n    );\n  }\n\n  /**\n   * Sets the video image id to show and hte frame number.\n   * Requirements are to have the imageUrlModule in the metadata\n   * with the rendered endpoint being the raw video in video/mp4 format.\n   */\n  public setVideo(imageId: string, frameNumber?: number): Promise<unknown> {\n    this.imageId = Array.isArray(imageId) ? imageId[0] : imageId;\n    const imageUrlModule = metaData.get(MetadataModules.IMAGE_URL, imageId);\n    if (!imageUrlModule?.rendered) {\n      throw new Error(\n        `Video Image ID ${imageId} does not have a rendered video view`\n      );\n    }\n    const { rendered } = imageUrlModule;\n    const generalSeries = metaData.get(MetadataModules.GENERAL_SERIES, imageId);\n    this.modality = generalSeries?.Modality;\n    this.metadata = this.getImageDataMetadata(imageId);\n    let { cineRate, numberOfFrames } = metaData.get(\n      MetadataModules.CINE,\n      imageId\n    );\n    this.numberOfFrames = numberOfFrames;\n\n    return this.setVideoURL(rendered).then(() => {\n      if (!numberOfFrames || numberOfFrames === 1) {\n        numberOfFrames = Math.round(\n          this.videoElement.duration * (cineRate || 30)\n        );\n      }\n      if (!cineRate) {\n        cineRate = Math.round(numberOfFrames / this.videoElement.duration);\n      }\n      this.fps = cineRate;\n      this.numberOfFrames = numberOfFrames;\n      // 1 based range setting\n      this.setFrameRange([1, numberOfFrames]);\n      // The initial render allows us to set the frame position - rendering needs\n      // to start already playing\n      this.initialRender = () => {\n        this.initialRender = null;\n        this.pause();\n        this.setFrameNumber(frameNumber || 1);\n      };\n\n      // This is ugly, but without it, the video often fails to render initially\n      // so having a play, followed by a pause fixes things.\n      // 25 ms is a tested value that seems to work to prevent exceptions\n      return new Promise((resolve) => {\n        window.setTimeout(() => {\n          this.setFrameNumber(frameNumber || 1);\n          resolve(this);\n        }, 25);\n      });\n    });\n  }\n\n  public async setVideoURL(videoURL: string) {\n    return new Promise((resolve) => {\n      this.videoElement.src = videoURL;\n      this.videoElement.preload = 'auto';\n\n      const loadedMetadataEventHandler = () => {\n        this.videoWidth = this.videoElement.videoWidth;\n        this.videoHeight = this.videoElement.videoHeight;\n        this.videoElement.removeEventListener(\n          'loadedmetadata',\n          loadedMetadataEventHandler\n        );\n\n        this.refreshRenderValues();\n\n        resolve(true);\n      };\n\n      this.videoElement.addEventListener(\n        'loadedmetadata',\n        loadedMetadataEventHandler\n      );\n    });\n  }\n\n  /**\n   * Gets all the image ids associated with this video element.  This will\n   * have # of frames elements.\n   */\n  public getImageIds(): string[] {\n    const imageIds = new Array<string>(this.numberOfFrames);\n    const baseImageId = this.imageId.replace(/[0-9]+$/, '');\n    for (let i = 0; i < this.numberOfFrames; i++) {\n      imageIds[i] = `${baseImageId}${i + 1}`;\n    }\n    return imageIds;\n  }\n\n  public togglePlayPause(): boolean {\n    if (this.isPlaying) {\n      this.pause();\n      return false;\n    } else {\n      this.play();\n      return true;\n    }\n  }\n\n  public async play() {\n    try {\n      if (!this.isPlaying) {\n        this.isPlaying = true;\n        // Play returns a promise that is true when playing completes.\n        await this.videoElement.play();\n        this.renderWhilstPlaying();\n      }\n    } catch (e) {\n      // No-op, an exception sometimes gets thrown on the initial play, not\n      // quite sure why.  Catching it prevents displaying an error\n    }\n  }\n\n  public pause() {\n    try {\n      this.isPlaying = false;\n      this.videoElement.pause();\n    } catch (e) {\n      // No-op - sometimes this happens on startup\n    }\n  }\n\n  public async scroll(delta = 1) {\n    await this.pause();\n\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    const currentTime = videoElement.currentTime;\n    const newTime = currentTime + (delta * this.scrollSpeed) / this.fps;\n\n    videoElement.currentTime = newTime;\n\n    // Need to wait for seek update\n    const seekEventListener = (evt) => {\n      renderFrame();\n\n      videoElement.removeEventListener('seeked', seekEventListener);\n    };\n\n    videoElement.addEventListener('seeked', seekEventListener);\n  }\n\n  public async start() {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    videoElement.currentTime = 0;\n\n    if (videoElement.paused) {\n      // Need to wait for seek update\n      const seekEventListener = (evt) => {\n        renderFrame();\n\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n\n  public async end() {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    videoElement.currentTime = videoElement.duration;\n\n    if (videoElement.paused) {\n      // Need to wait for seek update\n      const seekEventListener = (evt) => {\n        renderFrame();\n\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n\n  public async setTime(timeInSeconds: number) {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n\n    videoElement.currentTime = timeInSeconds;\n\n    if (videoElement.paused) {\n      // Need to wait for seek update\n      const seekEventListener = (evt) => {\n        renderFrame();\n\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n\n  // Sets the frame number - note according to DICOM, this is 1 based\n  public async setFrameNumber(frame: number) {\n    this.setTime((frame - 1) / this.fps);\n  }\n\n  /**\n   * Sets the playback frame range.  The video will play over the given set\n   * of frames (assuming it is playing).\n   *\n   * @param frameRange - the minimum to maximum (inclusive) frames to play over\n   * @returns\n   */\n  public setFrameRange(frameRange: number[]) {\n    if (!frameRange) {\n      this.frameRange = [1, this.numberOfFrames];\n      return;\n    }\n    if (frameRange.length !== 2 || frameRange[0] === frameRange[1]) {\n      return;\n    }\n    this.frameRange = [frameRange[0], frameRange[1]];\n  }\n\n  public getFrameRange(): [number, number] {\n    return this.frameRange;\n  }\n\n  public setProperties(props: VideoViewportProperties) {\n    if (props.loop !== undefined) {\n      this.videoElement.loop = props.loop;\n    }\n\n    if (props.muted !== undefined) {\n      this.videoElement.muted = props.muted;\n    }\n\n    if (props.playbackRate !== undefined) {\n      this.setPlaybackRate(props.playbackRate);\n    }\n\n    if (props.scrollSpeed !== undefined) {\n      this.setScrollSpeed(props.scrollSpeed);\n    }\n\n    if (props.voiRange) {\n      this.setVOI(props.voiRange);\n    }\n  }\n\n  public setPlaybackRate(rate = 1) {\n    this.playbackRate = rate;\n    // Minimum playback speed in chrome is 0.0625 compared to normal\n    if (rate < 0.0625) {\n      this.pause();\n      return;\n    }\n    if (!this.videoElement) {\n      return;\n    }\n    this.videoElement.playbackRate = rate;\n    this.play();\n  }\n\n  public setScrollSpeed(\n    scrollSpeed = 1,\n    unit = VideoViewportEnum.SpeedUnit.FRAME\n  ) {\n    this.scrollSpeed =\n      unit === VideoViewportEnum.SpeedUnit.SECOND\n        ? scrollSpeed * this.fps\n        : scrollSpeed;\n  }\n\n  public getProperties = (): VideoViewportProperties => {\n    return {\n      loop: this.videoElement.loop,\n      muted: this.videoElement.muted,\n      playbackRate: this.playbackRate,\n      scrollSpeed: this.scrollSpeed,\n      voiRange: { ...this.voiRange },\n    };\n  };\n\n  public resetProperties() {\n    this.setProperties({\n      loop: false,\n      muted: true,\n    });\n  }\n\n  protected getScalarData(): CanvasScalarData {\n    if (this.scalarData?.frameNumber === this.getFrameNumber()) {\n      return this.scalarData;\n    }\n    const canvas = document.createElement('canvas');\n    canvas.width = this.videoWidth;\n    canvas.height = this.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(this.videoElement, 0, 0);\n    const canvasData = context.getImageData(\n      0,\n      0,\n      this.videoWidth,\n      this.videoHeight\n    );\n    const scalarData = canvasData.data as CanvasScalarData;\n    scalarData.getRange = () => [0, 255];\n    scalarData.frameNumber = this.getFrameNumber();\n    this.scalarData = scalarData;\n    return scalarData;\n  }\n\n  public getImageData() {\n    const { metadata } = this;\n\n    const spacing = metadata.spacing;\n\n    const imageData = {\n      dimensions: metadata.dimensions,\n      spacing,\n      origin: metadata.origin,\n      direction: metadata.direction,\n      metadata: { Modality: this.modality },\n      getScalarData: () => this.getScalarData(),\n      imageData: {\n        getDirection: () => metadata.direction,\n        getDimensions: () => metadata.dimensions,\n        getRange: () => [0, 255],\n        getScalarData: () => this.getScalarData(),\n        getSpacing: () => metadata.spacing,\n        worldToIndex: (point: Point3) => {\n          const canvasPoint = this.worldToCanvas(point);\n          const pixelCoord = this.canvasToIndex(canvasPoint);\n          return [pixelCoord[0], pixelCoord[1], 0];\n        },\n        indexToWorld: (point: Point2, destPoint?: Point3) => {\n          const canvasPoint = this.indexToCanvas([point[0], point[1]]);\n          return this.canvasToWorld(canvasPoint, destPoint);\n        },\n      },\n      hasPixelSpacing: this.hasPixelSpacing,\n      calibration: this.calibration,\n      preScale: {\n        scaled: false,\n      },\n    };\n    Object.defineProperty(imageData, 'scalarData', {\n      get: () => this.getScalarData(),\n      enumerable: true,\n    });\n    return imageData;\n  }\n\n  /**\n   * Checks to see if the imageURI is currently being displayed.  The imageURI\n   * may contain frame numbers according to the DICOM standard format, which\n   * will be stripped to compare the base image URI, and then the values used\n   * to check if that frame is currently being displayed.\n   *\n   * The DICOM standard allows for comma separated values as well, however,\n   * this is not supported here, with only a single range or single value\n   * being tested.\n   *\n   * For a single value, the time range +/- 5 frames is permitted to allow\n   * the detection to actually succeed when nearby without requiring an exact\n   * time frame to be matched.\n   *\n   * @param imageURI - containing frame number or range.\n   * @returns\n   */\n  public hasImageURI(imageURI: string): boolean {\n    // TODO - move annotationFrameRange into core so it can be used here.\n    const framesMatch = imageURI.match(VideoViewport.frameRangeExtractor);\n    const testURI = framesMatch\n      ? imageURI.substring(0, framesMatch.index)\n      : imageURI;\n    return this.imageId.indexOf(testURI) !== -1;\n  }\n\n  public setVOI(voiRange: VOIRange): void {\n    this.voiRange = voiRange;\n    this.setColorTransform();\n  }\n\n  public setWindowLevel(windowWidth = 256, windowCenter = 128) {\n    const lower = windowCenter - windowWidth / 2;\n    const upper = windowCenter + windowWidth / 2 - 1;\n    this.setVOI({ lower, upper });\n    this.setColorTransform();\n  }\n\n  public setAverageWhite(averageWhite: [number, number, number]) {\n    this.averageWhite = averageWhite;\n    this.setColorTransform();\n  }\n\n  protected setColorTransform() {\n    if (!this.voiRange && !this.averageWhite) {\n      this.feFilter = null;\n      return;\n    }\n    const white = this.averageWhite || [255, 255, 255];\n    const maxWhite = Math.max(...white);\n    const scaleWhite = white.map((c) => maxWhite / c);\n    const { lower = 0, upper = 255 } = this.voiRange || {};\n    const wlScale = (upper - lower + 1) / 255;\n    const wlDelta = lower / 255;\n    this.feFilter = `url('data:image/svg+xml,\\\n      <svg xmlns=\"http://www.w3.org/2000/svg\">\\\n        <filter id=\"colour\" color-interpolation-filters=\"linearRGB\">\\\n        <feColorMatrix type=\"matrix\" \\\n        values=\"\\\n          ${scaleWhite[0] * wlScale} 0 0 0 ${wlDelta} \\\n          0 ${scaleWhite[1] * wlScale} 0 0 ${wlDelta} \\\n          0 0 ${scaleWhite[2] * wlScale} 0 ${wlDelta} \\\n          0 0 0 1 0\" />\\\n        </filter>\\\n      </svg>#colour')`;\n\n    this.canvas.style.filter = this.feFilter;\n  }\n\n  public setCamera(camera: ICamera): void {\n    const { parallelScale, focalPoint } = camera;\n\n    // NOTE: the parallel scale should be done first\n    // because it affects the focal point later\n    if (parallelScale) {\n      this.videoCamera.parallelScale =\n        this.element.clientHeight / 2 / parallelScale;\n    }\n\n    if (focalPoint !== undefined) {\n      const focalPointCanvas = this.worldToCanvas(focalPoint);\n      const canvasCenter: Point2 = [\n        this.element.clientWidth / 2,\n        this.element.clientHeight / 2,\n      ];\n\n      const panWorldDelta: Point2 = [\n        (focalPointCanvas[0] - canvasCenter[0]) /\n          this.videoCamera.parallelScale,\n        (focalPointCanvas[1] - canvasCenter[1]) /\n          this.videoCamera.parallelScale,\n      ];\n\n      this.videoCamera.panWorld = [\n        this.videoCamera.panWorld[0] - panWorldDelta[0],\n        this.videoCamera.panWorld[1] - panWorldDelta[1],\n      ];\n    }\n\n    this.canvasContext.fillStyle = 'rgba(0,0,0,1)';\n    this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    if (this.isPlaying === false) {\n      this.renderFrame();\n    }\n  }\n\n  /**\n   * This function returns the imageID associated with either the current\n   * frame being displayed, or the range of frames being played.  This may not\n   * correspond to any particular imageId that has imageId metadata, as the\n   * format is one of:\n   * `<DICOMweb URI>/frames/<Start Frame>(-<End Frame>)?`\n   * or\n   * `<Other URI>[?&]frameNumber=<Start Frame>(-<EndFrame>)?`\n   * for a URL parameter.\n   *\n   * @returns an imageID for video\n   */\n  public getCurrentImageId() {\n    const current = this.imageId.replace(\n      '/frames/1',\n      this.isPlaying\n        ? `/frames/${this.frameRange[0]}-${this.frameRange[1]}`\n        : `/frames/${this.getFrameNumber()}`\n    );\n    return current;\n  }\n\n  /**\n   *  Gets a target id that can be used to specify how to show this\n   */\n  public getReferenceId(specifier: ViewReferenceSpecifier = {}): string {\n    const { sliceIndex: sliceIndex } = specifier;\n    if (sliceIndex === undefined) {\n      return `videoId:${this.getCurrentImageId()}`;\n    }\n    if (Array.isArray(sliceIndex)) {\n      // Just remove the 1 from the end of the base URL - TODO, handle other types\n      return `videoId:${this.imageId.substring(0, this.imageId.length - 1)}${\n        sliceIndex[0] + 1\n      }-${sliceIndex[1] + 1}`;\n    }\n    const baseTarget = this.imageId.replace(\n      '/frames/1',\n      `/frames/${1 + sliceIndex}`\n    );\n    return `videoId:${baseTarget}`;\n  }\n\n  /**\n   * Figure out if a given view can be shown in the current viewport.\n   */\n  public isReferenceViewable(\n    viewRef: ViewReference,\n    options: ReferenceCompatibleOptions = {}\n  ): boolean {\n    let { imageURI } = options;\n    const { referencedImageId, sliceIndex: sliceIndex } = viewRef;\n    if (!super.isReferenceViewable(viewRef)) {\n      return false;\n    }\n\n    const imageId = this.getCurrentImageId();\n    if (!imageURI) {\n      // Remove the dataLoader scheme and frame number\n      // TODO - handle more imageURI types.\n      const colonIndex = imageId.indexOf(':');\n      imageURI = imageId.substring(colonIndex + 1, imageId.length - 1);\n    }\n\n    if (options.withNavigation) {\n      return true;\n    }\n    const currentIndex = this.getSliceIndex();\n    if (Array.isArray(sliceIndex)) {\n      return currentIndex >= sliceIndex[0] && currentIndex <= sliceIndex[1];\n    }\n    if (sliceIndex !== undefined) {\n      return currentIndex === sliceIndex;\n    }\n    if (!referencedImageId) {\n      return false;\n    }\n    const match = referencedImageId.match(VideoViewport.frameRangeExtractor);\n    if (!match || !match[2]) {\n      return true;\n    }\n    const range = match[2].split('-').map((it) => Number(it));\n    const frame = currentIndex + 1;\n    return range[0] <= frame && frame <= (range[1] ?? range[0]);\n  }\n\n  /**\n   * Navigates the video to the specific view reference\n   */\n  public setViewReference(viewRef: ViewReference): void {\n    if (typeof viewRef.sliceIndex === 'number') {\n      this.setFrameNumber(viewRef.sliceIndex + 1);\n    } else if (Array.isArray(viewRef.sliceIndex)) {\n      this.setFrameRange(viewRef.sliceIndex);\n    }\n  }\n\n  /**\n   * Gets a view target that species what type of view is required to show\n   * the current view, or the one specified in the forTarget modifiers.\n   */\n  public getViewReference(\n    viewRefSpecifier?: ViewReferenceSpecifier\n  ): ViewReference {\n    let sliceIndex = viewRefSpecifier?.sliceIndex;\n    if (!sliceIndex) {\n      sliceIndex = this.isPlaying\n        ? [this.frameRange[0] - 1, this.frameRange[1] - 1]\n        : this.getCurrentImageIdIndex();\n    }\n    return {\n      ...super.getViewReference(viewRefSpecifier),\n      referencedImageId: this.getReferenceId(viewRefSpecifier),\n      sliceIndex: sliceIndex,\n    };\n  }\n\n  /**\n   * Gets the 1 based frame number (ala DICOM value), eg `1+ currentImageIdIndex`\n   */\n  public getFrameNumber() {\n    // Need to round this as the fps/time isn't exact\n    return 1 + this.getCurrentImageIdIndex();\n  }\n\n  public getCurrentImageIdIndex() {\n    return Math.round(this.videoElement.currentTime * this.fps);\n  }\n\n  public getSliceIndex() {\n    return this.getCurrentImageIdIndex() / this.scrollSpeed;\n  }\n\n  public getCamera(): ICamera {\n    const { parallelScale } = this.videoCamera;\n\n    const canvasCenter: Point2 = [\n      this.element.clientWidth / 2,\n      this.element.clientHeight / 2,\n    ];\n\n    // All other viewports have the focal point in canvas coordinates in the center\n    // of the canvas, so to make tools work the same, we need to do the same here\n    // and convert to the world coordinate system since focal point is in world coordinates.\n    const canvasCenterWorld = this.canvasToWorld(canvasCenter);\n\n    return {\n      parallelProjection: true,\n      focalPoint: canvasCenterWorld,\n      position: [0, 0, 0],\n      viewUp: [0, -1, 0],\n      parallelScale: this.element.clientHeight / 2 / parallelScale, // Reverse zoom direction back\n      viewPlaneNormal: [0, 0, 1],\n    };\n  }\n\n  public resetCamera = (): boolean => {\n    this.refreshRenderValues();\n\n    this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    if (this.isPlaying === false) {\n      // If its not replaying, just re-render the frame on move.\n      this.renderFrame();\n    }\n    return true;\n  };\n\n  public getNumberOfSlices = (): number => {\n    const computedSlices = Math.round(\n      (this.videoElement.duration * this.fps) / this.scrollSpeed\n    );\n    return isNaN(computedSlices) ? this.numberOfFrames : computedSlices;\n  };\n\n  public getFrameRate() {\n    return this.fps;\n  }\n\n  public getFrameOfReferenceUID = (): string => {\n    // The video itself is the frame of reference.\n    return this.videoElement.src;\n  };\n\n  public resize = (): void => {\n    const canvas = this.canvas;\n    const { clientWidth, clientHeight } = canvas;\n\n    // Set the canvas to be same resolution as the client.\n    if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n      canvas.width = clientWidth;\n      canvas.height = clientHeight;\n    }\n\n    this.refreshRenderValues();\n\n    if (this.isPlaying === false) {\n      // If its not playing, just re-render on resize.\n      this.renderFrame();\n    }\n  };\n\n  /**\n   * Converts a VideoViewport canvas coordinate to a video coordinate.\n   *\n   * @param canvasPos - to convert to world\n   * @returns World position\n   */\n  public canvasToWorld = (\n    canvasPos: Point2,\n    destPos: Point3 = [0, 0, 0]\n  ): Point3 => {\n    const pan: Point2 = this.videoCamera.panWorld; // In world coordinates\n    const worldToCanvasRatio: number = this.getWorldToCanvasRatio();\n\n    const panOffsetCanvas: Point2 = [\n      pan[0] * worldToCanvasRatio,\n      pan[1] * worldToCanvasRatio,\n    ];\n\n    const subCanvasPos: Point2 = [\n      canvasPos[0] - panOffsetCanvas[0],\n      canvasPos[1] - panOffsetCanvas[1],\n    ];\n\n    // Replace the x,y values only in place in the world position\n    // as the z is unchanging for video display\n    destPos.splice(\n      0,\n      2,\n      subCanvasPos[0] / worldToCanvasRatio,\n      subCanvasPos[1] / worldToCanvasRatio\n    );\n    return destPos;\n  };\n\n  /**\n   * Converts `[x, y, 0]` world video coordinate to canvas CSS coordinates.\n   *\n   * @param  worldPos - world coord to convert to canvas\n   * @returns Canvas position\n   */\n  public worldToCanvas = (worldPos: Point3): Point2 => {\n    const pan: Point2 = this.videoCamera.panWorld;\n    const worldToCanvasRatio: number = this.getWorldToCanvasRatio();\n\n    const canvasPos: Point2 = [\n      (worldPos[0] + pan[0]) * worldToCanvasRatio,\n      (worldPos[1] + pan[1]) * worldToCanvasRatio,\n    ];\n\n    return canvasPos;\n  };\n\n  public getPan(): Point2 {\n    const panWorld = this.videoCamera.panWorld;\n    return [panWorld[0], panWorld[1]];\n  }\n\n  public getRotation = () => 0;\n\n  /**\n   * Uses the transform to convert canvas coordinates into index coordinates.\n   */\n  protected canvasToIndex = (canvasPos: Point2): Point2 => {\n    const transform = this.getTransform();\n    transform.invert();\n\n    return transform.transformPoint(\n      <Point2>canvasPos.map((it) => it * devicePixelRatio)\n    );\n  };\n\n  protected indexToCanvas = (indexPos: Point2): Point2 => {\n    const transform = this.getTransform();\n    return <Point2>(\n      transform.transformPoint(indexPos).map((it) => it / devicePixelRatio)\n    );\n  };\n\n  /**\n   * Sets  initial video camera to center the image area.  The values\n   * are set in canvas CSS pixel units and NOT in canvas index units.\n   */\n  private refreshRenderValues() {\n    // this means that each unit (pixel) in the world (video) would be\n    // represented by n pixels in the canvas, measured in css pixels\n    let worldToCanvasRatio = this.canvas.offsetWidth / this.videoWidth;\n\n    if (this.videoHeight * worldToCanvasRatio > this.canvas.height) {\n      // If by fitting the width, we exceed the height of the viewport, then we need to decrease the\n      // size of the viewport further by considering its verticality.\n      worldToCanvasRatio = this.canvas.offsetHeight / this.videoHeight;\n    }\n\n    // Set the width as big as possible, this is the portion of the canvas\n    // that the video will occupy.\n    const drawWidth = Math.floor(this.videoWidth * worldToCanvasRatio);\n    const drawHeight = Math.floor(this.videoHeight * worldToCanvasRatio);\n\n    // calculate x and y offset in order to center the image\n    const xOffsetCanvas = (this.canvas.offsetWidth - drawWidth) / 2;\n    const yOffsetCanvas = (this.canvas.offsetHeight - drawHeight) / 2;\n\n    const xOffsetWorld = xOffsetCanvas / worldToCanvasRatio;\n    const yOffsetWorld = yOffsetCanvas / worldToCanvasRatio;\n\n    this.videoCamera.panWorld = [xOffsetWorld, yOffsetWorld];\n    this.videoCamera.parallelScale = worldToCanvasRatio;\n  }\n\n  private getWorldToCanvasRatio() {\n    return this.videoCamera.parallelScale;\n  }\n\n  private getCanvasToWorldRatio() {\n    return 1.0 / this.videoCamera.parallelScale;\n  }\n\n  public customRenderViewportToCanvas = () => {\n    this.renderFrame();\n  };\n\n  /**\n   * Creates a transform from video index coordinates to canvas coordinates.\n   */\n  protected getTransform() {\n    const panWorld: Point2 = this.videoCamera.panWorld;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const worldToCanvasRatio: number = this.getWorldToCanvasRatio();\n    const canvasToWorldRatio: number = this.getCanvasToWorldRatio();\n    const halfCanvas = [\n      this.canvas.offsetWidth / 2,\n      this.canvas.offsetHeight / 2,\n    ];\n    const halfCanvasWorldCoordinates = [\n      halfCanvas[0] * canvasToWorldRatio,\n      halfCanvas[1] * canvasToWorldRatio,\n    ];\n    const transform = new Transform();\n\n    // Start by converting into canvas index coordinates FROM canvas css pixel coordinates\n    transform.scale(devicePixelRatio, devicePixelRatio);\n\n    // Translate to the center of the canvas (move origin of the transform\n    // to the center of the canvas)\n    transform.translate(halfCanvas[0], halfCanvas[1]);\n\n    // Scale\n    transform.scale(worldToCanvasRatio, worldToCanvasRatio);\n\n    // Apply the translation\n    transform.translate(panWorld[0], panWorld[1]);\n\n    // Translate back\n    transform.translate(\n      -halfCanvasWorldCoordinates[0],\n      -halfCanvasWorldCoordinates[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Nothing to do for the clipping planes for video as they don't exist.\n   */\n  public updateCameraClippingPlanesAndRange() {\n    // No-op\n  }\n\n  public addImages(stackInputs: Array<any>) {\n    const actors = this.getActors();\n    stackInputs.forEach((stackInput) => {\n      const image = cache.getImage(stackInput.imageId);\n\n      const imageActor = this.createActorMapper(image);\n      if (imageActor) {\n        actors.push({ uid: stackInput.actorUID, actor: imageActor });\n        if (stackInput.callback) {\n          stackInput.callback({ imageActor, imageId: stackInput.imageId });\n        }\n      }\n    });\n    this.setActors(actors);\n  }\n\n  protected createActorMapper(image) {\n    return new CanvasActor(this, image);\n  }\n\n  /**\n   * Renders the video frame to the viewport.\n   */\n  private renderFrame = () => {\n    const transform = this.getTransform();\n    const transformationMatrix: number[] = transform.getMatrix();\n\n    const ctx = this.canvasContext;\n\n    ctx.resetTransform();\n\n    // Need to correct the transform for device pixel ratio scaling.\n    ctx.transform(\n      transformationMatrix[0],\n      transformationMatrix[1],\n      transformationMatrix[2],\n      transformationMatrix[3],\n      transformationMatrix[4],\n      transformationMatrix[5]\n    );\n\n    ctx.drawImage(\n      this.videoElement,\n      0,\n      0,\n      this.videoWidth || 1024,\n      this.videoHeight || 1024\n    );\n\n    for (const actor of this.getActors()) {\n      (actor.actor as ICanvasActor).render(this, this.canvasContext);\n    }\n    this.canvasContext.resetTransform();\n\n    // This is stack new image to agree with stack/non-volume viewports\n    triggerEvent(this.element, EVENTS.STACK_NEW_IMAGE, {\n      element: this.element,\n      viewportId: this.id,\n      viewport: this,\n      renderingEngineId: this.renderingEngineId,\n      time: this.videoElement.currentTime,\n      duration: this.videoElement.duration,\n    });\n    triggerEvent(this.element, EVENTS.IMAGE_RENDERED, {\n      element: this.element,\n      viewportId: this.id,\n      viewport: this,\n      imageIndex: this.getCurrentImageIdIndex(),\n      numberOfSlices: this.numberOfFrames,\n      renderingEngineId: this.renderingEngineId,\n      time: this.videoElement.currentTime,\n      duration: this.videoElement.duration,\n    });\n\n    this.initialRender?.();\n\n    const frame = this.getFrameNumber();\n    if (this.isPlaying) {\n      if (frame < this.frameRange[0]) {\n        this.setFrameNumber(this.frameRange[0]);\n      } else if (frame > this.frameRange[1]) {\n        if (this.loop) {\n          this.setFrameNumber(this.frameRange[0]);\n        } else {\n          this.pause();\n        }\n      }\n    }\n  };\n\n  private renderWhilstPlaying = () => {\n    this.renderFrame();\n\n    //wait approximately 16ms and run again\n    if (this.isPlaying) {\n      requestAnimationFrame(this.renderWhilstPlaying);\n    }\n  };\n}\n\nexport default VideoViewport;\n","import type {\n  IStackViewport,\n  IStackInput,\n  IRenderingEngine,\n} from '../../types';\n\n/**\n * For each provided viewport it adds a volume to the viewport using the\n * provided renderingEngine\n *\n *\n * @param renderingEngine - The rendering engine to use to get viewports from\n * @param volumeInputs - Array of volume inputs including volumeId. Other properties\n * such as visibility, callback, blendMode, slabThickness are optional\n * @param viewportIds - Array of viewport IDs to add the volume to\n * @param immediateRender - If true, the volumes will be rendered immediately\n * @returns A promise that resolves when all volumes have been added\n */\nasync function addImageSlicesToViewports(\n  renderingEngine: IRenderingEngine,\n  stackInputs: Array<IStackInput>,\n  viewportIds: Array<string>\n): Promise<void> {\n  // Check if all viewports are volumeViewports\n  for (const viewportId of viewportIds) {\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n\n    // if not instance of BaseVolumeViewport, throw\n    if (!(viewport as IStackViewport).addImages) {\n      console.warn(\n        `Viewport with Id ${viewportId} does not have addImages. Cannot add image segmentation to this viewport.`\n      );\n\n      return;\n    }\n  }\n\n  const addStackPromises = viewportIds.map(async (viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId) as IStackViewport;\n\n    return viewport.addImages(stackInputs);\n  });\n\n  await Promise.all(addStackPromises);\n}\n\nexport default addImageSlicesToViewports;\n","import BaseVolumeViewport from '../BaseVolumeViewport';\nimport type {\n  IVolumeViewport,\n  IVolumeInput,\n  IRenderingEngine,\n} from '../../types';\n\n/**\n * For each provided viewport it adds a volume to the viewport using the\n * provided renderingEngine\n *\n *\n * @param renderingEngine - The rendering engine to use to get viewports from\n * @param volumeInputs - Array of volume inputs including volumeId. Other properties\n * such as visibility, callback, blendMode, slabThickness are optional\n * @param viewportIds - Array of viewport IDs to add the volume to\n * @param immediateRender - If true, the volumes will be rendered immediately\n * @returns A promise that resolves when all volumes have been added\n */\nasync function addVolumesToViewports(\n  renderingEngine: IRenderingEngine,\n  volumeInputs: Array<IVolumeInput>,\n  viewportIds: Array<string>,\n  immediateRender = false,\n  suppressEvents = false\n): Promise<void> {\n  // Check if all viewports are volumeViewports\n  for (const viewportId of viewportIds) {\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n\n    // if not instance of BaseVolumeViewport, throw\n    if (!(viewport instanceof BaseVolumeViewport)) {\n      console.warn(\n        `Viewport with Id ${viewportId} is not a BaseVolumeViewport. Cannot add volume to this viewport.`\n      );\n\n      return;\n    }\n  }\n\n  const addVolumePromises = viewportIds.map(async (viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId) as IVolumeViewport;\n\n    await viewport.addVolumes(volumeInputs, immediateRender, suppressEvents);\n  });\n\n  await Promise.all(addVolumePromises);\n  return;\n}\n\nexport default addVolumesToViewports;\n","import LookupTable from './lookupTable';\nimport CPU_COLORMAPS from '../../../../constants/cpuColormaps';\nimport {\n  CPUFallbackColormap,\n  CPUFallbackColormapData,\n  Point4,\n} from '../../../../types';\n\nconst COLOR_TRANSPARENT: Point4 = [0, 0, 0, 0];\n\n/**\n *  Generate linearly spaced vectors\n *  http://cens.ioc.ee/local/man/matlab/techdoc/ref/linspace.html\n * @param {Number} a A number representing the first vector\n * @param {Number} b A number representing the second vector\n * @param {Number} n The number of linear spaced vectors to generate\n * @returns {Array} An array of points representing linear spaced vectors.\n * @memberof Colors\n */\nfunction linspace(a: number, b: number, n: number): number[] {\n  n = n === null ? 100 : n;\n\n  const increment = (b - a) / (n - 1);\n  const vector = [];\n\n  while (n-- > 0) {\n    vector.push(a);\n    a += increment;\n  }\n\n  // Make sure the last item will always be \"b\" because most of the\n  // Time we'll get numbers like 1.0000000000000002 instead of 1.\n  vector[vector.length - 1] = b;\n\n  return vector;\n}\n\n/**\n * Returns the \"rank/index\" of the element in a sorted array if found or the highest index if not. Uses (binary search)\n * @param {Array} array A sorted array to search in\n * @param {any} elem the element in the array to search for\n * @returns {number} The rank/index of the element in the given array\n * @memberof Colors\n */\nfunction getRank(array, elem) {\n  let left = 0;\n  let right = array.length - 1;\n\n  while (left <= right) {\n    const mid = left + Math.floor((right - left) / 2);\n    const midElem = array[mid];\n\n    if (midElem === elem) {\n      return mid;\n    } else if (elem < midElem) {\n      right = mid - 1;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  return left;\n}\n\n/**\n * Find the indices into a sorted array a such that, if the corresponding elements\n * In v were inserted before the indices, the order of a would be preserved.\n *  http://lagrange.univ-lyon1.fr/docs/numpy/1.11.0/reference/generated/numpy.searchsorted.html\n * @param {Array} inputArray The array where the values will be inserted\n * @param {Array} values An array of the values to be inserted into the inputArray\n * @returns {Array} The indices where elements should be inserted to maintain order.\n * @memberof Colors\n */\nfunction searchSorted(inputArray, values) {\n  let i;\n  const indexes = [];\n  const len = values.length;\n\n  inputArray.sort(function (a, b) {\n    return a - b;\n  });\n\n  for (i = 0; i < len; i++) {\n    indexes[i] = getRank(inputArray, values[i]);\n  }\n\n  return indexes;\n}\n\n/**\n * Creates an *N* -element 1-d lookup table\n * @param {Number} N The number of elements in the result lookup table\n * @param {Array} data represented by a list of x,y0,y1 mapping correspondences. Each element in this\n * List represents how a value between 0 and 1 (inclusive) represented by x is mapped to\n * A corresponding value between 0 and 1 (inclusive). The two values of y are to allow for\n * Discontinuous mapping functions (say as might be found in a sawtooth) where y0 represents\n * The value of y for values of x <= to that given, and y1 is the value to be used for x >\n * Than that given). The list must start with x=0, end with x=1, and all values of x must be\n * In increasing order. Values between the given mapping points are determined by simple linear\n * Interpolation.\n * @param {any} gamma value denotes a \"gamma curve\" value which adjusts the brightness\n * at the bottom and top of the map.\n * @returns {any[]} an array \"result\" where result[x*(N-1)] gives the closest value for\n * Values of x between 0 and 1.\n * @memberof Colors\n */\nfunction makeMappingArray(N, data, gamma) {\n  let i;\n  const x = [];\n  const y0 = [];\n  const y1 = [];\n  const lut = [];\n\n  gamma = gamma === null ? 1 : gamma;\n\n  for (i = 0; i < data.length; i++) {\n    const element = data[i];\n\n    x.push((N - 1) * element[0]);\n    y0.push(element[1]);\n    y1.push(element[1]);\n  }\n\n  const xLinSpace = linspace(0, 1, N);\n\n  for (i = 0; i < N; i++) {\n    xLinSpace[i] = (N - 1) * Math.pow(xLinSpace[i], gamma);\n  }\n\n  const xLinSpaceIndexes = searchSorted(x, xLinSpace);\n\n  for (i = 1; i < N - 1; i++) {\n    const index = xLinSpaceIndexes[i];\n    const colorPercent =\n      (xLinSpace[i] - x[index - 1]) / (x[index] - x[index - 1]);\n    const colorDelta = y0[index] - y1[index - 1];\n\n    lut[i] = colorPercent * colorDelta + y1[index - 1];\n  }\n\n  lut[0] = y1[0];\n  lut[N - 1] = y0[data.length - 1];\n\n  return lut;\n}\n\n/**\n * Creates a Colormap based on lookup tables using linear segments.\n * @param {{red:Array, green:Array, blue:Array}} segmentedData An object with a red, green and blue entries.\n * Each entry should be a list of x, y0, y1 tuples, forming rows in a table.\n * @param {Number} N The number of elements in the result Colormap\n * @param {any} gamma value denotes a \"gamma curve\" value which adjusts the brightness\n * at the bottom and top of the Colormap.\n * @returns {Array} The created Colormap object\n * @description The lookup table is generated using linear interpolation for each\n *  Primary color, with the 0-1 domain divided into any number of\n * Segments.\n * https://github.com/stefanv/matplotlib/blob/3f1a23755e86fef97d51e30e106195f34425c9e3/lib/matplotlib/colors.py#L663\n * @memberof Colors\n */\nfunction createLinearSegmentedColormap(segmentedData, N, gamma) {\n  let i;\n  const lut = [];\n\n  N = N === null ? 256 : N;\n  gamma = gamma === null ? 1 : gamma;\n\n  const redLut = makeMappingArray(N, segmentedData.red, gamma);\n  const greenLut = makeMappingArray(N, segmentedData.green, gamma);\n  const blueLut = makeMappingArray(N, segmentedData.blue, gamma);\n\n  for (i = 0; i < N; i++) {\n    const red = Math.round(redLut[i] * 255);\n    const green = Math.round(greenLut[i] * 255);\n    const blue = Math.round(blueLut[i] * 255);\n    const rgba = [red, green, blue, 255];\n\n    lut.push(rgba);\n  }\n\n  return lut;\n}\n\n/**\n * Return all available colormaps (id and name)\n * @returns {Array<{id,key}>} An array of colormaps with an object containing the \"id\" and display \"name\"\n * @memberof Colors\n */\nexport function getColormapsList() {\n  const colormaps = [];\n  const keys = Object.keys(CPU_COLORMAPS);\n\n  keys.forEach(function (key) {\n    if (CPU_COLORMAPS.hasOwnProperty(key)) {\n      const colormap = CPU_COLORMAPS[key];\n\n      colormaps.push({\n        id: key,\n        name: colormap.name,\n      });\n    }\n  });\n\n  colormaps.sort(function (a, b) {\n    const aName = a.name.toLowerCase();\n    const bName = b.name.toLowerCase();\n\n    if (aName === bName) {\n      return 0;\n    }\n\n    return aName < bName ? -1 : 1;\n  });\n\n  return colormaps;\n}\n\n/**\n * Return a colorMap object with the provided id and colormapData\n * if the Id matches existent colorMap objects (check colormapsData) the colormapData is ignored.\n * if the colormapData is not empty, the colorMap will be added to the colormapsData list. Otherwise, an empty colorMap object is returned.\n * @param {string} id The ID of the colormap\n * @param {Object} colormapData - An object that can contain a name, numColors, gama, segmentedData and/or colors\n * @returns {*} The Colormap Object\n * @memberof Colors\n */\nexport function getColormap(\n  id: string,\n  colormapData?: CPUFallbackColormapData\n): CPUFallbackColormap {\n  let colormap = CPU_COLORMAPS[id];\n\n  if (!colormap) {\n    colormap = CPU_COLORMAPS[id] = colormapData || {\n      name: '',\n      colors: [],\n    };\n  }\n\n  if (!colormap.colors && colormap.segmentedData) {\n    colormap.colors = createLinearSegmentedColormap(\n      colormap.segmentedData,\n      colormap.numColors,\n      colormap.gamma\n    );\n  }\n\n  const cpuFallbackColormap: CPUFallbackColormap = {\n    getId() {\n      return id;\n    },\n\n    getColorSchemeName() {\n      return colormap.name;\n    },\n\n    setColorSchemeName(name) {\n      colormap.name = name;\n    },\n\n    getNumberOfColors() {\n      return colormap.colors.length;\n    },\n\n    setNumberOfColors(numColors) {\n      while (colormap.colors.length < numColors) {\n        colormap.colors.push(COLOR_TRANSPARENT);\n      }\n\n      colormap.colors.length = numColors;\n    },\n\n    getColor(index) {\n      if (this.isValidIndex(index)) {\n        return colormap.colors[index];\n      }\n\n      return COLOR_TRANSPARENT;\n    },\n\n    getColorRepeating(index) {\n      const numColors = colormap.colors.length;\n\n      index = numColors ? index % numColors : 0;\n\n      return this.getColor(index);\n    },\n\n    setColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors[index] = rgba;\n      }\n    },\n\n    addColor(rgba) {\n      colormap.colors.push(rgba);\n    },\n\n    insertColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1, rgba);\n      }\n    },\n\n    removeColor(index) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1);\n      }\n    },\n\n    clearColors() {\n      colormap.colors = [];\n    },\n\n    buildLookupTable(lut) {\n      if (!lut) {\n        return;\n      }\n\n      const numColors = colormap.colors.length;\n\n      lut.setNumberOfTableValues(numColors);\n\n      for (let i = 0; i < numColors; i++) {\n        lut.setTableValue(i, colormap.colors[i]);\n      }\n    },\n\n    createLookupTable() {\n      const lut = new LookupTable();\n\n      this.buildLookupTable(lut);\n\n      return lut;\n    },\n\n    isValidIndex(index) {\n      return index >= 0 && index < colormap.colors.length;\n    },\n  };\n\n  return cpuFallbackColormap;\n}\n","/**\n * Use the performance.now() method if possible, and if not, use Date.now()\n *\n * @return {number} Time elapsed since the time origin\n * @memberof Polyfills\n */\nexport default function (): number {\n  if (window.performance) {\n    return performance.now();\n  }\n\n  return Date.now();\n}\n","/* eslint no-bitwise: 0 */\n\n/**\n * Volume of Interest Lookup Table Function\n *\n * @typedef {Function} VOILUTFunction\n *\n * @param {Number} modalityLutValue\n * @returns {Number} transformed value\n * @memberof Objects\n */\n\n/**\n * @module: VOILUT\n */\n\n/**\n * Generates the linear VOI LUT function.\n * From the DICOM standard:\n * https://dicom.nema.org/medical/dicom/current/output/html/part03.html#sect_C.11.2.1.2.1\n * ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax- ymin) + ymin\n * clipped to the ymin...ymax range\n *\n * @param {Number} windowWidth Window Width\n * @param {Number} windowCenter Window Center\n * @returns {VOILUTFunction} VOI LUT mapping function\n * @memberof VOILUT\n */\nfunction generateLinearVOILUT(windowWidth: number, windowCenter: number) {\n  return function (modalityLutValue) {\n    const value =\n      ((modalityLutValue - (windowCenter - 0.5)) / (windowWidth - 1) + 0.5) *\n      255.0;\n    return Math.min(Math.max(value, 0), 255);\n  };\n}\n\n/**\n * Generate a non-linear volume of interest lookup table\n *\n * @param {LUT} voiLUT Volume of Interest Lookup Table Object\n *\n * @returns {VOILUTFunction} VOI LUT mapping function\n * @memberof VOILUT\n */\nfunction generateNonLinearVOILUT(voiLUT) {\n  // We don't trust the voiLUT.numBitsPerEntry, mainly thanks to Agfa!\n  const bitsPerEntry = Math.max(...voiLUT.lut).toString(2).length;\n  const shift = bitsPerEntry - 8;\n  const minValue = voiLUT.lut[0] >> shift;\n  const maxValue = voiLUT.lut[voiLUT.lut.length - 1] >> shift;\n  const maxValueMapped = voiLUT.firstValueMapped + voiLUT.lut.length - 1;\n\n  return function (modalityLutValue) {\n    if (modalityLutValue < voiLUT.firstValueMapped) {\n      return minValue;\n    } else if (modalityLutValue >= maxValueMapped) {\n      return maxValue;\n    }\n\n    return voiLUT.lut[modalityLutValue - voiLUT.firstValueMapped] >> shift;\n  };\n}\n\n/**\n * Retrieve a VOI LUT mapping function given the current windowing settings\n * and the VOI LUT for the image\n *\n * @param {Number} windowWidth Window Width\n * @param {Number} windowCenter Window Center\n * @param {LUT} [voiLUT] Volume of Interest Lookup Table Object\n *\n * @return {VOILUTFunction} VOI LUT mapping function\n * @memberof VOILUT\n */\nexport default function (windowWidth: number, windowCenter: number, voiLUT) {\n  if (voiLUT) {\n    return generateNonLinearVOILUT(voiLUT);\n  }\n\n  return generateLinearVOILUT(windowWidth, windowCenter);\n}\n","import calculateTransform from './calculateTransform';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Sets the canvas context transformation matrix to the pixel coordinate system.  This allows\n * geometry to be driven using the canvas context using coordinates in the pixel coordinate system\n * @param {EnabledElement} enabledElement The\n * @param {CanvasRenderingContext2D} context The CanvasRenderingContext2D for the enabledElement's Canvas\n * @param {Number} [scale] Optional scale to apply\n * @returns {void}\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  context: CanvasRenderingContext2D,\n  scale?: number\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'setToPixelCoordinateSystem: parameter enabledElement must not be undefined'\n    );\n  }\n  if (context === undefined) {\n    throw new Error(\n      'setToPixelCoordinateSystem: parameter context must not be undefined'\n    );\n  }\n\n  const transform = calculateTransform(enabledElement, scale);\n  const m = transform.getMatrix();\n\n  context.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n}\n","import { CPUFallbackEnabledElement, IImage } from '../../../../types';\n\n/**\n * Determine whether or not an Enabled Element needs to be re-rendered.\n *\n * If the imageId has changed, or if any of the last rendered viewport\n * parameters have changed, this function will return true.\n *\n * @param enabledElement - An Enabled Element\n * @param image - An Image\n * @returns Whether - or not the Enabled Element needs to re-render its image\n */\nexport default function doesImageNeedToBeRendered(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage\n): boolean {\n  const lastRenderedImageId = enabledElement.renderingTools.lastRenderedImageId;\n  const lastRenderedViewport =\n    enabledElement.renderingTools.lastRenderedViewport;\n\n  return (\n    image.imageId !== lastRenderedImageId ||\n    !lastRenderedViewport ||\n    lastRenderedViewport.windowCenter !==\n      enabledElement.viewport.voi.windowCenter ||\n    lastRenderedViewport.windowWidth !==\n      enabledElement.viewport.voi.windowWidth ||\n    lastRenderedViewport.invert !== enabledElement.viewport.invert ||\n    lastRenderedViewport.rotation !== enabledElement.viewport.rotation ||\n    lastRenderedViewport.hflip !== enabledElement.viewport.hflip ||\n    lastRenderedViewport.vflip !== enabledElement.viewport.vflip ||\n    lastRenderedViewport.modalityLUT !== enabledElement.viewport.modalityLUT ||\n    lastRenderedViewport.voiLUT !== enabledElement.viewport.voiLUT ||\n    lastRenderedViewport.colormap !== enabledElement.viewport.colormap\n  );\n}\n","import { CPUFallbackEnabledElement, IImage } from '../../../../types';\n\n/**\n * Sets size and clears canvas\n *\n * @param {Object} enabledElement Cornerstone Enabled Element\n * @param {Object} image Image to be rendered\n * @returns {void}\n * @memberof rendering\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage\n): void {\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  // Resize the canvas\n  renderCanvas.width = image.width;\n  renderCanvas.height = image.height;\n\n  const canvasContext = renderCanvas.getContext('2d');\n\n  // NOTE - we need to fill the render canvas with white pixels since we\n  // control the luminance using the alpha channel to improve rendering performance.\n  canvasContext.fillStyle = 'white';\n  canvasContext.fillRect(0, 0, renderCanvas.width, renderCanvas.height);\n\n  const renderCanvasData = canvasContext.getImageData(\n    0,\n    0,\n    image.width,\n    image.height\n  );\n\n  enabledElement.renderingTools.renderCanvasContext = canvasContext;\n  enabledElement.renderingTools.renderCanvasData = renderCanvasData;\n}\n","import {\n  CPUFallbackEnabledElement,\n  CPUFallbackRenderingTools,\n} from '../../../../types';\n\n/**\n * Saves the parameters of the last render into renderingTools, used later to decide if data can be reused.\n *\n * @param {Object} enabledElement Cornerstone EnabledElement\n * @returns {Object} enabledElement.renderingTools\n * @memberof rendering\n */\n\nexport default function (\n  enabledElement: CPUFallbackEnabledElement\n): CPUFallbackRenderingTools {\n  const imageId = enabledElement.image.imageId;\n  const viewport = enabledElement.viewport;\n  const isColor = enabledElement.image.color;\n\n  enabledElement.renderingTools.lastRenderedImageId = imageId;\n  enabledElement.renderingTools.lastRenderedIsColor = isColor;\n  enabledElement.renderingTools.lastRenderedViewport = {\n    windowCenter: viewport.voi.windowCenter,\n    windowWidth: viewport.voi.windowWidth,\n    invert: viewport.invert,\n    rotation: viewport.rotation,\n    hflip: viewport.hflip,\n    vflip: viewport.vflip,\n    modalityLUT: viewport.modalityLUT,\n    voiLUT: viewport.voiLUT,\n    colormap: viewport.colormap,\n  };\n\n  return enabledElement.renderingTools;\n}\n","import now from './now';\nimport generateColorLUT from './generateColorLUT';\nimport storedColorPixelDataToCanvasImageData from './storedColorPixelDataToCanvasImageData';\nimport storedRGBAPixelDataToCanvasImageData from './storedRGBAPixelDataToCanvasImageData';\nimport setToPixelCoordinateSystem from './setToPixelCoordinateSystem';\nimport doesImageNeedToBeRendered from './doesImageNeedToBeRendered';\nimport initializeRenderCanvas from './initializeRenderCanvas';\nimport saveLastRendered from './saveLastRendered';\nimport {\n  IImage,\n  CPUFallbackViewport,\n  CPUFallbackEnabledElement,\n} from '../../../../types';\n\n/**\n * Generates an appropriate Look Up Table to render the given image with the given window width and level (specified in the viewport)\n * Uses an internal cache for performance\n *\n * @param {Object} image  The image to be rendered\n * @param {Object} viewport The viewport values used for rendering\n * @returns {Uint8ClampedArray} Look Up Table array.\n * @memberof rendering\n */\nfunction getLut(image: IImage, viewport: CPUFallbackViewport) {\n  // If we have a cached lut and it has the right values, return it immediately\n  if (\n    image.cachedLut !== undefined &&\n    image.cachedLut.windowCenter === viewport.voi.windowCenter &&\n    image.cachedLut.windowWidth === viewport.voi.windowWidth &&\n    image.cachedLut.invert === viewport.invert\n  ) {\n    return image.cachedLut.lutArray;\n  }\n\n  // Lut is invalid or not present, regenerate it and cache it\n  generateColorLUT(\n    image,\n    viewport.voi.windowWidth,\n    viewport.voi.windowCenter,\n    viewport.invert\n  );\n  image.cachedLut.windowWidth = viewport.voi.windowWidth;\n  image.cachedLut.windowCenter = viewport.voi.windowCenter;\n  image.cachedLut.invert = viewport.invert;\n\n  return image.cachedLut.lutArray;\n}\n\n/**\n * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate\n * it is returned, otherwise adjustments are made. It also sets the color transfer functions.\n *\n * @param enabledElement - The cornerstone enabled element\n * @param image - The image to be rendered\n * @param invalidated - Is pixel data valid\n * @returns An appropriate canvas for rendering the image\n * @memberof rendering\n */\nfunction getRenderCanvas(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage,\n  invalidated: boolean\n): HTMLCanvasElement {\n  const canvasWasColor =\n    enabledElement.renderingTools.lastRenderedIsColor === true;\n\n  if (!enabledElement.renderingTools.renderCanvas || !canvasWasColor) {\n    enabledElement.renderingTools.renderCanvas =\n      document.createElement('canvas');\n  }\n\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  // The ww/wc is identity and not inverted - get a canvas with the image rendered into it for\n  // Fast drawing.  Note that this is 256/128, and NOT 255/127, per the DICOM\n  // standard, but allow either.\n  const { windowWidth, windowCenter } = enabledElement.viewport.voi;\n  if (\n    (windowWidth === 256 || windowWidth === 255) &&\n    (windowCenter === 128 || windowCenter === 127) &&\n    enabledElement.viewport.invert === false &&\n    image.getCanvas &&\n    image.getCanvas()\n  ) {\n    return image.getCanvas();\n  }\n\n  // Apply the lut to the stored pixel data onto the render canvas\n  if (\n    doesImageNeedToBeRendered(enabledElement, image) === false &&\n    invalidated !== true\n  ) {\n    return renderCanvas;\n  }\n\n  // If our render canvas does not match the size of this image reset it\n  // NOTE: This might be inefficient if we are updating multiple images of different\n  // Sizes frequently.\n  if (\n    renderCanvas.width !== image.width ||\n    renderCanvas.height !== image.height\n  ) {\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  // Get the lut to use\n  let start = now();\n  const colorLUT = getLut(image, enabledElement.viewport);\n\n  image.stats = image.stats || {};\n  image.stats.lastLutGenerateTime = now() - start;\n\n  const renderCanvasData = enabledElement.renderingTools.renderCanvasData;\n  const renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;\n\n  // The color image voi/invert has been modified - apply the lut to the underlying\n  // Pixel data and put it into the renderCanvas\n  if (image.rgba) {\n    storedRGBAPixelDataToCanvasImageData(\n      image,\n      colorLUT,\n      renderCanvasData.data\n    );\n  } else {\n    storedColorPixelDataToCanvasImageData(\n      image,\n      colorLUT,\n      renderCanvasData.data\n    );\n  }\n\n  start = now();\n  renderCanvasContext.putImageData(renderCanvasData, 0, 0);\n  image.stats.lastPutImageDataTime = now() - start;\n\n  return renderCanvas;\n}\n\n/**\n * API function to render a color image to an enabled element\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw\n * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used\n * @returns {void}\n * @memberof rendering\n */\nexport function renderColorImage(\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'renderColorImage: enabledElement parameter must not be undefined'\n    );\n  }\n\n  const image = enabledElement.image;\n\n  if (image === undefined) {\n    throw new Error(\n      'renderColorImage: image must be loaded before it can be drawn'\n    );\n  }\n\n  // Get the canvas context and reset the transform\n  const context = enabledElement.canvas.getContext('2d');\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // Clear the canvas\n  context.fillStyle = 'black';\n  context.fillRect(\n    0,\n    0,\n    enabledElement.canvas.width,\n    enabledElement.canvas.height\n  );\n\n  // Turn off image smooth/interpolation if pixelReplication is set in the viewport\n  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;\n\n  // Save the canvas context state and apply the viewport properties\n  setToPixelCoordinateSystem(enabledElement, context);\n\n  const renderCanvas = getRenderCanvas(enabledElement, image, invalidated);\n\n  const sx = enabledElement.viewport.displayedArea.tlhc.x - 1;\n  const sy = enabledElement.viewport.displayedArea.tlhc.y - 1;\n  const width = enabledElement.viewport.displayedArea.brhc.x - sx;\n  const height = enabledElement.viewport.displayedArea.brhc.y - sy;\n\n  context.drawImage(renderCanvas, sx, sy, width, height, 0, 0, width, height);\n\n  enabledElement.renderingTools = saveLastRendered(enabledElement);\n}\n","import getVOILUT from './getVOILut';\nimport { IImage, CPUFallbackLUT } from '../../../../types';\n\n/**\n * Creates a LUT used while rendering to convert stored pixel values to\n * display pixels\n *\n * @param image - A Cornerstone Image Object\n * @param windowWidth - The Window Width\n * @param windowCenter - The Window Center\n * @param invert - A boolean describing whether or not the image has been inverted\n * @param voiLUT- A Volume of Interest Lookup Table\n *\n * @returns A lookup table to apply to the image\n */\nexport default function generateColorLUT(\n  image: IImage,\n  windowWidth: number | number[],\n  windowCenter: number | number[],\n  invert: boolean,\n  voiLUT?: CPUFallbackLUT\n) {\n  const maxPixelValue = image.maxPixelValue;\n  const minPixelValue = image.minPixelValue;\n  const offset = Math.min(minPixelValue, 0);\n\n  if (image.cachedLut === undefined) {\n    const length = maxPixelValue - offset + 1;\n\n    image.cachedLut = {};\n    image.cachedLut.lutArray = new Uint8ClampedArray(length);\n  }\n\n  const lut = image.cachedLut.lutArray;\n  const vlutfn = getVOILUT(\n    Array.isArray(windowWidth) ? windowWidth[0] : windowWidth,\n    Array.isArray(windowCenter) ? windowCenter[0] : windowCenter,\n    voiLUT\n  );\n\n  if (invert === true) {\n    for (\n      let storedValue = minPixelValue;\n      storedValue <= maxPixelValue;\n      storedValue++\n    ) {\n      lut[storedValue + -offset] = 255 - vlutfn(storedValue);\n    }\n  } else {\n    for (\n      let storedValue = minPixelValue;\n      storedValue <= maxPixelValue;\n      storedValue++\n    ) {\n      lut[storedValue + -offset] = vlutfn(storedValue);\n    }\n  }\n\n  return lut;\n}\n","import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * Converts stored RGBA color pixel values to display pixel values using a LUT.\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  const numPixels = pixelData.length;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n  start = now();\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Green\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Blue\n      canvasImageDataData[canvasImageDataIndex++] =\n        pixelData[storedPixelDataIndex++];\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Green\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Blue\n      canvasImageDataData[canvasImageDataIndex++] =\n        pixelData[storedPixelDataIndex++];\n    }\n  }\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n","import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * Converts stored color pixel values to display pixel values using a LUT.\n *\n * Note: Skips alpha value for any input image pixel data.\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  const numPixels = pixelData.length;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n  start = now();\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Green\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex] + -minPixelValue]; // Blue\n      storedPixelDataIndex += 2;\n      canvasImageDataIndex += 2;\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Green\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex]]; // Blue\n      storedPixelDataIndex += 2;\n      canvasImageDataIndex += 2;\n    }\n  }\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n","import type { IImage, CPUFallbackViewport } from '../../../../types';\n\n/**\n * Computes the VOI to display all the pixels if no VOI LUT data (Window Width/Window Center or voiLUT) exists on the viewport object.\n *\n * @param viewport - Object containing the viewport properties\n * @param image - An Image loaded by a Cornerstone Image Loader\n */\nexport default function computeAutoVoi(\n  viewport: CPUFallbackViewport,\n  image: IImage\n): void {\n  if (hasVoi(viewport)) {\n    return;\n  }\n\n  const maxVoi = image.maxPixelValue * image.slope + image.intercept;\n  const minVoi = image.minPixelValue * image.slope + image.intercept;\n  const ww = maxVoi - minVoi;\n  const wc = (maxVoi + minVoi) / 2;\n\n  if (viewport.voi === undefined) {\n    viewport.voi = {\n      windowWidth: ww,\n      windowCenter: wc,\n    };\n  } else {\n    viewport.voi.windowWidth = ww;\n    viewport.voi.windowCenter = wc;\n  }\n}\n\n/**\n * Check if viewport has voi LUT data\n * @param viewport - The viewport to check for voi LUT data\n * @returns true viewport has LUT data (Window Width/Window Center or voiLUT). Otherwise, false.\n */\nfunction hasVoi(viewport: CPUFallbackViewport): boolean {\n  const hasLut =\n    viewport.voiLUT && viewport.voiLUT.lut && viewport.voiLUT.lut.length > 0;\n\n  return (\n    hasLut ||\n    (viewport.voi.windowWidth !== undefined &&\n      viewport.voi.windowCenter !== undefined)\n  );\n}\n","/**\n * Check if two lookup tables match\n *\n * @param {LUT} a A lookup table function\n * @param {LUT} b Another lookup table function\n * @return {boolean} Whether or not they match\n * @memberof rendering\n */\nexport default function (a: any, b: any) {\n  // If undefined, they are equal\n  if (!a && !b) {\n    return true;\n  }\n  // If one is undefined, not equal\n  if (!a || !b) {\n    return false;\n  }\n\n  // Check the unique ids\n  return a.id === b.id;\n}\n","import computeAutoVoi from './computeAutoVoi';\nimport lutMatches from './lutMatches';\nimport generateLut from './generateLut';\nimport { IImage, CPUFallbackViewport } from '../../../../types';\n\n/**\n * Retrieve or generate a LUT Array for an Image and Viewport\n *\n * @param {Image} image An Image Object\n * @param {Viewport} viewport An Viewport Object\n * @param {Boolean} invalidated Whether or not the LUT data has been invalidated\n * (e.g. by a change to the windowWidth, windowCenter, or invert viewport parameters).\n * @return {Uint8ClampedArray} LUT Array\n * @memberof rendering\n */\nexport default function (\n  image: IImage,\n  viewport: CPUFallbackViewport,\n  invalidated: boolean\n): Uint8ClampedArray {\n  // If we have a cached lut and it has the right values, return it immediately\n  if (\n    image.cachedLut !== undefined &&\n    image.cachedLut.windowCenter === viewport.voi.windowCenter &&\n    image.cachedLut.windowWidth === viewport.voi.windowWidth &&\n    lutMatches(image.cachedLut.modalityLUT, viewport.modalityLUT) &&\n    lutMatches(image.cachedLut.voiLUT, viewport.voiLUT) &&\n    image.cachedLut.invert === viewport.invert &&\n    invalidated !== true\n  ) {\n    return image.cachedLut.lutArray;\n  }\n\n  computeAutoVoi(viewport, image);\n\n  // Lut is invalid or not present, regenerate it and cache it\n  generateLut(\n    image,\n    viewport.voi.windowWidth,\n    viewport.voi.windowCenter,\n    viewport.invert,\n    viewport.modalityLUT,\n    viewport.voiLUT\n  );\n\n  image.cachedLut.windowWidth = viewport.voi.windowWidth;\n  image.cachedLut.windowCenter = viewport.voi.windowCenter;\n  image.cachedLut.invert = viewport.invert;\n  image.cachedLut.voiLUT = viewport.voiLUT;\n  image.cachedLut.modalityLUT = viewport.modalityLUT;\n\n  return image.cachedLut.lutArray;\n}\n","import getModalityLut from './getModalityLut';\nimport getVOILUT from './getVOILut';\nimport { IImage, CPUFallbackLUT } from '../../../../types';\n\n/**\n * Creates a LUT used while rendering to convert stored pixel values to\n * display pixels\n *\n * @param image - A Cornerstone Image Object\n * @param windowWidth - The Window Width\n * @param windowCenter - The Window Center\n * @param invert - A boolean describing whether or not the image has been inverted\n * @param modalityLUT - A modality Lookup Table\n * @param voiLUT - A Volume of Interest Lookup Table\n *\n * @returns A lookup table to apply to the image\n */\nexport default function (\n  image: IImage,\n  windowWidth: number,\n  windowCenter: number,\n  invert: boolean,\n  modalityLUT: CPUFallbackLUT,\n  voiLUT: CPUFallbackLUT\n): Uint8ClampedArray {\n  const maxPixelValue = image.maxPixelValue;\n  const minPixelValue = image.minPixelValue;\n  const offset = Math.min(minPixelValue, 0);\n\n  if (image.cachedLut === undefined) {\n    const length = maxPixelValue - offset + 1;\n\n    image.cachedLut = {};\n    image.cachedLut.lutArray = new Uint8ClampedArray(length);\n  }\n\n  const lut = image.cachedLut.lutArray;\n\n  const mlutfn = getModalityLut(image.slope, image.intercept, modalityLUT);\n  const vlutfn = getVOILUT(windowWidth, windowCenter, voiLUT);\n\n  if (image.isPreScaled) {\n    // if the image is already preScaled, it means that the slop and the intercept\n    // are applied and there is no need for a modalityLut\n    if (invert === true) {\n      for (\n        let storedValue = minPixelValue;\n        storedValue <= maxPixelValue;\n        storedValue++\n      ) {\n        lut[storedValue + -offset] = 255 - vlutfn(storedValue);\n      }\n    } else {\n      for (\n        let storedValue = minPixelValue;\n        storedValue <= maxPixelValue;\n        storedValue++\n      ) {\n        lut[storedValue + -offset] = vlutfn(storedValue);\n      }\n    }\n  } else {\n    if (invert === true) {\n      for (\n        let storedValue = minPixelValue;\n        storedValue <= maxPixelValue;\n        storedValue++\n      ) {\n        lut[storedValue + -offset] = 255 - vlutfn(mlutfn(storedValue));\n      }\n    } else {\n      for (\n        let storedValue = minPixelValue;\n        storedValue <= maxPixelValue;\n        storedValue++\n      ) {\n        lut[storedValue + -offset] = vlutfn(mlutfn(storedValue));\n      }\n    }\n  }\n\n  return lut;\n}\n","/**\n * Generates a linear modality transformation function\n *\n * See DICOM PS3.3 C.11.1 Modality LUT Module\n *\n * http://dicom.nema.org/medical/Dicom/current/output/chtml/part03/sect_C.11.html\n *\n * @param {Number} slope m in the equation specified by Rescale Intercept (0028,1052).\n * @param {Number} intercept The value b in relationship between stored values (SV) and the output units specified in Rescale Type (0028,1054).\n\n Output units = m*SV + b.\n * @return {function(*): *} A linear modality LUT function. Given a stored pixel it returns the modality pixel value\n * @memberof Internal\n */\nfunction generateLinearModalityLUT(slope, intercept) {\n  return (storedPixelValue) => storedPixelValue * slope + intercept;\n}\n\nfunction generateNonLinearModalityLUT(modalityLUT) {\n  const minValue = modalityLUT.lut[0];\n  const maxValue = modalityLUT.lut[modalityLUT.lut.length - 1];\n  const maxValueMapped = modalityLUT.firstValueMapped + modalityLUT.lut.length;\n\n  return (storedPixelValue) => {\n    if (storedPixelValue < modalityLUT.firstValueMapped) {\n      return minValue;\n    } else if (storedPixelValue >= maxValueMapped) {\n      return maxValue;\n    }\n\n    return modalityLUT.lut[storedPixelValue];\n  };\n}\n\n/**\n * Get the appropriate Modality LUT for the current situation.\n *\n * @param {Number} [slope] m in the equation specified by Rescale Intercept (0028,1052).\n * @param {Number} [intercept] The value b in relationship between stored values (SV) and the output units specified in Rescale Type (0028,1054).\n * @param {Function} [modalityLUT] A modality LUT function. Given a stored pixel it returns the modality pixel value.\n *\n * @return {function(*): *} A modality LUT function. Given a stored pixel it returns the modality pixel value.\n * @memberof Internal\n */\nexport default function (\n  slope: number,\n  intercept: number,\n  modalityLUT: unknown\n) {\n  if (modalityLUT) {\n    return generateNonLinearModalityLUT(modalityLUT);\n  }\n\n  return generateLinearModalityLUT(slope, intercept);\n}\n","import storedPixelDataToCanvasImageData from './storedPixelDataToCanvasImageData';\nimport storedPixelDataToCanvasImageDataPET from './storedPixelDataToCanvasImageDataPET';\nimport storedPixelDataToCanvasImageDataRGBA from './storedPixelDataToCanvasImageDataRGBA';\nimport setToPixelCoordinateSystem from './setToPixelCoordinateSystem';\nimport now from './now';\nimport getLut from './getLut';\nimport doesImageNeedToBeRendered from './doesImageNeedToBeRendered';\nimport initializeRenderCanvas from './initializeRenderCanvas';\nimport saveLastRendered from './saveLastRendered';\nimport { IImage, CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate\n * it is returned, otherwise adjustments are made. It also sets the color transfer functions.\n *\n * @param {Object} enabledElement The cornerstone enabled element\n * @param {Object} image The image to be rendered\n * @param {Boolean} invalidated Is pixel data valid\n * @param {Boolean} [useAlphaChannel = true] Will an alpha channel be used\n * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image\n * @memberof rendering\n */\nfunction getRenderCanvas(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage,\n  invalidated: boolean,\n  useAlphaChannel = true\n): HTMLCanvasElement {\n  const canvasWasColor =\n    enabledElement.renderingTools.lastRenderedIsColor === true;\n\n  if (!enabledElement.renderingTools.renderCanvas || canvasWasColor) {\n    enabledElement.renderingTools.renderCanvas =\n      document.createElement('canvas');\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  if (\n    doesImageNeedToBeRendered(enabledElement, image) === false &&\n    invalidated !== true\n  ) {\n    return renderCanvas;\n  }\n\n  // If our render canvas does not match the size of this image reset it\n  // NOTE: This might be inefficient if we are updating multiple images of different\n  // Sizes frequently.\n  if (\n    renderCanvas.width !== image.width ||\n    renderCanvas.height !== image.height\n  ) {\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  image.stats = image.stats || {};\n\n  const renderCanvasData = enabledElement.renderingTools.renderCanvasData;\n  const renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;\n\n  let start = now();\n  image.stats.lastLutGenerateTime = now() - start;\n\n  const { viewport } = enabledElement;\n\n  // If modality is 'PT' and the image is scaled then the results are floating points,\n  // and we cannot create a lut for it (cannot have float indices). Therefore,\n  // we use a mapping function to get the voiLUT from the values by applying\n  // the windowLevel and windowWidth.\n  if (viewport.modality === 'PT' && image.isPreScaled) {\n    const { windowWidth, windowCenter } = viewport.voi;\n    const minimum = windowCenter - windowWidth / 2;\n    const maximum = windowCenter + windowWidth / 2;\n    const range = maximum - minimum;\n    const collectedMultiplierTerms = 255.0 / range;\n\n    let petVOILutFunction;\n\n    if (viewport.invert) {\n      petVOILutFunction = (value) =>\n        255 - (value - minimum) * collectedMultiplierTerms;\n    } else {\n      // Note, don't need to math.floor, that is dealt with by setting the value in the Uint8Array.\n      petVOILutFunction = (value) =>\n        (value - minimum) * collectedMultiplierTerms;\n    }\n\n    storedPixelDataToCanvasImageDataPET(\n      image,\n      petVOILutFunction,\n      renderCanvasData.data\n    );\n  } else {\n    // Get the lut to use\n    const lut = getLut(image, viewport, invalidated);\n\n    if (useAlphaChannel) {\n      storedPixelDataToCanvasImageData(image, lut, renderCanvasData.data);\n    } else {\n      storedPixelDataToCanvasImageDataRGBA(image, lut, renderCanvasData.data);\n    }\n  }\n\n  start = now();\n  renderCanvasContext.putImageData(renderCanvasData, 0, 0);\n  image.stats.lastPutImageDataTime = now() - start;\n\n  return renderCanvas;\n}\n\n/**\n * API function to draw a grayscale image to a given enabledElement\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw\n * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used\n * @returns {void}\n * @memberof rendering\n */\nexport function renderGrayscaleImage(\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'drawImage: enabledElement parameter must not be undefined'\n    );\n  }\n\n  const image = enabledElement.image;\n\n  if (image === undefined) {\n    throw new Error('drawImage: image must be loaded before it can be drawn');\n  }\n\n  // Get the canvas context and reset the transform\n  const context = enabledElement.canvas.getContext('2d');\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // Clear the canvas\n  context.fillStyle = 'black';\n  context.fillRect(\n    0,\n    0,\n    enabledElement.canvas.width,\n    enabledElement.canvas.height\n  );\n\n  // Turn off image smooth/interpolation if pixelReplication is set in the viewport\n  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;\n\n  // Save the canvas context state and apply the viewport properties\n  setToPixelCoordinateSystem(enabledElement, context);\n\n  const renderCanvas = getRenderCanvas(enabledElement, image, invalidated);\n\n  const sx = enabledElement.viewport.displayedArea.tlhc.x - 1;\n  const sy = enabledElement.viewport.displayedArea.tlhc.y - 1;\n  const width = enabledElement.viewport.displayedArea.brhc.x - sx;\n  const height = enabledElement.viewport.displayedArea.brhc.y - sy;\n\n  context.drawImage(renderCanvas, sx, sy, width, height, 0, 0, width, height);\n\n  enabledElement.renderingTools = saveLastRendered(enabledElement);\n}\n","import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * This function transforms stored pixel values into a canvas image data buffer\n * by using a LUT.  This is the most performance sensitive code in cornerstone and\n * we use a special trick to make this go as fast as possible.  Specifically we\n * use the alpha channel only to control the luminance rather than the red, green and\n * blue channels which makes it over 3x faster. The canvasImageDataData buffer needs\n * to be previously filled with white pixels.\n *\n * NOTE: Attribution would be appreciated if you use this technique!\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lutFunction: (value: number) => number,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  // const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 3;\n  let storedPixelDataIndex = 0;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n\n  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.\n  start = now();\n\n  while (storedPixelDataIndex < numPixels) {\n    canvasImageDataData[canvasImageDataIndex] = lutFunction(\n      pixelData[storedPixelDataIndex++]\n    ); // Alpha\n    canvasImageDataIndex += 4;\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n","import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * This function transforms stored pixel values into a canvas image data buffer\n * by using a LUT.  This is the most performance sensitive code in cornerstone and\n * we use a special trick to make this go as fast as possible.  Specifically we\n * use the alpha channel only to control the luminance rather than the red, green and\n * blue channels which makes it over 3x faster. The canvasImageDataData buffer needs\n * to be previously filled with white pixels.\n *\n * NOTE: Attribution would be appreciated if you use this technique!\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 3;\n  let storedPixelDataIndex = 0;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n\n  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.\n  start = now();\n  if (pixelData instanceof Int16Array) {\n    if (minPixelValue < 0) {\n      while (storedPixelDataIndex < numPixels) {\n        canvasImageDataData[canvasImageDataIndex] =\n          lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Alpha\n        canvasImageDataIndex += 4;\n      }\n    } else {\n      while (storedPixelDataIndex < numPixels) {\n        canvasImageDataData[canvasImageDataIndex] =\n          lut[pixelData[storedPixelDataIndex++]]; // Alpha\n        canvasImageDataIndex += 4;\n      }\n    }\n  } else if (pixelData instanceof Uint16Array) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex++]]; // Alpha\n      canvasImageDataIndex += 4;\n    }\n  } else if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Alpha\n      canvasImageDataIndex += 4;\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex++]]; // Alpha\n      canvasImageDataIndex += 4;\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n","import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * This function transforms stored pixel values into a canvas image data buffer\n * by using a LUT.\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  let pixelValue;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n\n  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.\n  start = now();\n  if (pixelData instanceof Int16Array) {\n    if (minPixelValue < 0) {\n      while (storedPixelDataIndex < numPixels) {\n        pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n      }\n    } else {\n      while (storedPixelDataIndex < numPixels) {\n        pixelValue = lut[pixelData[storedPixelDataIndex++]];\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n      }\n    }\n  } else if (pixelData instanceof Uint16Array) {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++]];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n    }\n  } else if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++]];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n","import * as colors from '../colors/index';\nimport now from './now';\nimport type { IImage, CPUFallbackLookupTable } from '../../../../types';\n\n/**\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} grayscaleLut Lookup table array\n * @param {LookupTable|Array} colorLUT Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nfunction storedPixelDataToCanvasImageDataPseudocolorLUT(\n  image: IImage,\n  grayscaleLut: Uint8ClampedArray,\n  colorLUT: CPUFallbackLookupTable,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  let grayscale;\n  let rgba;\n  let clut;\n\n  start = now();\n\n  if (colorLUT instanceof colors.LookupTable) {\n    clut = colorLUT.Table;\n  } else {\n    clut = colorLUT;\n  }\n\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale =\n        grayscaleLut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale = grayscaleLut[pixelData[storedPixelDataIndex++]];\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n\nexport default storedPixelDataToCanvasImageDataPseudocolorLUT;\n","import * as colors from '../colors/index';\nimport now from './now';\nimport type { IImage, CPUFallbackLookupTable } from '../../../../types';\n\n/**\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} grayscaleLut Lookup table array\n * @param {LookupTable|Array} colorLUT Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nfunction storedPixelDataToCanvasImageDataPseudocolorLUTPET(\n  image: IImage,\n  lutFunction: (value: number) => number,\n  colorLUT: CPUFallbackLookupTable,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  let grayscale;\n  let rgba;\n  let clut;\n\n  start = now();\n\n  if (colorLUT instanceof colors.LookupTable) {\n    clut = colorLUT.Table;\n  } else {\n    clut = colorLUT;\n  }\n\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale = lutFunction(\n        pixelData[storedPixelDataIndex++] + -minPixelValue\n      );\n\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale = lutFunction(pixelData[storedPixelDataIndex++]);\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n\nexport default storedPixelDataToCanvasImageDataPseudocolorLUTPET;\n","import setToPixelCoordinateSystem from './setToPixelCoordinateSystem';\nimport now from './now';\nimport initializeRenderCanvas from './initializeRenderCanvas';\nimport getLut from './getLut';\nimport saveLastRendered from './saveLastRendered';\nimport doesImageNeedToBeRendered from './doesImageNeedToBeRendered';\nimport storedPixelDataToCanvasImageDataPseudocolorLUT from './storedPixelDataToCanvasImageDataPseudocolorLUT';\nimport storedPixelDataToCanvasImageDataPseudocolorLUTPET from './storedPixelDataToCanvasImageDataPseudocolorLUTPET';\nimport * as colors from '../colors/index';\nimport type { IImage, CPUFallbackEnabledElement } from '../../../../types';\nimport { clamp } from '../../../../utilities';\n\n/**\n * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate\n * it is returned, otherwise adjustments are made. It also sets the color transfer functions.\n *\n * @param {Object} enabledElement The cornerstone enabled element\n * @param {Object} image The image to be rendered\n * @param {Boolean} invalidated Is pixel data valid\n * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image\n * @memberof rendering\n */\nfunction getRenderCanvas(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage,\n  invalidated: boolean\n): HTMLCanvasElement {\n  if (!enabledElement.renderingTools.renderCanvas) {\n    enabledElement.renderingTools.renderCanvas =\n      document.createElement('canvas');\n  }\n\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  let colormap =\n    enabledElement.viewport.colormap || enabledElement.options.colormap;\n\n  if (enabledElement.options && enabledElement.options.colormap) {\n    console.warn(\n      'enabledElement.options.colormap is deprecated. Use enabledElement.viewport.colormap instead'\n    );\n  }\n  if (colormap && typeof colormap === 'string') {\n    colormap = colors.getColormap(colormap);\n  }\n\n  if (!colormap) {\n    throw new Error('renderPseudoColorImage: colormap not found.');\n  }\n\n  const colormapId = colormap.getId();\n\n  if (\n    doesImageNeedToBeRendered(enabledElement, image) === false &&\n    invalidated !== true &&\n    enabledElement.renderingTools.colormapId === colormapId\n  ) {\n    return renderCanvas;\n  }\n\n  // If our render canvas does not match the size of this image reset it\n  // NOTE: This might be inefficient if we are updating multiple images of different\n  // Sizes frequently.\n  if (\n    renderCanvas.width !== image.width ||\n    renderCanvas.height !== image.height\n  ) {\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  // Get the lut to use\n  let start = now();\n\n  if (\n    !enabledElement.renderingTools.colorLUT ||\n    invalidated ||\n    enabledElement.renderingTools.colormapId !== colormapId\n  ) {\n    colormap.setNumberOfColors(256);\n    enabledElement.renderingTools.colorLUT = colormap.createLookupTable();\n    enabledElement.renderingTools.colormapId = colormapId;\n  }\n\n  const renderCanvasData = enabledElement.renderingTools.renderCanvasData;\n  const renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;\n  const { viewport } = enabledElement;\n  const colorLUT = enabledElement.renderingTools.colorLUT;\n\n  if (viewport.modality === 'PT') {\n    const { windowWidth, windowCenter } = viewport.voi;\n    const minimum = windowCenter - windowWidth / 2;\n    const maximum = windowCenter + windowWidth / 2;\n    const range = maximum - minimum;\n    const collectedMultiplierTerms = 255.0 / range;\n\n    let petVOILutFunction;\n\n    if (viewport.invert) {\n      petVOILutFunction = (value) => {\n        return clamp(\n          Math.floor(255 - (value - minimum) * collectedMultiplierTerms),\n          0,\n          255\n        );\n      };\n    } else {\n      petVOILutFunction = (value) => {\n        return clamp(\n          Math.floor((value - minimum) * collectedMultiplierTerms),\n          0,\n          255\n        );\n      };\n    }\n\n    storedPixelDataToCanvasImageDataPseudocolorLUTPET(\n      image,\n      petVOILutFunction,\n      colorLUT,\n      renderCanvasData.data\n    );\n  } else {\n    const lut = getLut(image, enabledElement.viewport, invalidated);\n\n    image.stats = image.stats || {};\n    image.stats.lastLutGenerateTime = now() - start;\n\n    storedPixelDataToCanvasImageDataPseudocolorLUT(\n      image,\n      lut,\n      colorLUT,\n      renderCanvasData.data\n    );\n  }\n\n  start = now();\n  renderCanvasContext.putImageData(renderCanvasData, 0, 0);\n  image.stats.lastPutImageDataTime = now() - start;\n\n  return renderCanvas;\n}\n\n/**\n * API function to draw a pseudo-color image to a given enabledElement\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw\n * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used\n * @returns {void}\n * @memberof rendering\n */\nexport function renderPseudoColorImage(\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'drawImage: enabledElement parameter must not be undefined'\n    );\n  }\n\n  const image = enabledElement.image;\n\n  if (image === undefined) {\n    throw new Error('drawImage: image must be loaded before it can be drawn');\n  }\n\n  // Get the canvas context and reset the transform\n  const context = enabledElement.canvas.getContext('2d');\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // Clear the canvas\n  context.fillStyle = 'black';\n  context.fillRect(\n    0,\n    0,\n    enabledElement.canvas.width,\n    enabledElement.canvas.height\n  );\n\n  // Turn off image smooth/interpolation if pixelReplication is set in the viewport\n  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;\n\n  // Save the canvas context state and apply the viewport properties\n  setToPixelCoordinateSystem(enabledElement, context);\n\n  // If no options are set we will retrieve the renderCanvas through the\n  // Normal Canvas rendering path\n  // TODO: Add WebGL support for pseudocolor pipeline\n  const renderCanvas = getRenderCanvas(enabledElement, image, invalidated);\n\n  const sx = enabledElement.viewport.displayedArea.tlhc.x - 1;\n  const sy = enabledElement.viewport.displayedArea.tlhc.y - 1;\n  const width = enabledElement.viewport.displayedArea.brhc.x - sx;\n  const height = enabledElement.viewport.displayedArea.brhc.y - sy;\n\n  context.drawImage(renderCanvas, sx, sy, width, height, 0, 0, width, height);\n\n  enabledElement.renderingTools = saveLastRendered(enabledElement);\n}\n","import now from './rendering/now';\nimport { renderColorImage } from './rendering/renderColorImage';\nimport { renderGrayscaleImage } from './rendering/renderGrayscaleImage';\nimport { renderPseudoColorImage } from './rendering/renderPseudoColorImage';\nimport { CPUFallbackEnabledElement } from '../../../types';\n\n/**\n * Draw an image to a given enabled element synchronously\n *\n * @param enabledElement - An enabled element to draw into\n * @param invalidated - true if pixel data has been invalidated and cached rendering should not be used\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  const image = enabledElement.image;\n\n  // Check if enabledElement can be redrawn\n  if (!enabledElement.canvas || !enabledElement.image) {\n    return;\n  }\n\n  // Start measuring the time needed to draw the image.\n  const start = now();\n\n  image.stats = {\n    lastGetPixelDataTime: -1.0,\n    lastStoredPixelDataToCanvasImageDataTime: -1.0,\n    lastPutImageDataTime: -1.0,\n    lastRenderTime: -1.0,\n    lastLutGenerateTime: -1.0,\n  };\n\n  if (image) {\n    let render = image.render;\n\n    if (!render) {\n      if (enabledElement.viewport.colormap) {\n        render = renderPseudoColorImage;\n      } else if (image.color) {\n        render = renderColorImage;\n      } else {\n        render = renderGrayscaleImage;\n      }\n    }\n\n    render(enabledElement, invalidated);\n  }\n\n  // Calculate how long it took to draw the image/layers\n  const renderTimeInMs = now() - start;\n\n  image.stats.lastRenderTime = renderTimeInMs;\n\n  enabledElement.invalid = false;\n  enabledElement.needsRedraw = false;\n}\n","import { Transform } from './transform';\nimport {\n  CPUFallbackEnabledElement,\n  CPUFallbackTransform,\n} from '../../../../types';\n\n/**\n * Calculate the transform for a Cornerstone enabled element\n *\n * @param enabledElement - The Cornerstone Enabled Element\n * @param scale - The viewport scale\n * @returns The current transform\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  scale?: number\n): CPUFallbackTransform {\n  const transform = new Transform();\n\n  if (!enabledElement.viewport.displayedArea) {\n    return transform;\n  }\n\n  // Move to center of canvas\n  transform.translate(\n    enabledElement.canvas.width / 2,\n    enabledElement.canvas.height / 2\n  );\n\n  // Apply the rotation before scaling for non square pixels\n  const angle = enabledElement.viewport.rotation;\n\n  if (angle !== 0) {\n    transform.rotate((angle * Math.PI) / 180);\n  }\n\n  // Apply the scale\n  let widthScale = enabledElement.viewport.scale;\n  let heightScale = enabledElement.viewport.scale;\n\n  const width =\n    enabledElement.viewport.displayedArea.brhc.x -\n    (enabledElement.viewport.displayedArea.tlhc.x - 1);\n  const height =\n    enabledElement.viewport.displayedArea.brhc.y -\n    (enabledElement.viewport.displayedArea.tlhc.y - 1);\n\n  if (enabledElement.viewport.displayedArea.presentationSizeMode === 'NONE') {\n    if (\n      enabledElement.image.rowPixelSpacing <\n      enabledElement.image.columnPixelSpacing\n    ) {\n      widthScale *=\n        enabledElement.image.columnPixelSpacing /\n        enabledElement.image.rowPixelSpacing;\n    } else if (\n      enabledElement.image.columnPixelSpacing <\n      enabledElement.image.rowPixelSpacing\n    ) {\n      heightScale *=\n        enabledElement.image.rowPixelSpacing /\n        enabledElement.image.columnPixelSpacing;\n    }\n  } else {\n    // These should be good for \"TRUE SIZE\" and \"MAGNIFY\"\n    widthScale = enabledElement.viewport.displayedArea.columnPixelSpacing;\n    heightScale = enabledElement.viewport.displayedArea.rowPixelSpacing;\n\n    if (\n      enabledElement.viewport.displayedArea.presentationSizeMode ===\n      'SCALE TO FIT'\n    ) {\n      // Fit TRUE IMAGE image (width/height) to window\n      const verticalScale =\n        enabledElement.canvas.height / (height * heightScale);\n      const horizontalScale =\n        enabledElement.canvas.width / (width * widthScale);\n\n      // Apply new scale\n      widthScale = heightScale = Math.min(horizontalScale, verticalScale);\n\n      if (\n        enabledElement.viewport.displayedArea.rowPixelSpacing <\n        enabledElement.viewport.displayedArea.columnPixelSpacing\n      ) {\n        widthScale *=\n          enabledElement.viewport.displayedArea.columnPixelSpacing /\n          enabledElement.viewport.displayedArea.rowPixelSpacing;\n      } else if (\n        enabledElement.viewport.displayedArea.columnPixelSpacing <\n        enabledElement.viewport.displayedArea.rowPixelSpacing\n      ) {\n        heightScale *=\n          enabledElement.viewport.displayedArea.rowPixelSpacing /\n          enabledElement.viewport.displayedArea.columnPixelSpacing;\n      }\n    }\n  }\n\n  transform.scale(widthScale, heightScale);\n\n  // Unrotate to so we can translate unrotated\n  if (angle !== 0) {\n    transform.rotate((-angle * Math.PI) / 180);\n  }\n\n  // Apply the pan offset\n  transform.translate(\n    enabledElement.viewport.translation.x,\n    enabledElement.viewport.translation.y\n  );\n\n  // Rotate again so we can apply general scale\n  if (angle !== 0) {\n    transform.rotate((angle * Math.PI) / 180);\n  }\n\n  if (scale !== undefined) {\n    // Apply the font scale\n    transform.scale(scale, scale);\n  }\n\n  // Apply Flip if required\n  if (enabledElement.viewport.hflip) {\n    transform.scale(-1, 1);\n  }\n\n  if (enabledElement.viewport.vflip) {\n    transform.scale(1, -1);\n  }\n\n  // Move back from center of image\n  transform.translate(-width / 2, -height / 2);\n\n  return transform;\n}\n","import getTransform from './getTransform';\n\nimport { Point2, CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Converts a point in the canvas coordinate system to the pixel coordinate system\n * system.  This can be used to reset tools' image coordinates after modifications\n * have been made in canvas space (e.g. moving a tool by a few cm, independent of\n * image resolution).\n *\n * @param element - The Cornerstone element within which the input point lies\n * @param pt - The input point in the canvas coordinate system\n *\n * @returns The transformed point in the pixel coordinate system\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  pt: Point2\n): Point2 {\n  const transform = getTransform(enabledElement);\n\n  transform.invert();\n\n  return transform.transformPoint(pt);\n}\n","import { CPUFallbackViewport, Point2 } from '../../../../types';\n\ntype Shift = {\n  x: number;\n  y: number;\n};\n/**\n * Corrects the shift by accounting for viewport rotation and flips.\n *\n * @param shift - The shift to correct.\n * @param viewportOrientation - Object containing information on the viewport orientation.\n */\nexport default function (\n  shift: Shift,\n  viewportOrientation: CPUFallbackViewport\n): Shift {\n  const { hflip, vflip, rotation } = viewportOrientation;\n\n  // Apply Flips\n  shift.x *= hflip ? -1 : 1;\n  shift.y *= vflip ? -1 : 1;\n\n  // Apply rotations\n  if (rotation !== 0) {\n    const angle = (rotation * Math.PI) / 180;\n\n    const cosA = Math.cos(angle);\n    const sinA = Math.sin(angle);\n\n    const newX = shift.x * cosA - shift.y * sinA;\n    const newY = shift.x * sinA + shift.y * cosA;\n\n    shift.x = newX;\n    shift.y = newY;\n  }\n\n  return shift;\n}\n","import { CPUFallbackViewport } from '../../../../types';\n\nconst state = {\n  viewport: {},\n};\n\n/**\n * Sets new default values for `getDefaultViewport`\n *\n * @param {Object} viewport - Object that sets new default values for getDefaultViewport\n * @returns {undefined}\n */\nexport default function (viewport: CPUFallbackViewport): void {\n  state.viewport = viewport || {};\n}\n\nexport { state };\n","import createViewport from './createViewport';\nimport getImageFitScale from './getImageFitScale';\nimport {\n  IImage,\n  CPUFallbackColormap,\n  CPUFallbackViewport,\n} from '../../../../types';\n\n/**\n * Creates a new viewport object containing default values for the image and canvas\n *\n * @param canvas - A Canvas DOM element\n * @param image - A Cornerstone Image Object\n * @returns viewport - object\n */\nexport default function (\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  modality?: string,\n  colormap?: CPUFallbackColormap\n): CPUFallbackViewport {\n  if (canvas === undefined) {\n    throw new Error(\n      'getDefaultViewport: parameter canvas must not be undefined'\n    );\n  }\n\n  if (image === undefined) {\n    return createViewport();\n  }\n\n  // Fit image to window\n  const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n\n  let voi;\n\n  if (modality === 'PT' && image.isPreScaled) {\n    voi = {\n      windowWidth: 5,\n      windowCenter: 2.5,\n    };\n  } else if (\n    image.windowWidth !== undefined &&\n    image.windowCenter !== undefined\n  ) {\n    voi = {\n      windowWidth: Array.isArray(image.windowWidth)\n        ? image.windowWidth[0]\n        : image.windowWidth,\n      windowCenter: Array.isArray(image.windowCenter)\n        ? image.windowCenter[0]\n        : image.windowCenter,\n    };\n  }\n\n  return {\n    scale,\n    translation: {\n      x: 0,\n      y: 0,\n    },\n    voi,\n    invert: image.invert,\n    pixelReplication: false,\n    rotation: 0,\n    hflip: false,\n    vflip: false,\n    modalityLUT: image.modalityLUT,\n    modality,\n    voiLUT: image.voiLUT,\n    colormap: colormap !== undefined ? colormap : image.colormap,\n    displayedArea: {\n      tlhc: {\n        x: 1,\n        y: 1,\n      },\n      brhc: {\n        x: image.columns,\n        y: image.rows,\n      },\n      rowPixelSpacing:\n        image.rowPixelSpacing === undefined ? 1 : image.rowPixelSpacing,\n      columnPixelSpacing:\n        image.columnPixelSpacing === undefined ? 1 : image.columnPixelSpacing,\n      presentationSizeMode: 'NONE',\n    },\n  };\n}\n","import { state } from './setDefaultViewport';\nimport {\n  CPUFallbackViewportDisplayedArea,\n  CPUFallbackViewport,\n} from '../../../../types';\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * Creates the default displayed area.\n * C.10.4 Displayed Area Module: This Module describes Attributes required to define a Specified Displayed Area space.\n *\n * @returns {tlhc: {x,y}, brhc: {x, y},rowPixelSpacing: Number, columnPixelSpacing: Number, presentationSizeMode: Number} displayedArea object\n * @memberof Internal\n */\nfunction createDefaultDisplayedArea(): CPUFallbackViewportDisplayedArea {\n  return {\n    // Top Left Hand Corner\n    tlhc: {\n      x: 1,\n      y: 1,\n    },\n    // Bottom Right Hand Corner\n    brhc: {\n      x: 1,\n      y: 1,\n    },\n    rowPixelSpacing: 1,\n    columnPixelSpacing: 1,\n    presentationSizeMode: 'NONE',\n  };\n}\n\n/**\n * Creates a new viewport object containing default values\n *\n * @returns {Viewport} viewport object\n * @memberof Internal\n */\nexport default function createViewport(): CPUFallbackViewport {\n  const displayedArea = createDefaultDisplayedArea();\n  const initialDefaultViewport = {\n    scale: 1,\n    translation: {\n      x: 0,\n      y: 0,\n    },\n    voi: {\n      windowWidth: undefined,\n      windowCenter: undefined,\n    },\n    invert: false,\n    pixelReplication: false,\n    rotation: 0,\n    hflip: false,\n    vflip: false,\n    modalityLUT: undefined,\n    voiLUT: undefined,\n    colormap: undefined,\n    labelmap: false,\n    displayedArea,\n  };\n\n  return Object.assign({}, initialDefaultViewport, state.viewport);\n}\n","import { validateParameterUndefinedOrNull } from './validator';\nimport getImageSize from './getImageSize';\nimport { IImage } from '../../../../types';\n\n/**\n * Calculates the horizontal, vertical and minimum scale factor for an image\n   @param canvas - The window size where the image is displayed. This can be any HTML element or structure with a width, height fields (e.g. canvas).\n * @param image - The cornerstone image object\n * @param rotation - The rotation angle of the image.\n * @returns The calculated horizontal, vertical and minimum scale factor\n */\nexport default function (\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  rotation: number | null = null\n): {\n  verticalScale: number;\n  horizontalScale: number;\n  scaleFactor: number;\n} {\n  validateParameterUndefinedOrNull(\n    canvas,\n    'getImageScale: parameter canvas must not be undefined'\n  );\n  validateParameterUndefinedOrNull(\n    image,\n    'getImageScale: parameter image must not be undefined'\n  );\n\n  const imageSize = getImageSize(image, rotation);\n  const rowPixelSpacing = image.rowPixelSpacing || 1;\n  const columnPixelSpacing = image.columnPixelSpacing || 1;\n  let verticalRatio = 1;\n  let horizontalRatio = 1;\n\n  if (rowPixelSpacing < columnPixelSpacing) {\n    horizontalRatio = columnPixelSpacing / rowPixelSpacing;\n  } else {\n    // even if they are equal we want to calculate this ratio (the ration might be 0.5)\n    verticalRatio = rowPixelSpacing / columnPixelSpacing;\n  }\n\n  const verticalScale = canvas.height / imageSize.height / verticalRatio;\n  const horizontalScale = canvas.width / imageSize.width / horizontalRatio;\n\n  // Fit image to window\n  return {\n    verticalScale,\n    horizontalScale,\n    scaleFactor: Math.min(horizontalScale, verticalScale),\n  };\n}\n","import { validateParameterUndefinedOrNull } from './validator';\nimport { IImage } from '../../../../types';\n\n/**\n * Check if the angle is rotated\n * @param {Number} rotation the rotation angle\n * @returns {Boolean} true if the angle is rotated; Otherwise, false.\n * @memberof Internal\n */\nfunction isRotated(rotation?: number | null): boolean {\n  return !(\n    rotation === null ||\n    rotation === undefined ||\n    rotation === 0 ||\n    rotation === 180\n  );\n}\n\n/**\n * Retrieves the current image dimensions given an enabled element\n *\n * @param {any} image The Cornerstone image.\n * @param {Number} rotation Optional. The rotation angle of the image.\n * @return {{width:Number, height:Number}} The Image dimensions\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  rotation = null\n): { height: number; width: number } {\n  validateParameterUndefinedOrNull(\n    image,\n    'getImageSize: parameter image must not be undefined'\n  );\n  validateParameterUndefinedOrNull(\n    image.width,\n    'getImageSize: parameter image must have width'\n  );\n  validateParameterUndefinedOrNull(\n    image.height,\n    'getImageSize: parameter image must have height'\n  );\n\n  if (isRotated(rotation)) {\n    return {\n      height: image.width,\n      width: image.height,\n    };\n  }\n\n  return {\n    width: image.width,\n    height: image.height,\n  };\n}\n","import calculateTransform from './calculateTransform';\nimport {\n  CPUFallbackEnabledElement,\n  CPUFallbackTransform,\n} from '../../../../types';\n\nexport default function (\n  enabledElement: CPUFallbackEnabledElement\n): CPUFallbackTransform {\n  // Todo: for some reason using the cached transfer after the first call\n  // does not give correct transform.\n  // if (enabledElement.transform) {\n  //   return enabledElement.transform;\n  // }\n\n  return calculateTransform(enabledElement);\n}\n","import getTransform from './getTransform';\nimport { CPUFallbackEnabledElement, Point2 } from '../../../../types';\n\n/**\n * Converts a point in the pixel coordinate system to the canvas coordinate system\n * system.  This can be used to render using canvas context without having the weird\n * side effects that come from scaling and non square pixels\n *\n * @param {HTMLDivElement} element An HTML Element enabled for Cornerstone\n * @param {{x: Number, y: Number}} pt The transformed point in the pixel coordinate system\n *\n * @returns {{x: Number, y: Number}} The input point in the canvas coordinate system\n * @memberof PixelCoordinateSystem\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  pt: Point2\n): Point2 {\n  const transform = getTransform(enabledElement);\n\n  return transform.transformPoint(pt);\n}\n","import getImageFitScale from './getImageFitScale';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Resets the camera to the default position. which would be the center of the image.\n * with no translation, no flipping, no zoom and proper scale.\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  resetPan = true,\n  resetZoom = true\n): void {\n  const { canvas, image, viewport } = enabledElement;\n  const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n\n  viewport.vflip = false;\n  viewport.hflip = false;\n\n  if (resetPan) {\n    viewport.translation.x = 0;\n    viewport.translation.y = 0;\n  }\n\n  if (resetZoom) {\n    viewport.displayedArea.tlhc.x = 1;\n    viewport.displayedArea.tlhc.y = 1;\n    viewport.displayedArea.brhc.x = image.columns;\n    viewport.displayedArea.brhc.y = image.rows;\n\n    viewport.scale = scale;\n  }\n}\n","import fitToWindow from './fitToWindow';\nimport getImageSize from './getImageSize';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * This module is responsible for enabling an element to display images with cornerstone\n *\n * @param {HTMLDivElement} element The DOM element enabled for Cornerstone\n * @param {HTMLDivElement} canvas The Canvas DOM element within the DOM element enabled for Cornerstone\n * @returns {void}\n */\nfunction setCanvasSize(enabledElement: CPUFallbackEnabledElement) {\n  const { canvas } = enabledElement;\n  const { clientWidth, clientHeight } = canvas;\n\n  // Set the canvas to be same resolution as the client.\n  if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n    canvas.width = clientWidth;\n    canvas.height = clientHeight;\n  }\n}\n\n/**\n * Checks if the image of a given enabled element fitted the window\n * before the resize\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element\n * @param {number} oldCanvasWidth The width of the canvas before the resize\n * @param {number} oldCanvasHeight The height of the canvas before the resize\n * @return {Boolean} true if it fitted the windows, false otherwise\n */\nfunction wasFitToWindow(\n  enabledElement: CPUFallbackEnabledElement,\n  oldCanvasWidth: number,\n  oldCanvasHeight: number\n): boolean {\n  const scale = enabledElement.viewport.scale;\n  const imageSize = getImageSize(\n    enabledElement.image,\n    enabledElement.viewport.rotation\n  );\n  const imageWidth = Math.round(imageSize.width * scale);\n  const imageHeight = Math.round(imageSize.height * scale);\n  const x = enabledElement.viewport.translation.x;\n  const y = enabledElement.viewport.translation.y;\n\n  return (\n    (imageWidth === oldCanvasWidth && imageHeight <= oldCanvasHeight) ||\n    (imageWidth <= oldCanvasWidth &&\n      imageHeight === oldCanvasHeight &&\n      x === 0 &&\n      y === 0)\n  );\n}\n\n/**\n * Rescale the image relative to the changed size of the canvas\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element\n * @param {number} oldCanvasWidth The width of the canvas before the resize\n * @param {number} oldCanvasHeight The height of the canvas before the resize\n * @return {void}\n */\nfunction relativeRescale(\n  enabledElement: CPUFallbackEnabledElement,\n  oldCanvasWidth: number,\n  oldCanvasHeight: number\n): void {\n  const scale = enabledElement.viewport.scale;\n  const canvasWidth = enabledElement.canvas.width;\n  const canvasHeight = enabledElement.canvas.height;\n  const relWidthChange = canvasWidth / oldCanvasWidth;\n  const relHeightChange = canvasHeight / oldCanvasHeight;\n  const relChange = Math.sqrt(relWidthChange * relHeightChange);\n\n  enabledElement.viewport.scale = relChange * scale;\n}\n\n/**\n * Resizes an enabled element and optionally fits the image to window\n *\n * @param {HTMLDivElement} element The DOM element enabled for Cornerstone\n * @param {Boolean} forceFitToWindow true to to force a refit, false to rescale accordingly\n * @returns {void}\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  forceFitToWindow = false\n): void {\n  const oldCanvasWidth = enabledElement.canvas.width;\n  const oldCanvasHeight = enabledElement.canvas.height;\n\n  setCanvasSize(enabledElement);\n\n  if (enabledElement.image === undefined) {\n    return;\n  }\n\n  if (\n    forceFitToWindow ||\n    wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight)\n  ) {\n    // Fit the image to the window again if it fitted before the resize\n    fitToWindow(enabledElement);\n  } else {\n    // Adapt the scale of a zoomed or panned image relative to the size change\n    relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight);\n  }\n}\n","import getImageFitScale from './getImageFitScale';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Adjusts an image's scale and translation so the image is centered and all pixels\n * in the image are viewable.\n *\n * @param element - The Cornerstone element to update\n */\nexport default function (enabledElement: CPUFallbackEnabledElement): void {\n  const { image } = enabledElement;\n\n  // The new scale is the minimum of the horizontal and vertical scale values\n  enabledElement.viewport.scale = getImageFitScale(\n    enabledElement.canvas,\n    image,\n    enabledElement.viewport.rotation\n  ).scaleFactor;\n\n  enabledElement.viewport.translation.x = 0;\n  enabledElement.viewport.translation.y = 0;\n}\n","import {\n  CPUFallbackTransform,\n  Point2,\n  TransformMatrix2D,\n} from '../../../../types';\n\n// By Simon Sarris\n// Www.simonsarris.com\n// Sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    Var t = new Transform();\n//    T.rotate(5);\n//    Var m = t.m;\n//    Ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    Ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\nexport class Transform implements CPUFallbackTransform {\n  private m: TransformMatrix2D;\n\n  constructor() {\n    this.reset();\n  }\n\n  getMatrix(): TransformMatrix2D {\n    return this.m;\n  }\n\n  reset(): void {\n    this.m = [1, 0, 0, 1, 0, 0];\n  }\n\n  clone(): CPUFallbackTransform {\n    const transform = new Transform();\n\n    transform.m[0] = this.m[0];\n    transform.m[1] = this.m[1];\n    transform.m[2] = this.m[2];\n    transform.m[3] = this.m[3];\n    transform.m[4] = this.m[4];\n    transform.m[5] = this.m[5];\n\n    return transform;\n  }\n\n  multiply(matrix: TransformMatrix2D): void {\n    const m11 = this.m[0] * matrix[0] + this.m[2] * matrix[1];\n    const m12 = this.m[1] * matrix[0] + this.m[3] * matrix[1];\n\n    const m21 = this.m[0] * matrix[2] + this.m[2] * matrix[3];\n    const m22 = this.m[1] * matrix[2] + this.m[3] * matrix[3];\n\n    const dx = this.m[0] * matrix[4] + this.m[2] * matrix[5] + this.m[4];\n    const dy = this.m[1] * matrix[4] + this.m[3] * matrix[5] + this.m[5];\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n  }\n\n  invert(): void {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n  }\n\n  rotate(rad: number): void {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n  }\n\n  translate(x: number, y: number): void {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n  }\n\n  scale(sx: number, sy: number) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n  }\n\n  transformPoint(point: Point2): Point2 {\n    const x = point[0];\n    const y = point[1];\n\n    return [\n      x * this.m[0] + y * this.m[2] + this.m[4],\n      x * this.m[1] + y * this.m[3] + this.m[5],\n    ];\n  }\n}\n","/**\n * Check if the supplied parameter is undefined and throws and error\n * @param {any} checkParam the parameter to validate for undefined\n * @param {any} errorMsg the error message to be thrown\n * @returns {void}\n * @memberof internal\n */\nexport function validateParameterUndefined(\n  checkParam: any | undefined,\n  errorMsg: string\n): void {\n  if (checkParam === undefined) {\n    throw new Error(errorMsg);\n  }\n}\n\n/**\n * Check if the supplied parameter is undefined or null and throws and error\n * @param {any} checkParam the parameter to validate for undefined\n * @param {any} errorMsg the error message to be thrown\n * @returns {void}\n * @memberof internal\n */\nexport function validateParameterUndefinedOrNull(\n  checkParam: any | null | undefined,\n  errorMsg: string\n): void {\n  if (checkParam === undefined || checkParam === null) {\n    throw new Error(errorMsg);\n  }\n}\n","import { mat4, vec3 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkVolumeProperty from './VolumeProperty.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolume');\n  publicAPI.getVolumes = () => publicAPI;\n  publicAPI.makeProperty = vtkVolumeProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce((a, b) => a && b[0] === b[1], true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(x => x);\n      const bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(pt => vec3.transformMat4(pt, pt, tmp4));\n\n      /* eslint-disable no-multi-assign */\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n      model.bounds = model.bounds.map((d, i) => i % 2 === 0 ? bbox.reduce((a, b) => a > b[i / 2] ? b[i / 2] : a, d) : bbox.reduce((a, b) => a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a, d));\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [1, -1, 1, -1, 1, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkVolume(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkVolume');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVolume$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkVolume$1 as default, extend, newInstance };\n","import vtkVolume from '@kitware/vtk.js/Rendering/Core/Volume';\n\nimport { VolumeActor } from './../../types/IActor';\nimport { VoiModifiedEventDetail } from './../../types/EventTypes';\nimport { loadVolume } from '../../loaders/volumeLoader';\nimport createVolumeMapper from './createVolumeMapper';\nimport BlendModes from '../../enums/BlendModes';\nimport { triggerEvent } from '../../utilities';\nimport { Events } from '../../enums';\nimport setDefaultVolumeVOI from './setDefaultVolumeVOI';\n\ninterface createVolumeActorInterface {\n  volumeId: string;\n  callback?: ({\n    volumeActor,\n    volumeId,\n  }: {\n    volumeActor: VolumeActor;\n    volumeId: string;\n  }) => void;\n  blendMode?: BlendModes;\n}\n\n/**\n * Given a volumeId, it creates a vtk volume actor and returns it. If\n * callback is provided, it will be called with the volume actor and the\n * volumeId. If blendMode is provided, it will be set on the volume actor.\n *\n * @param props - createVolumeActorInterface\n * @returns A promise that resolves to a VolumeActor.\n */\nasync function createVolumeActor(\n  props: createVolumeActorInterface,\n  element: HTMLDivElement,\n  viewportId: string,\n  suppressEvents = false,\n  useNativeDataType = false\n): Promise<VolumeActor> {\n  const { volumeId, callback, blendMode } = props;\n\n  const imageVolume = await loadVolume(volumeId);\n\n  if (!imageVolume) {\n    throw new Error(\n      `imageVolume with id: ${imageVolume.volumeId} does not exist`\n    );\n  }\n\n  const { imageData, vtkOpenGLTexture } = imageVolume;\n\n  const volumeMapper = createVolumeMapper(imageData, vtkOpenGLTexture);\n\n  if (blendMode) {\n    volumeMapper.setBlendMode(blendMode);\n  }\n\n  const volumeActor = vtkVolume.newInstance();\n  volumeActor.setMapper(volumeMapper);\n\n  const numberOfComponents = imageData\n    .getPointData()\n    .getScalars()\n    .getNumberOfComponents();\n\n  if (numberOfComponents === 3) {\n    volumeActor.getProperty().setIndependentComponents(false);\n  }\n\n  await setDefaultVolumeVOI(volumeActor, imageVolume, useNativeDataType);\n\n  if (callback) {\n    callback({ volumeActor, volumeId });\n  }\n\n  if (!suppressEvents) {\n    triggerVOIModified(element, viewportId, volumeActor, volumeId);\n  }\n\n  return volumeActor;\n}\n\nfunction triggerVOIModified(\n  element: HTMLDivElement,\n  viewportId: string,\n  volumeActor: VolumeActor,\n  volumeId: string\n) {\n  const voiRange = volumeActor\n    .getProperty()\n    .getRGBTransferFunction(0)\n    .getRange();\n\n  const voiModifiedEventDetail: VoiModifiedEventDetail = {\n    viewportId,\n    range: {\n      lower: voiRange[0],\n      upper: voiRange[1],\n    },\n    volumeId,\n  };\n\n  triggerEvent(element, Events.VOI_MODIFIED, voiModifiedEventDetail);\n}\n\nexport default createVolumeActor;\n","import {\n  VolumeActor,\n  IImageVolume,\n  VOIRange,\n  ScalingParameters,\n} from '../../types';\nimport { loadAndCacheImage } from '../../loaders/imageLoader';\nimport * as metaData from '../../metaData';\nimport { getMinMax, windowLevel } from '../../utilities';\nimport { RequestType } from '../../enums';\nimport cache from '../../cache';\n\nconst PRIORITY = 0;\nconst REQUEST_TYPE = RequestType.Prefetch;\n\n/**\n * It sets the default window level of an image volume based on the VOI.\n * It first look for the VOI in the metadata and if it is not found, it\n * loads the middle slice image (middle imageId) and based on its min\n * and max pixel values, it calculates the VOI.\n * Finally it sets the VOI on the volumeActor transferFunction\n * @param volumeActor - The volume actor\n * @param imageVolume - The image volume that we want to set the VOI for.\n * @param useNativeDataType -  The image data type is native or Float32Array\n */\nasync function setDefaultVolumeVOI(\n  volumeActor: VolumeActor,\n  imageVolume: IImageVolume,\n  useNativeDataType: boolean\n): Promise<void> {\n  let voi = getVOIFromMetadata(imageVolume);\n\n  if (!voi && imageVolume?.imageIds?.length) {\n    voi = await getVOIFromMinMax(imageVolume, useNativeDataType);\n    voi = handlePreScaledVolume(imageVolume, voi);\n  }\n  // if (!voi || voi.lower === undefined || voi.upper === undefined) {\n  //   throw new Error(\n  //     'Could not get VOI from metadata, nor from the min max of the image middle slice'\n  //   );\n  // }\n  if (\n    (voi?.lower === 0 && voi?.upper === 0) ||\n    voi?.lower === undefined ||\n    voi?.upper === undefined\n  ) {\n    return;\n  }\n\n  volumeActor\n    .getProperty()\n    .getRGBTransferFunction(0)\n    .setMappingRange(voi.lower, voi.upper);\n}\n\nfunction handlePreScaledVolume(imageVolume: IImageVolume, voi: VOIRange) {\n  const imageIds = imageVolume.imageIds;\n  const imageIdIndex = Math.floor(imageIds.length / 2);\n  const imageId = imageIds[imageIdIndex];\n\n  const generalSeriesModule =\n    metaData.get('generalSeriesModule', imageId) || {};\n\n  /**\n   * If the volume is prescaled and the modality is PT Sometimes you get super high\n   * values at the peak and it skews the min/max so nothing useful is displayed\n   * Therefore, we follow the majority of other viewers and we set the min/max\n   * for the scaled PT to be 0, 5\n   */\n  if (_isCurrentImagePTPrescaled(generalSeriesModule.modality, imageVolume)) {\n    return {\n      lower: 0,\n      upper: 5,\n    };\n  }\n\n  return voi;\n}\n\n/**\n * Get the VOI from the metadata of the middle slice of the image volume or the metadata of the image volume\n * It checks the metadata for the VOI and if it is not found, it returns null\n *\n * @param imageVolume - The image volume that we want to get the VOI from.\n * @returns VOIRange with lower and upper values\n */\nfunction getVOIFromMetadata(imageVolume: IImageVolume): VOIRange {\n  const { imageIds, metadata } = imageVolume;\n  let voi;\n  if (imageIds.length) {\n    const imageIdIndex = Math.floor(imageIds.length / 2);\n    const imageId = imageIds[imageIdIndex];\n    const voiLutModule = metaData.get('voiLutModule', imageId);\n    if (voiLutModule && voiLutModule.windowWidth && voiLutModule.windowCenter) {\n      const { windowWidth, windowCenter } = voiLutModule;\n      voi = {\n        windowWidth: Array.isArray(windowWidth) ? windowWidth[0] : windowWidth,\n        windowCenter: Array.isArray(windowCenter)\n          ? windowCenter[0]\n          : windowCenter,\n      };\n    }\n  } else {\n    voi = metadata?.voiLut?.[0];\n  }\n  if (voi) {\n    const { lower, upper } = windowLevel.toLowHighRange(\n      Number(voi.windowWidth),\n      Number(voi.windowCenter)\n    );\n    return {\n      lower,\n      upper,\n    };\n  }\n}\n\n/**\n * It loads the middle slice image (middle imageId) and based on its min\n * and max pixel values, it calculates the VOI.\n *\n * @param imageVolume - The image volume that we want to get the VOI from.\n * @param useNativeDataType -  The image data type is native or Float32Array\n * @returns The VOIRange with lower and upper values\n */\nasync function getVOIFromMinMax(\n  imageVolume: IImageVolume,\n  useNativeDataType: boolean\n): Promise<VOIRange> {\n  const { imageIds } = imageVolume;\n  const scalarData = imageVolume.getScalarData();\n\n  // Get the middle image from the list of imageIds\n  const imageIdIndex = Math.floor(imageIds.length / 2);\n  const imageId = imageVolume.imageIds[imageIdIndex];\n  const generalSeriesModule =\n    metaData.get('generalSeriesModule', imageId) || {};\n  const { modality } = generalSeriesModule;\n  const modalityLutModule = metaData.get('modalityLutModule', imageId) || {};\n\n  const numImages = imageIds.length;\n  const bytesPerImage = scalarData.byteLength / numImages;\n  const voxelsPerImage = scalarData.length / numImages;\n  const bytePerPixel = scalarData.BYTES_PER_ELEMENT;\n\n  const scalingParameters: ScalingParameters = {\n    rescaleSlope: modalityLutModule.rescaleSlope,\n    rescaleIntercept: modalityLutModule.rescaleIntercept,\n    modality,\n  };\n\n  let scalingParametersToUse;\n  if (modality === 'PT') {\n    const suvFactor = metaData.get('scalingModule', imageId);\n\n    if (suvFactor) {\n      scalingParametersToUse = {\n        ...scalingParameters,\n        suvbw: suvFactor.suvbw,\n      };\n    }\n  }\n\n  const byteOffset = imageIdIndex * bytesPerImage;\n\n  const options = {\n    targetBuffer: {\n      type: useNativeDataType ? undefined : 'Float32Array',\n    },\n    priority: PRIORITY,\n    requestType: REQUEST_TYPE,\n    useNativeDataType,\n    preScale: {\n      enabled: true,\n      scalingParameters: scalingParametersToUse,\n    },\n  };\n\n  // Loading the middle slice image for a volume has two scenarios, the first one is that\n  // uses the same volumeLoader which might not resolve to an image (since for performance\n  // reasons volumes' pixelData is set via offset and length on the volume arrayBuffer\n  // when each slice is loaded). The second scenario is that the image might not reach\n  // to the volumeLoader, and an already cached image (with Image object) is used\n  // instead. For the first scenario, we use the arrayBuffer of the volume to get the correct\n  // slice for the imageScalarData, and for the second scenario we use the getPixelData\n  // on the Cornerstone IImage object to get the pixel data.\n  // Note: we don't want to use the derived or generated images for setting the\n  // default VOI, because they are not the original. This is ugly but don't\n  // know how to do it better.\n  let image = cache.getImage(imageId);\n\n  if (!imageVolume.referencedImageIds?.length) {\n    // we should ignore the cache here,\n    // since we want to load the image from with the most\n    // recent prescale settings\n    image = await loadAndCacheImage(imageId, { ...options, ignoreCache: true });\n  }\n\n  const imageScalarData = image\n    ? image.getPixelData()\n    : _getImageScalarDataFromImageVolume(\n        imageVolume,\n        byteOffset,\n        bytePerPixel,\n        voxelsPerImage\n      );\n\n  // Get the min and max pixel values of the middle slice\n  const { min, max } = getMinMax(imageScalarData);\n\n  return {\n    lower: min,\n    upper: max,\n  };\n}\n\nfunction _getImageScalarDataFromImageVolume(\n  imageVolume,\n  byteOffset,\n  bytePerPixel,\n  voxelsPerImage\n) {\n  const { scalarData } = imageVolume;\n  const { buffer } = scalarData;\n  if (scalarData.BYTES_PER_ELEMENT !== bytePerPixel) {\n    byteOffset *= scalarData.BYTES_PER_ELEMENT / bytePerPixel;\n  }\n\n  const TypedArray = scalarData.constructor;\n  const imageScalarData = new TypedArray(voxelsPerImage);\n\n  const volumeBufferView = new TypedArray(buffer, byteOffset, voxelsPerImage);\n\n  imageScalarData.set(volumeBufferView);\n\n  return imageScalarData;\n}\n\nfunction _isCurrentImagePTPrescaled(modality, imageVolume) {\n  if (modality !== 'PT' || !imageVolume.isPreScaled) {\n    return false;\n  }\n\n  if (!imageVolume.scaling?.PT.suvbw) {\n    return false;\n  }\n\n  return true;\n}\n\nexport default setDefaultVolumeVOI;\n","import macro from '@kitware/vtk.js/macros';\nimport vtkVolumeMapper from '@kitware/vtk.js/Rendering/Core/VolumeMapper';\n\n/**\n * vtkSharedVolumeMapper - A derived class of the core vtkVolumeMapper class\n * the scalar texture in as an argument. This is so we can share the same texture\n * memory across different mappers/actors, so we don't duplicate memory usage.\n *\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n * @hidden\n */\nfunction vtkSharedVolumeMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkSharedVolumeMapper');\n\n  const superDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    model.scalarTexture = null;\n    superDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  scalarTexture: null,\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkVolumeMapper.extend(publicAPI, model, initialValues);\n\n  macro.setGet(publicAPI, model, ['scalarTexture']);\n\n  // Object methods\n  vtkSharedVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkSharedVolumeMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import {\n  ICache,\n  IImage,\n  IGeometry,\n  IImageLoadObject,\n  IVolumeLoadObject,\n  IGeometryLoadObject,\n  ICachedImage,\n  ICachedVolume,\n  ICachedGeometry,\n  EventTypes,\n  IImageVolume,\n} from '../types';\nimport { triggerEvent, imageIdToURI } from '../utilities';\nimport eventTarget from '../eventTarget';\nimport Events from '../enums/Events';\nimport { ImageVolume } from './classes/ImageVolume';\n\nconst ONE_GB = 1073741824;\n\n/**\n * Stores images, volumes and geometry.\n * There are two sizes - the max cache size, that controls the overal maximum\n * size, and the instance size, which controls how big any single object can\n * be.  Defaults are 3 GB and 2 GB - 8 bytes (just enough to allow allocating it\n * without crashing).\n * The 3 gb is tuned to the chromium garbage collection cycle to allow image volumes\n * to be used/discarded.\n */\nclass Cache implements ICache {\n  // used to store image data (2d)\n  private readonly _imageCache = new Map<string, ICachedImage>(); // volatile space\n  // used to store volume data (3d)\n  private readonly _volumeCache = new Map<string, ICachedVolume>(); // non-volatile space\n  // Todo: contour for now, but will be used for surface, etc.\n  private readonly _geometryCache: Map<string, ICachedGeometry>;\n\n  private _imageCacheSize = 0;\n  private _volumeCacheSize = 0;\n  private _maxCacheSize = 3 * ONE_GB;\n  private _maxInstanceSize = 4 * ONE_GB - 8;\n\n  constructor() {\n    // used to store object data (contour, surface, etc.)\n    this._geometryCache = new Map();\n  }\n\n  /**\n   * Set the maximum cache Size\n   *\n   * Maximum cache size should be set before adding the data.  If set after,\n   * and it is smaller than the current size, will cause issues.\n   *\n   * @param newMaxCacheSize -  new maximum cache size\n   *\n   */\n  public setMaxCacheSize = (newMaxCacheSize: number): void => {\n    if (!newMaxCacheSize || typeof newMaxCacheSize !== 'number') {\n      const errorMessage = `New max cacheSize ${this._maxCacheSize} should be defined and should be a number.`;\n      throw new Error(errorMessage);\n    }\n\n    this._maxCacheSize = newMaxCacheSize;\n  };\n\n  /**\n   * Checks if there is enough space in the cache for requested byte size\n   *\n   * It returns false, if the sum of volatile (image) cache and unallocated cache\n   * is less than the requested byteLength\n   *\n   * @param byteLength - byte length of requested byte size\n   *\n   * @returns - boolean indicating if there is enough space in the cache\n   */\n  public isCacheable = (byteLength: number): boolean => {\n    if (byteLength > this._maxInstanceSize) {\n      return false;\n    }\n    const unallocatedSpace = this.getBytesAvailable();\n    const imageCacheSize = this._imageCacheSize;\n    const availableSpace = unallocatedSpace + imageCacheSize;\n\n    return availableSpace > byteLength;\n  };\n\n  /**\n   * Returns maximum CacheSize allowed\n   *\n   * @returns maximum allowed cache size\n   */\n  public getMaxCacheSize = (): number => this._maxCacheSize;\n\n  /**\n   * Returns maximum size of a single instance (volume or single image)\n   *\n   * @returns maximum instance size\n   */\n  public getMaxInstanceSize = (): number => this._maxInstanceSize;\n\n  /**\n   * Returns current size of the cache\n   *\n   * @returns current size of the cache\n   */\n  public getCacheSize = (): number =>\n    this._imageCacheSize + this._volumeCacheSize;\n\n  /**\n   * Returns the unallocated size of the cache\n   *\n   */\n  public getBytesAvailable(): number {\n    return this.getMaxCacheSize() - this.getCacheSize();\n  }\n\n  /**\n   * Deletes the imageId from the image cache\n   *\n   * @param imageId - imageId\n   *\n   */\n  private _decacheImage = (imageId: string) => {\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (!cachedImage) {\n      return;\n    }\n\n    const { imageLoadObject } = cachedImage;\n\n    // Cancel any in-progress loading\n    if (imageLoadObject.cancelFn) {\n      imageLoadObject.cancelFn();\n    }\n\n    if (imageLoadObject.decache) {\n      imageLoadObject.decache();\n    }\n\n    this._imageCache.delete(imageId);\n  };\n\n  /**\n   * Deletes the volumeId from the volume cache\n   *\n   * @param volumeId - volumeId\n   *\n   */\n  private _decacheVolume = (volumeId: string) => {\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (!cachedVolume) {\n      return;\n    }\n\n    const { volumeLoadObject, volume } = cachedVolume;\n\n    if (!volume) {\n      return;\n    }\n\n    if (volume.cancelLoading) {\n      volume.cancelLoading();\n    }\n\n    if (volume.imageData) {\n      volume.imageData.delete();\n    }\n\n    // if we had views for the images of the volume, we need to restore them\n    // to avoid memory leaks\n    this._restoreImagesFromBuffer(volume);\n\n    if (volumeLoadObject.cancelFn) {\n      // Cancel any in-progress loading\n      volumeLoadObject.cancelFn();\n    }\n\n    if (volumeLoadObject.decache) {\n      volumeLoadObject.decache();\n    }\n\n    this._volumeCache.delete(volumeId);\n  };\n\n  /**\n   * Deletes all the images and volumes in the cache\n   *\n   * Relevant events are fired for each decached image (IMAGE_CACHE_IMAGE_REMOVED) and\n   * the decached volume (VOLUME_CACHE_VOLUME_REMOVED).\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   * @fires Events.VOLUME_CACHE_VOLUME_REMOVED\n   *\n   */\n  public purgeCache = (): void => {\n    const imageIterator = this._imageCache.keys();\n\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      const { value: imageId, done } = imageIterator.next();\n\n      if (done) {\n        break;\n      }\n\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n    }\n\n    this.purgeVolumeCache();\n  };\n\n  /**\n   * Deletes all the volumes in the cache\n   */\n  public purgeVolumeCache = (): void => {\n    const volumeIterator = this._volumeCache.keys();\n\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      const { value: volumeId, done } = volumeIterator.next();\n\n      if (done) {\n        break;\n      }\n\n      this.removeVolumeLoadObject(volumeId);\n\n      triggerEvent(eventTarget, Events.VOLUME_CACHE_VOLUME_REMOVED, {\n        volumeId,\n      });\n    }\n  };\n\n  /**\n   * Purges the cache if necessary based on the requested number of bytes\n   *\n   * 1) it sorts the volatile (image) cache based on the most recent used images\n   * and starts purging from the oldest ones.\n   * Note: for a volume, if the volume-related image Ids is provided, it starts\n   * by purging the none-related image Ids (those that are not related to the\n   * current volume)\n   * 2) For a volume, if we purge all images that won't be included in this volume and still\n   * don't have enough unallocated space, purge images that will be included\n   * in this volume until we have enough space. These will need to be\n   * re-fetched, but we must do this not to straddle over the given memory\n   * limit, even for a short time, as this may crash the application.\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   *\n   * @param numBytes - Number of bytes for the image/volume that is\n   * going to be stored inside the cache\n   * @param volumeImageIds - list of imageIds that correspond to the\n   * volume whose numberOfBytes we want to store in the cache.\n   * @returns bytesAvailable or undefined in purging cache\n   * does not successfully make enough space for the requested number of bytes\n   */\n  public decacheIfNecessaryUntilBytesAvailable(\n    numBytes: number,\n    volumeImageIds?: Array<string>\n  ): number | undefined {\n    let bytesAvailable = this.getBytesAvailable();\n\n    // If max cache size has not been exceeded, do nothing\n    if (bytesAvailable >= numBytes) {\n      return bytesAvailable;\n    }\n\n    let cachedImages = Array.from(this._imageCache.values());\n\n    // Cache size has been exceeded, create list of images sorted by timeStamp\n    // So we can purge the least recently used image\n    function compare(a, b) {\n      if (a.timeStamp > b.timeStamp) {\n        return 1;\n      }\n      if (a.timeStamp < b.timeStamp) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    cachedImages.sort(compare);\n    let cachedImageIds = cachedImages.map((im) => im.imageId);\n\n    let imageIdsToPurge = cachedImageIds;\n\n    // if we are making space for a volume, we start by purging the imageIds\n    // that are not related to the volume\n    if (volumeImageIds) {\n      imageIdsToPurge = cachedImageIds.filter(\n        (id) => !volumeImageIds.includes(id)\n      );\n    }\n\n    // Remove images (that are not related to the volume) from volatile cache\n    // until the requested number of bytes become available\n    for (const imageId of imageIdsToPurge) {\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n\n      bytesAvailable = this.getBytesAvailable();\n      if (bytesAvailable >= numBytes) {\n        return bytesAvailable;\n      }\n    }\n\n    // Remove the imageIds (both volume related and not related)\n    cachedImages = Array.from(this._imageCache.values());\n    cachedImageIds = cachedImages.map((im) => im.imageId);\n\n    // Remove volume-image Ids from volatile cache until the requested number of bytes\n    // become available\n    for (const imageId of cachedImageIds) {\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n\n      bytesAvailable = this.getBytesAvailable();\n      if (bytesAvailable >= numBytes) {\n        return bytesAvailable;\n      }\n    }\n\n    // Technically we should not reach here, since isCacheable will throw an\n    // error if unallocated + volatile (image) cache cannot fit the upcoming\n    // number of bytes\n  }\n\n  /**\n   * Puts a new image load object into the cache\n   *\n   * First, it creates a CachedImage object and put it inside the imageCache for\n   * the imageId. After the imageLoadObject promise resolves to an image,\n   * it: 1) adds the image into the correct CachedImage object 2) increments the\n   * cache size, 3) triggers IMAGE_CACHE_IMAGE_ADDED  4) Purge the cache if\n   * necessary -- if the cache size is greater than the maximum cache size, it\n   * iterates over the imageCache and decache them one by one until the cache\n   * size becomes less than the maximum allowed cache size\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_ADDED\n   * @fires Events.CACHE_SIZE_EXCEEDED if the cache size exceeds the maximum\n   *\n   * @param imageId - ImageId for the image\n   * @param imageLoadObject - The object that is loading or loaded the image\n   */\n  public putImageLoadObject(\n    imageId: string,\n    imageLoadObject: IImageLoadObject\n  ): Promise<any> {\n    if (imageId === undefined) {\n      throw new Error('putImageLoadObject: imageId must not be undefined');\n    }\n\n    if (imageLoadObject.promise === undefined) {\n      throw new Error(\n        'putImageLoadObject: imageLoadObject.promise must not be undefined'\n      );\n    }\n\n    if (this._imageCache.has(imageId)) {\n      throw new Error('putImageLoadObject: imageId already in cache');\n    }\n\n    if (\n      imageLoadObject.cancelFn &&\n      typeof imageLoadObject.cancelFn !== 'function'\n    ) {\n      throw new Error(\n        'putImageLoadObject: imageLoadObject.cancel must be a function'\n      );\n    }\n\n    const cachedImage: ICachedImage = {\n      loaded: false,\n      imageId,\n      sharedCacheKey: undefined, // The sharedCacheKey for this imageId.  undefined by default\n      imageLoadObject,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._imageCache.set(imageId, cachedImage);\n\n    return imageLoadObject.promise\n      .then((image: IImage) => {\n        if (!this._imageCache.get(imageId)) {\n          // If the image has been purged before being loaded, we stop here.\n          console.warn(\n            'The image was purged from the cache before it completed loading.'\n          );\n          return;\n        }\n\n        if (\n          image.sizeInBytes === undefined ||\n          Number.isNaN(image.sizeInBytes)\n        ) {\n          throw new Error(\n            'putImageLoadObject: image.sizeInBytes must not be undefined'\n          );\n        }\n        if (image.sizeInBytes.toFixed === undefined) {\n          throw new Error(\n            'putImageLoadObject: image.sizeInBytes is not a number'\n          );\n        }\n\n        // check if there is enough space in unallocated + image Cache\n        if (!this.isCacheable(image.sizeInBytes)) {\n          throw new Error(Events.CACHE_SIZE_EXCEEDED);\n        }\n\n        // if there is, decache if necessary\n        this.decacheIfNecessaryUntilBytesAvailable(image.sizeInBytes);\n\n        cachedImage.loaded = true;\n        cachedImage.image = image;\n        cachedImage.sizeInBytes = image.sizeInBytes;\n        this.incrementImageCacheSize(cachedImage.sizeInBytes);\n        const eventDetails: EventTypes.ImageCacheImageAddedEventDetail = {\n          image: cachedImage,\n        };\n\n        triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_ADDED, eventDetails);\n\n        cachedImage.sharedCacheKey = image.sharedCacheKey;\n      })\n      .catch((error) => {\n        // console.warn(error)\n        this._imageCache.delete(imageId);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns the object that is loading a given imageId\n   *\n   * @param imageId - Image ID\n   * @returns IImageLoadObject\n   */\n  public getImageLoadObject(imageId: string): IImageLoadObject | undefined {\n    if (imageId === undefined) {\n      throw new Error('getImageLoadObject: imageId must not be undefined');\n    }\n\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (!cachedImage) {\n      return;\n    }\n\n    // Bump time stamp for cached image\n    cachedImage.timeStamp = Date.now();\n\n    return cachedImage.imageLoadObject;\n  }\n\n  /**\n   * It checks the imageCache for the provided imageId, and returns true\n   * if the image is loaded, false otherwise. Note, this only checks the imageCache\n   * and does not check the volume cache.\n   * @param imageId - image Id to check\n   * @returns boolean\n   */\n  public isLoaded(imageId: string): boolean {\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (!cachedImage) {\n      return false;\n    }\n\n    return cachedImage.loaded;\n  }\n\n  /**\n   * Returns the volume that contains the requested imageId. It will check the\n   * imageIds inside the volume to find a match.\n   *\n   * @param imageId - ImageId\n   * @returns - Volume object\n   */\n  public getVolumeContainingImageId(imageId: string):\n    | {\n        volume: IImageVolume;\n        imageIdIndex: number;\n      }\n    | undefined {\n    const volumeIds = Array.from(this._volumeCache.keys());\n    const imageIdToUse = imageIdToURI(imageId);\n\n    for (const volumeId of volumeIds) {\n      const cachedVolume = this._volumeCache.get(volumeId);\n\n      if (!cachedVolume) {\n        return;\n      }\n\n      const { volume } = cachedVolume;\n\n      if (!volume?.imageIds?.length) {\n        return;\n      }\n\n      const imageIdIndex = volume.getImageURIIndex(imageIdToUse);\n\n      if (imageIdIndex > -1) {\n        return { volume, imageIdIndex };\n      }\n    }\n  }\n\n  /**\n   * Returns the cached image from the imageCache for the requested imageId.\n   * It first strips the imageId to remove the data loading scheme.\n   *\n   * @param imageId - Image ID\n   * @returns cached image\n   */\n  public getCachedImageBasedOnImageURI(\n    imageId: string\n  ): ICachedImage | undefined {\n    const imageURIToUse = imageIdToURI(imageId);\n\n    const cachedImageIds = Array.from(this._imageCache.keys());\n    const foundImageId = cachedImageIds.find((imageId) => {\n      return imageIdToURI(imageId) === imageURIToUse;\n    });\n\n    if (!foundImageId) {\n      return;\n    }\n\n    return this._imageCache.get(foundImageId);\n  }\n  /**\n   * Puts a new image load object into the cache\n   *\n   * First, it creates a CachedVolume object and put it inside the volumeCache for\n   * the volumeId. After the volumeLoadObject promise resolves to a volume,\n   * it: 1) adds the volume into the correct CachedVolume object inside volumeCache\n   * 2) increments the cache size, 3) triggers VOLUME_CACHE_VOLUME_ADDED  4) Purge\n   * the cache if necessary -- if the cache size is greater than the maximum cache size, it\n   * iterates over the imageCache (not volumeCache) and decache them one by one\n   * until the cache size becomes less than the maximum allowed cache size\n   *\n   * @fires Events.VOLUME_CACHE_VOLUME_ADDED\n   *\n   * @param volumeId - volumeId of the volume\n   * @param volumeLoadObject - The object that is loading or loaded the volume\n   */\n  public putVolumeLoadObject(\n    volumeId: string,\n    volumeLoadObject: IVolumeLoadObject\n  ): Promise<any> {\n    if (volumeId === undefined) {\n      throw new Error('putVolumeLoadObject: volumeId must not be undefined');\n    }\n    if (volumeLoadObject.promise === undefined) {\n      throw new Error(\n        'putVolumeLoadObject: volumeLoadObject.promise must not be undefined'\n      );\n    }\n    if (this._volumeCache.has(volumeId)) {\n      throw new Error(\n        `putVolumeLoadObject: volumeId:${volumeId} already in cache`\n      );\n    }\n    if (\n      volumeLoadObject.cancelFn &&\n      typeof volumeLoadObject.cancelFn !== 'function'\n    ) {\n      throw new Error(\n        'putVolumeLoadObject: volumeLoadObject.cancel must be a function'\n      );\n    }\n\n    // todo: @Erik there are two loaded flags, one inside cachedVolume and the other\n    // inside the volume.loadStatus.loaded, the actual all pixelData loaded is the\n    // loadStatus one. This causes confusion\n    const cachedVolume: ICachedVolume = {\n      loaded: false,\n      volumeId,\n      volumeLoadObject,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._volumeCache.set(volumeId, cachedVolume);\n\n    return volumeLoadObject.promise\n      .then((volume: IImageVolume) => {\n        if (!this._volumeCache.get(volumeId)) {\n          // If the image has been purged before being loaded, we stop here.\n          console.warn(\n            'The image was purged from the cache before it completed loading.'\n          );\n          return;\n        }\n\n        if (Number.isNaN(volume.sizeInBytes)) {\n          throw new Error(\n            'putVolumeLoadObject: volume.sizeInBytes must not be undefined'\n          );\n        }\n        if (volume.sizeInBytes.toFixed === undefined) {\n          throw new Error(\n            'putVolumeLoadObject: volume.sizeInBytes is not a number'\n          );\n        }\n\n        // this.isCacheable is called at the volume loader, before requesting\n        // the images of the volume\n\n        this.decacheIfNecessaryUntilBytesAvailable(\n          volume.sizeInBytes,\n          // @ts-ignore: // todo ImageVolume does not have imageIds\n          volume.imageIds\n        );\n\n        // cachedVolume.loaded = true\n        cachedVolume.volume = volume;\n        cachedVolume.sizeInBytes = volume.sizeInBytes;\n        this.incrementVolumeCacheSize(cachedVolume.sizeInBytes);\n\n        const eventDetails: EventTypes.VolumeCacheVolumeAddedEventDetail = {\n          volume: cachedVolume,\n        };\n\n        triggerEvent(\n          eventTarget,\n          Events.VOLUME_CACHE_VOLUME_ADDED,\n          eventDetails\n        );\n      })\n      .catch((error) => {\n        this._volumeCache.delete(volumeId);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns the object that is loading a given volumeId\n   *\n   * @param volumeId - Volume ID\n   * @returns IVolumeLoadObject\n   */\n  public getVolumeLoadObject = (\n    volumeId: string\n  ): IVolumeLoadObject | undefined => {\n    if (volumeId === undefined) {\n      throw new Error('getVolumeLoadObject: volumeId must not be undefined');\n    }\n\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (!cachedVolume) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedVolume.timeStamp = Date.now();\n\n    return cachedVolume.volumeLoadObject;\n  };\n\n  public getGeometry = (geometryId: string): IGeometry | undefined => {\n    if (geometryId == null) {\n      throw new Error('getGeometry: geometryId must not be undefined');\n    }\n\n    const cachedGeometry = this._geometryCache.get(geometryId);\n\n    if (!cachedGeometry) {\n      return;\n    }\n\n    // Bump time stamp for cached geometry (not used for anything for now)\n    cachedGeometry.timeStamp = Date.now();\n\n    return cachedGeometry.geometry;\n  };\n\n  /**\n   * Returns the image associated with the imageId\n   *\n   * @param imageId - image ID\n   * @returns Image\n   */\n  public getImage = (imageId: string): IImage | undefined => {\n    if (imageId === undefined) {\n      throw new Error('getImage: imageId must not be undefined');\n    }\n\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (!cachedImage) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedImage.timeStamp = Date.now();\n\n    return cachedImage.image;\n  };\n\n  /**\n   * Returns the volume associated with the volumeId\n   *\n   * @param volumeId - Volume ID\n   * @returns Volume\n   */\n  public getVolume = (volumeId: string): IImageVolume | undefined => {\n    if (volumeId === undefined) {\n      throw new Error('getVolume: volumeId must not be undefined');\n    }\n\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (!cachedVolume) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedVolume.timeStamp = Date.now();\n\n    return cachedVolume.volume;\n  };\n\n  /**\n   * Retrieves an array of image volumes from the cache.\n   * @returns An array of image volumes.\n   */\n  public getVolumes = (): Array<IImageVolume> => {\n    const cachedVolumes = Array.from(this._volumeCache.values());\n\n    return cachedVolumes.map((cachedVolume) => cachedVolume.volume);\n  };\n\n  /**\n   * Filters the cached volumes by the specified reference volume ID.\n   * @param volumeId - The ID of the reference volume.\n   * @returns An array of image volumes that have the specified reference volume ID.\n   */\n  public filterVolumesByReferenceId = (\n    volumeId: string\n  ): Array<IImageVolume> => {\n    const cachedVolumes = this.getVolumes();\n\n    return cachedVolumes.filter((volume) => {\n      return volume.referencedVolumeId === volumeId;\n    });\n  };\n\n  /**\n   * Removes the image loader associated with a given Id from the cache\n   *\n   * It increases the cache size after removing the image.\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   *\n   * @param imageId - Image ID\n   */\n  public removeImageLoadObject = (imageId: string): void => {\n    if (imageId === undefined) {\n      throw new Error('removeImageLoadObject: imageId must not be undefined');\n    }\n\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (!cachedImage) {\n      throw new Error(\n        'removeImageLoadObject: imageId was not present in imageCache'\n      );\n    }\n\n    this.incrementImageCacheSize(-cachedImage.sizeInBytes);\n\n    const eventDetails = {\n      image: cachedImage,\n      imageId,\n    };\n\n    triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, eventDetails);\n    this._decacheImage(imageId);\n  };\n\n  /**\n   * Removes the volume loader associated with a given Id from the cache\n   *\n   * It increases the cache size after removing the image.\n   *\n   * @fires Events.VOLUME_CACHE_VOLUME_REMOVED\n   *\n   * @param imageId - ImageId\n   */\n  public removeVolumeLoadObject = (volumeId: string): void => {\n    if (volumeId === undefined) {\n      throw new Error('removeVolumeLoadObject: volumeId must not be undefined');\n    }\n\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (!cachedVolume) {\n      throw new Error(\n        'removeVolumeLoadObject: volumeId was not present in volumeCache'\n      );\n    }\n\n    this.incrementVolumeCacheSize(-cachedVolume.sizeInBytes);\n\n    const eventDetails = {\n      volume: cachedVolume,\n      volumeId,\n    };\n\n    triggerEvent(eventTarget, Events.VOLUME_CACHE_VOLUME_REMOVED, eventDetails);\n    this._decacheVolume(volumeId);\n  };\n\n  putGeometryLoadObject = (\n    geometryId: string,\n    geometryLoadObject: IGeometryLoadObject\n  ): Promise<void> => {\n    if (geometryId == undefined) {\n      throw new Error(\n        'putGeometryLoadObject: geometryId must not be undefined'\n      );\n    }\n\n    if (this._geometryCache.has(geometryId)) {\n      throw new Error(\n        'putGeometryLoadObject: geometryId already present in geometryCache'\n      );\n    }\n\n    const cachedGeometry: ICachedGeometry = {\n      geometryId,\n      geometryLoadObject,\n      loaded: false,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._geometryCache.set(geometryId, cachedGeometry);\n\n    return geometryLoadObject.promise\n      .then((geometry: IGeometry) => {\n        if (!this._geometryCache.has(geometryId)) {\n          console.warn(\n            'putGeometryLoadObject: geometryId was removed from geometryCache'\n          );\n          return;\n        }\n\n        if (Number.isNaN(geometry.sizeInBytes)) {\n          throw new Error(\n            'putGeometryLoadObject: geometry.sizeInBytes is not a number'\n          );\n        }\n\n        // Todo: fix is cacheable\n\n        cachedGeometry.loaded = true;\n        cachedGeometry.geometry = geometry;\n        cachedGeometry.sizeInBytes = geometry.sizeInBytes;\n\n        // this._incrementGeometryCacheSize(geometry.sizeInBytes);\n\n        const eventDetails = {\n          geometry,\n          geometryId,\n        };\n\n        triggerEvent(\n          eventTarget,\n          Events.GEOMETRY_CACHE_GEOMETRY_ADDED,\n          eventDetails\n        );\n\n        return;\n      })\n      .catch((error) => {\n        this._geometryCache.delete(geometryId);\n        throw error;\n      });\n  };\n\n  /**\n   * Increases the image cache size with the provided increment\n   *\n   * @param increment - bytes length\n   */\n  public incrementImageCacheSize = (increment: number) => {\n    this._imageCacheSize += increment;\n  };\n\n  /**\n   * Increases the cache size with the provided increment\n   *\n   * @param increment - bytes length\n   */\n  public incrementVolumeCacheSize = (increment: number) => {\n    this._volumeCacheSize += increment;\n  };\n\n  /**\n   * Decreases the image cache size with the provided decrement\n   *\n   * @param decrement - bytes length\n   */\n  public decrementImageCacheSize = (decrement: number) => {\n    this._imageCacheSize -= decrement;\n  };\n\n  /**\n   * Decreases the cache size with the provided decrement\n   *\n   * @param decrement - bytes length\n   */\n  public decrementVolumeCacheSize = (decrement: number) => {\n    this._volumeCacheSize -= decrement;\n  };\n\n  /**\n   * This function will restore the images' pixel data from the shared array buffer\n   * back to the individual images when the volume is purged from cache. It ensures\n   * that each image retrieves its correct portion of data from the buffer based on\n   * the previously stored offset and length information.\n   *\n   * @param volumeId - The volumeId whose images need to be restored.\n   */\n  private _restoreImagesFromBuffer(volume: IImageVolume) {\n    if (!(volume instanceof ImageVolume)) {\n      console.warn(\n        'Volume is not an ImageVolume. Cannot restore images from buffer.'\n      );\n      return;\n    }\n\n    // Retrieve the scalar data and the offset map from the volume\n    const scalarData = volume.getScalarData();\n    const imageCacheOffsetMap = volume.imageCacheOffsetMap;\n\n    if (imageCacheOffsetMap.size === 0) {\n      // This happens during testing and isn't an issue\n      // console.warn('No cached images to restore for this volume.');\n      return;\n    }\n\n    // Iterate over each image and restore its pixel data from the shared buffer\n    for (const [imageId, { offset }] of imageCacheOffsetMap) {\n      const image = this.getImage(imageId);\n\n      if (!image) {\n        console.warn(`Image with id ${imageId} not found in cache.`);\n        continue;\n      }\n\n      const viewPixelData = image.getPixelData();\n      const length = viewPixelData.length;\n\n      // Create a new view of the buffer for this specific image\n      // @ts-ignore\n      const pixelData = new viewPixelData.constructor(\n        scalarData.buffer,\n        offset,\n        length\n      );\n\n      // Restore the original getPixelData function and pixelData\n      image.getPixelData = () => pixelData;\n\n      if (image.imageFrame) {\n        image.imageFrame.pixelData = pixelData;\n      }\n\n      delete image.bufferView;\n\n      // Optionally, increment the image cache size again if needed\n      this.incrementImageCacheSize(image.sizeInBytes);\n    }\n\n    console.log(`Images restored from buffer for volume ${volume.volumeId}.`);\n  }\n}\n\n/**\n * This module deals with Caching of images and volumes\n * The cache has two main components: a volatile portion for images and a\n * non-volatile portion for volumes. Individual 2D images are volatile and\n * will be replaced by new images hitting the cache. When you allocate volumes,\n * these are non-volatile and reserve a block of memory from the cache.\n * Volumes must be released manually.\n * We will have a shared block of memory allocated for the entire cache, e.g. 1GB\n * which will be shared for images and volumes.\n *\n * **When a new image is added:**\n * We check if there is enough unallocated + volatile space for the single image\n *\n * if so\n * - We allocate the image in image cache, and if necessary oldest images\n * are decached to match the maximumCacheSize criteria\n * - If a volume contains that imageId, copy it over using TypedArray's set method.\n * If no volumes contain the imageId, the image is fetched by image loaders\n *\n * If not (cache is mostly/completely full with volumes)\n * - throw that the cache does not have enough working space to allocate the image\n *\n *\n * **When a new volume is added:**\n * Check if there is enough unallocated + volatile space to allocate the volume:\n *\n * If so:\n * - Decache oldest images which won't be included in this volume until\n * we have enough free space for the volume\n * - If not enough space from previous space, decache images that will be included\n * in the volume until we have enough free space (These will need to be re-fetched,\n * but we must do this not to straddle over the given memory limit, even for a\n * short time, as this may crash the app)\n * - At this point, if any of the frames (indexed by imageId) are present in the volatile\n * image cache, copy these over to the volume now\n *\n * If not (cache is mostly/completely full with volumes),\n * - throw that the cache does not have enough working space to allocate the volume.\n *\n */\nconst cache = new Cache();\nexport default cache;\nexport { Cache }; // for documentation\n","const RENDERING_DEFAULTS = {\n  MINIMUM_SLAB_THICKNESS: 5e-2,\n  MAXIMUM_RAY_DISTANCE: 1e6,\n};\n\nObject.freeze(RENDERING_DEFAULTS);\n\nexport default RENDERING_DEFAULTS;\n","const EPSILON = 1e-3;\n\nexport default EPSILON;\n","/**\n * Request types for requesting images from the imageLoadPoolManager\n */\nenum RequestType {\n  /** Highest priority for loading*/\n  Interaction = 'interaction',\n  /** Second highest priority for loading*/\n  Thumbnail = 'thumbnail',\n  /** Third highest priority for loading, usually used for image loading in the background*/\n  Prefetch = 'prefetch',\n  /** Lower priority, often used for background computations in the worker */\n  Compute = 'compute',\n}\n\nexport default RequestType;\n","enum ViewportStatus {\n  /** Initial state before any volumes or stacks are available*/\n  NO_DATA = 'noData',\n  /** Stack/volumes are available but are in progress */\n  LOADING = 'loading',\n  /** Ready to be rendered */\n  PRE_RENDER = 'preRender',\n  /** In the midst of a resize */\n  RESIZE = 'resize',\n  /** Rendered image data */\n  RENDERED = 'rendered',\n}\n\nexport default ViewportStatus;\n","import vtkConstants from '@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants';\n\nconst { BlendMode } = vtkConstants;\n\n/**\n * Enums for blendModes for viewport images based on vtk.js\n *\n * It should be noted that if crosshairs are enabled and can modify the slab thickness,\n * then it will not show any difference unless MAXIMUM_INTENSITY_BLEND is set on the viewport\n * as the blend.\n */\nenum BlendModes {\n  /** composite blending - suitable for compositing multiple images */\n  COMPOSITE = BlendMode.COMPOSITE_BLEND,\n  /** maximum intensity projection */\n  MAXIMUM_INTENSITY_BLEND = BlendMode.MAXIMUM_INTENSITY_BLEND,\n  /** minimum intensity projection */\n  MINIMUM_INTENSITY_BLEND = BlendMode.MINIMUM_INTENSITY_BLEND,\n  /** average intensity projection */\n  AVERAGE_INTENSITY_BLEND = BlendMode.AVERAGE_INTENSITY_BLEND,\n}\n\nexport default BlendModes;\n","enum GeometryType {\n  CONTOUR = 'contour',\n  SURFACE = 'Surface',\n}\n\nexport default GeometryType;\n","/**\n * DynamicOperatorType enum for cornerstone-render which defines the operator to use for generateImageFromTimeData.\n * It can be either SUM, AVERAGE or SUBTRACT.\n */\nenum DynamicOperatorType {\n  /** For summing the time frames. */\n  SUM = 'SUM',\n  /** For averaging the time frames. */\n  AVERAGE = 'AVERAGE',\n  /** For subtracting two time frames */\n  SUBTRACT = 'SUBTRACT',\n}\n\nexport default DynamicOperatorType;\n","/**\n * Defines the calibration types available.  These define how the units\n * for measurements are specified.\n */\nexport enum CalibrationTypes {\n  /**\n   * Not applicable means the units are directly defind by the underlying\n   * hardware, such as CT and MR volumetric displays, so no special handling\n   * or notification is required.\n   */\n  NOT_APPLICABLE = '',\n  /**\n   * ERMF is estimated radiographic magnification factor.  This defines how\n   * much the image is magnified at the detector as opposed to the location in\n   * the body of interest.  This occurs because the radiation beam is expanding\n   * and effectively magnifies the image on the detector compared to where the\n   * point of interest in the body is.\n   * This suggests that measurements can be partially trusted, but the user\n   * still needs to be aware that different depths within the body have differing\n   * ERMF values, so precise measurements would still need to be manually calibrated.\n   */\n  ERMF = 'ERMF',\n  /**\n   * User calibration means that the user has provided a custom calibration\n   * specifying how large the image data is.  This type can occur on\n   * volumetric images, eg for scout images that might have invalid spacing\n   * tags.\n   */\n  USER = 'User',\n  /**\n   * A projection calibration means the raw detector size, without any\n   * ERMF applied, meaning that the size in the body cannot be trusted and\n   * that a calibration should be applied.\n   * This is different from Error in that there is simply no magnification\n   * factor applied as opposed to having multiple, inconsistent magnification\n   * factors.\n   */\n  PROJECTION = 'Proj',\n  /**\n   * A region calibration is used for other types of images, typically\n   * ultrasouunds where the distance in the image may mean something other than\n   * physical distance, such as mV or Hz or some other measurement values.\n   */\n  REGION = 'Region',\n  /**\n   * Error is used to define mismatches between various units, such as when\n   * there are two different ERMF values specified.  This is an indication to\n   * NOT trust the measurement values but to manually calibrate.\n   */\n  ERROR = 'Error',\n  /** Uncalibrated image */\n  UNCALIBRATED = 'Uncalibrated',\n}\n\nexport default CalibrationTypes;\n","import getRenderingEngine, {\n  getRenderingEngines,\n} from './RenderingEngine/getRenderingEngine';\nimport { IEnabledElement, IStackViewport, IVolumeViewport } from './types';\n\n/**\n * A convenience method to find an EnabledElement given a reference to its\n * associated element. Commonly used in code that's handling a custom\n * event emitted by this library.\n *\n * @example\n * Using the renderingEngine to find the enabled element:\n * ```javascript\n * const element = getRenderingEngine(renderingEngineId)\n *    .getViewport(viewportId)\n *    .element\n *\n * const enabledElement = getEnabledElement(element)\n * ```\n *\n * @example\n * Using a cornerstone event's \"element\"\n * ```javascript\n * // Our \"cornerstone events\" contain the source element, which is\n * // raised on the viewport's div element\n * const { element } = evt.detail\n * const enabledElement = getEnabledElement(element)\n * ```\n *\n * @param element - a reference to an EnabledElement/Viewport's div element\n * @returns the associated EnabledElement, or undefined if no matching EnabledElement\n * can be found\n */\nexport default function getEnabledElement(\n  element: HTMLDivElement | undefined\n): IEnabledElement | undefined {\n  if (!element) {\n    return;\n  }\n\n  const { viewportUid, renderingEngineUid } = element.dataset;\n\n  return getEnabledElementByIds(viewportUid, renderingEngineUid);\n}\n\n/**\n * Similar to {@link getEnabledElement}, but takes the IDs of the\n * renderingEngine and viewport as parameters to return the associated\n * EnabledElement.\n *\n * @param viewportId - The Id of the viewport\n * @param renderingEngineId - The Id of the rendering engine.\n * @returns The enabled element which is an object that contains the viewport, rendering\n * engine, viewport Id, rendering engine Id, and the Frame of Reference UID.\n */\nexport function getEnabledElementByIds(\n  viewportId: string,\n  renderingEngineId: string\n): IEnabledElement {\n  if (!renderingEngineId || !viewportId) {\n    return;\n  }\n\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n\n  if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n    return;\n  }\n\n  const viewport = renderingEngine.getViewport(viewportId) as\n    | IStackViewport\n    | IVolumeViewport;\n\n  if (!viewport) {\n    return;\n  }\n\n  const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n  return {\n    viewport,\n    renderingEngine,\n    viewportId,\n    renderingEngineId,\n    FrameOfReferenceUID,\n  };\n}\n\n/**\n * Retrieves the enabled element by the specified viewport ID. it searches\n * through all the rendering engines to find the viewport with the specified\n *\n * @param viewportId - The ID of the viewport.\n * @returns The enabled element associated with the specified viewport ID.\n */\nexport function getEnabledElementByViewportId(viewportId: string) {\n  const renderingEngines = getRenderingEngines();\n\n  for (let i = 0; i < renderingEngines.length; i++) {\n    const renderingEngine = renderingEngines[i];\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (viewport) {\n      return getEnabledElementByIds(viewportId, renderingEngine.id);\n    }\n  }\n}\n\n/**\n * Get all the enabled elements from all the rendering engines\n * @returns An array of enabled elements.\n */\nexport function getEnabledElements(): IEnabledElement[] {\n  const enabledElements = [];\n\n  const renderingEngines = getRenderingEngines();\n\n  renderingEngines.forEach((renderingEngine) => {\n    const viewports = renderingEngine.getViewports();\n\n    viewports.forEach(({ element }) => {\n      enabledElements.push(getEnabledElement(element));\n    });\n  });\n\n  return enabledElements;\n}\n","/*\n * Constants\n */\n\nconst DEFAULT_SETTINGS = Symbol('DefaultSettings');\nconst RUNTIME_SETTINGS = Symbol('RuntimeSettings');\nconst OBJECT_SETTINGS_MAP = Symbol('ObjectSettingsMap');\nconst DICTIONARY = Symbol('Dictionary');\n\n/**\n * Settings\n */\nexport default class Settings {\n  constructor(base?: Settings) {\n    const dictionary = Object.create(\n      (base instanceof Settings && DICTIONARY in base\n        ? base[DICTIONARY]\n        : null) as object\n    );\n    Object.seal(\n      Object.defineProperty(this, DICTIONARY, {\n        value: dictionary,\n      })\n    );\n  }\n\n  set(key: string, value: unknown): boolean {\n    return set(this[DICTIONARY], key, value, null);\n  }\n\n  get(key: string): unknown {\n    return get(this[DICTIONARY], key);\n  }\n\n  /**\n   * Unset a specific key or a set of keys within a namespace when the key ends with a dot (ASCII #46).\n   * If the key is \".\", all keys will be removed and this command works as a reset.\n   * @param key - name The key to be unset or a namespace.\n   * @returns boolean\n   */\n  unset(key: string): boolean {\n    return unset(this[DICTIONARY], key + '');\n  }\n\n  forEach(callback: (key: string, value: unknown) => void): void {\n    iterate(this[DICTIONARY], callback);\n  }\n\n  extend(): Settings {\n    return new Settings(this);\n  }\n\n  /**\n   * Recursively import all properties from the given plain JavaScript object.\n   * This method has the opposite effect of the `dump` method.\n   * @param root - The root object whose properties will\n   * be imported.\n   */\n  import(root: Record<string, unknown>): void {\n    if (isPlainObject(root)) {\n      Object.keys(root).forEach((key) => {\n        set(this[DICTIONARY], key, root[key], null);\n      });\n    }\n  }\n\n  /**\n   * Build a JSON representation of the current internal state of this settings\n   * object. The returned object can be safely passed to `JSON.stringify`\n   * function.\n   * @returns The JSON representation of the current\n   * state of this settings instance\n   */\n  dump(): Record<string, unknown> {\n    const context = {};\n    iterate(this[DICTIONARY], (key, value) => {\n      if (typeof value !== 'undefined') {\n        deepSet(context, key, value);\n      }\n    });\n    return context;\n  }\n\n  static assert(subject: Settings): Settings {\n    return subject instanceof Settings\n      ? subject\n      : Settings.getRuntimeSettings();\n  }\n\n  static getDefaultSettings(subfield = null): Settings | any {\n    let defaultSettings = Settings[DEFAULT_SETTINGS];\n    if (!(defaultSettings instanceof Settings)) {\n      defaultSettings = new Settings();\n      Settings[DEFAULT_SETTINGS] = defaultSettings;\n    }\n\n    // Given subfield of 'segmentation' it will return all settings\n    // that starts with segmentation.*\n    if (subfield) {\n      const settingObj = {};\n      defaultSettings.forEach((name: string) => {\n        if (name.startsWith(subfield)) {\n          const setting = name.split(`${subfield}.`)[1];\n          settingObj[setting] = defaultSettings.get(name);\n        }\n      });\n      return settingObj;\n    }\n\n    return defaultSettings;\n  }\n\n  static getRuntimeSettings(): Settings {\n    let runtimeSettings = Settings[RUNTIME_SETTINGS];\n    if (!(runtimeSettings instanceof Settings)) {\n      runtimeSettings = new Settings(Settings.getDefaultSettings());\n      Settings[RUNTIME_SETTINGS] = runtimeSettings;\n    }\n    return runtimeSettings;\n  }\n\n  static getObjectSettings(subject: unknown, from?: unknown): Settings {\n    let settings = null;\n    if (subject instanceof Settings) {\n      settings = subject;\n    } else if (typeof subject === 'object' && subject !== null) {\n      let objectSettingsMap = Settings[OBJECT_SETTINGS_MAP];\n      if (!(objectSettingsMap instanceof WeakMap)) {\n        objectSettingsMap = new WeakMap();\n        Settings[OBJECT_SETTINGS_MAP] = objectSettingsMap;\n      }\n      settings = objectSettingsMap.get(subject);\n      if (!(settings instanceof Settings)) {\n        settings = new Settings(\n          Settings.assert(Settings.getObjectSettings(from))\n        );\n        objectSettingsMap.set(subject, settings);\n      }\n    }\n    return settings;\n  }\n\n  static extendRuntimeSettings(): Settings {\n    return Settings.getRuntimeSettings().extend();\n  }\n}\n\n/*\n * Local Helpers\n */\n\nfunction unset(dictionary: Record<string, unknown>, name: string): boolean {\n  if (name.endsWith('.')) {\n    let deleteCount = 0;\n    const namespace = name;\n    const base = namespace.slice(0, -1);\n    const deleteAll = base.length === 0;\n    for (const key in dictionary) {\n      if (\n        Object.prototype.hasOwnProperty.call(dictionary, key) &&\n        (deleteAll || key.startsWith(namespace) || key === base)\n      ) {\n        delete dictionary[key];\n        ++deleteCount;\n      }\n    }\n    return deleteCount > 0;\n  }\n  return delete dictionary[name];\n}\n\nfunction iterate(\n  dictionary: Record<string, unknown>,\n  callback: (key: string, value: unknown) => void\n): void {\n  for (const key in dictionary) {\n    callback(key, dictionary[key]);\n  }\n}\n\nfunction setAll(\n  dictionary: Record<string, unknown>,\n  prefix: string,\n  record: Record<string, unknown>,\n  references: WeakSet<Record<string, unknown>>\n): boolean {\n  let failCount: number;\n  if (references.has(record)) {\n    return set(dictionary, prefix, null, references);\n  }\n  references.add(record);\n  failCount = 0;\n  for (const field in record) {\n    if (Object.prototype.hasOwnProperty.call(record, field)) {\n      const key = field.length === 0 ? prefix : `${prefix}.${field}`;\n      if (!set(dictionary, key, record[field], references)) {\n        ++failCount;\n      }\n    }\n  }\n  references.delete(record);\n  return failCount === 0;\n}\n\n/**\n * Set the key-value pair on a given dictionary. If the given value is a\n * plain javascript object, every property of that object will also be set.\n * @param dictionary {Record<string, unknown>} The target dictionary\n * @param key {string} The given key\n * @param value {unknown} The given value\n * @param references {WeakSet<Record<string, unknown>>} references is a WeakSet\n *  instance used to keep track of which objects have already been iterated\n *  through preventing thus possible stack overflows caused by cyclic references\n * @returns {boolean} Returns true if every given key-value pair has been\n * successfully set\n */\nfunction set(\n  dictionary: Record<string, unknown>,\n  key: string,\n  value: unknown,\n  references: WeakSet<Record<string, unknown>>\n): boolean {\n  if (isValidKey(key)) {\n    if (isPlainObject(value)) {\n      return setAll(\n        dictionary,\n        key,\n        value as Record<string, unknown>,\n        references instanceof WeakSet ? references : new WeakSet()\n      );\n    }\n    dictionary[key] = value;\n    return true;\n  }\n  return false;\n}\n\nfunction get(dictionary: Record<string, unknown>, key: string): unknown {\n  return dictionary[key];\n}\n\n/**\n * Make sure the -provided key correctly formatted.\n * e.g.:\n *  \"my.cool.property\" (valid)\n *  \"my.cool.property.\" (invalid)\n *  \".my.cool.property\" (invalid)\n *  \"my.cool..property\" (invalid)\n * @param key {string} The property name to be used as key within the internal\n *  dictionary\n * @returns {boolean} True on success, false otherwise\n */\nfunction isValidKey(key: string): boolean {\n  let last: number, current: number, previous: number;\n  if (typeof key !== 'string' || (last = key.length - 1) < 0) {\n    return false;\n  }\n  previous = -1;\n  while ((current = key.indexOf('.', previous + 1)) >= 0) {\n    if (current - previous < 2 || current === last) {\n      return false;\n    }\n    previous = current;\n  }\n  return true;\n}\n\nfunction isPlainObject(subject: unknown) {\n  if (typeof subject === 'object' && subject !== null) {\n    const prototype = Object.getPrototypeOf(subject);\n    if (prototype === Object.prototype || prototype === null) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction deepSet(context, key, value) {\n  const separator = key.indexOf('.');\n  if (separator >= 0) {\n    const subKey = key.slice(0, separator);\n    let subContext = context[subKey];\n    if (typeof subContext !== 'object' || subContext === null) {\n      const subContextValue = subContext;\n      subContext = {};\n      if (typeof subContextValue !== 'undefined') {\n        subContext[''] = subContextValue;\n      }\n      context[subKey] = subContext;\n    }\n    deepSet(subContext, key.slice(separator + 1, key.length), value);\n  } else {\n    context[key] = value;\n  }\n}\n\n/**\n * Initial Settings for the repository\n */\nSettings.getDefaultSettings().set('useCursors', true);\n","import cache from '../cache/cache';\nimport { ImageVolume } from '../cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport {\n  genericMetadataProvider,\n  getBufferConfiguration,\n  triggerEvent,\n  uuidv4,\n} from '../utilities';\nimport {\n  IImage,\n  ImageLoaderFn,\n  IImageLoadObject,\n  EventTypes,\n  Point2,\n  Point3,\n  Mat3,\n  PixelDataTypedArrayString,\n  PixelDataTypedArray,\n} from '../types';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\nimport { metaData } from '../';\n\nexport interface ImageLoaderOptions {\n  priority: number;\n  requestType: string;\n  additionalDetails?: Record<string, unknown>;\n  ignoreCache?: boolean;\n}\n\ninterface DerivedImages {\n  imageIds: Array<string>;\n  promises: Array<Promise<IImage>>;\n}\n\ntype LocalImageOptions = {\n  scalarData?: PixelDataTypedArray;\n  targetBufferType?: PixelDataTypedArrayString;\n  dimensions?: Point2;\n  spacing?: Point3;\n  origin?: Point3;\n  direction?: Mat3;\n  /**\n   * Skip creation of the actual buffer object.\n   * In fact, this creates a very short buffer, as there are lots of places\n   * assuming a buffer exists.\n   * This can be used when there are alternative representations of the image data.\n   */\n  skipCreateBuffer?: boolean;\n  /**\n   * A method to call to update the image object when it gets added to the cache.\n   * This can be used to create alternative representations of the image data,\n   * such as a VoxelManager.\n   */\n  onCacheAdd?: (image: IImage) => void;\n};\n\ntype DerivedImageOptions = LocalImageOptions & {\n  imageId?: string;\n  targetBufferType?: PixelDataTypedArrayString;\n};\n\n/**\n * This module deals with ImageLoaders, loading images and caching images\n */\nconst imageLoaders = {};\nlet unknownImageLoader;\n\n/**\n * Loads an image using a registered Cornerstone Image Loader.\n *\n * The image loader that is used will be\n * determined by the image loader scheme matching against the imageId.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param Options - to be passed to the Image Loader\n *\n * @returns - An Object which can be used to act after an image is loaded or loading fails\n */\nfunction loadImageFromImageLoader(\n  imageId: string,\n  options: ImageLoaderOptions\n): IImageLoadObject {\n  // Extract the image loader scheme: wadors:https://image1 => wadors\n  const colonIndex = imageId.indexOf(':');\n  const scheme = imageId.substring(0, colonIndex);\n  const loader = imageLoaders[scheme];\n  if (loader === undefined || loader === null) {\n    if (unknownImageLoader !== undefined) {\n      return unknownImageLoader(imageId);\n    }\n    throw new Error('loadImageFromImageLoader: no image loader for imageId');\n  }\n  // Load using the registered loader\n  const imageLoadObject = loader(imageId, options);\n  // Broadcast an image loaded event once the image is loaded\n  imageLoadObject.promise.then(\n    function (image) {\n      triggerEvent(eventTarget, Events.IMAGE_LOADED, { image });\n    },\n    function (error) {\n      const errorObject: EventTypes.ImageLoadedFailedEventDetail = {\n        imageId,\n        error,\n      };\n      triggerEvent(eventTarget, Events.IMAGE_LOAD_FAILED, errorObject);\n    }\n  );\n  return imageLoadObject;\n}\n\n/**\n * Gets the imageLoadObject by 1) Looking in to the cache to see if the\n * imageLoadObject has already been cached, 2) Checks inside the volume cache\n * to see if there is a volume that contains the same imageURI for the requested\n * imageID 3) Checks inside the imageCache for similar imageURI that might have\n * been stored as a result of decaching a volume 4) Finally if none were found\n * it request it from the registered imageLoaders.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nfunction loadImageFromCacheOrVolume(\n  imageId: string,\n  options: ImageLoaderOptions\n): IImageLoadObject {\n  if (options.ignoreCache) {\n    return loadImageFromImageLoader(imageId, options);\n  }\n\n  // 1. Check inside the image cache for imageId\n  let imageLoadObject = cache.getImageLoadObject(imageId);\n  if (imageLoadObject !== undefined) {\n    return imageLoadObject;\n  }\n  // 2. Check if there exists a volume in the cache containing the imageId,\n  // we copy the pixelData over.\n  const cachedVolumeInfo = cache.getVolumeContainingImageId(imageId);\n  if (cachedVolumeInfo?.volume?.loadStatus?.loaded) {\n    // 2.1 Convert the volume at the specific slice to a cornerstoneImage object.\n    // this will copy the pixel data over.\n    const { volume, imageIdIndex } = cachedVolumeInfo;\n\n    if (volume instanceof ImageVolume) {\n      imageLoadObject = volume.convertToCornerstoneImage(imageId, imageIdIndex);\n    }\n    return imageLoadObject;\n  }\n  // 3. If no volume found, we search inside the imageCache for the imageId\n  // that has the same URI which had been cached if the volume was converted\n  // to an image\n  const cachedImage = cache.getCachedImageBasedOnImageURI(imageId);\n  if (cachedImage) {\n    imageLoadObject = cachedImage.imageLoadObject;\n    return imageLoadObject;\n  }\n  // 4. if not in image cache nor inside the volume cache, we request the\n  // image loaders to load it\n  imageLoadObject = loadImageFromImageLoader(imageId, options);\n\n  return imageLoadObject;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The loaded image is not stored in the cache.\n *\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nexport function loadImage(\n  imageId: string,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage> {\n  if (imageId === undefined) {\n    throw new Error('loadImage: parameter imageId must not be undefined');\n  }\n\n  return loadImageFromCacheOrVolume(imageId, options).promise;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The image is stored in the cache.\n *\n * @param imageId -  A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns Image Loader Object\n */\nexport function loadAndCacheImage(\n  imageId: string,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage> {\n  if (imageId === undefined) {\n    throw new Error(\n      'loadAndCacheImage: parameter imageId must not be undefined'\n    );\n  }\n  const imageLoadObject = loadImageFromCacheOrVolume(imageId, options);\n\n  // if not inside cache, store it\n  if (!cache.getImageLoadObject(imageId)) {\n    cache.putImageLoadObject(imageId, imageLoadObject).catch((err) => {\n      console.warn(err);\n    });\n  }\n\n  return imageLoadObject.promise;\n}\n\n/**\n * Load and cache a list of imageIds\n *\n * @param imageIds - list of imageIds\n * @param options - options for loader\n *\n */\nexport function loadAndCacheImages(\n  imageIds: Array<string>,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage>[] {\n  if (!imageIds || imageIds.length === 0) {\n    throw new Error(\n      'loadAndCacheImages: parameter imageIds must be list of image Ids'\n    );\n  }\n\n  const allPromises = imageIds.map((imageId) => {\n    return loadAndCacheImage(imageId, options);\n  });\n\n  return allPromises;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The image is stored in the cache.\n *\n * @param referencedImageId -  A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns Image Loader Object\n */\nexport function createAndCacheDerivedImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {},\n  preventCache = false\n): Promise<IImage> {\n  if (referencedImageId === undefined) {\n    throw new Error(\n      'createAndCacheDerivedImage: parameter imageId must not be undefined'\n    );\n  }\n\n  if (options.imageId === undefined) {\n    options.imageId = `derived:${uuidv4()}`;\n  }\n\n  const { imageId, skipCreateBuffer, onCacheAdd } = options;\n\n  const imagePlaneModule = metaData.get('imagePlaneModule', referencedImageId);\n\n  const length = imagePlaneModule.rows * imagePlaneModule.columns;\n\n  const { TypedArrayConstructor } = getBufferConfiguration(\n    options.targetBufferType,\n    length\n  );\n\n  // Use a buffer of size 1 for no data\n  const imageScalarData = new TypedArrayConstructor(\n    skipCreateBuffer ? 1 : length\n  );\n  const derivedImageId = imageId;\n\n  ['imagePlaneModule', 'generalSeriesModule'].forEach((type) => {\n    genericMetadataProvider.add(derivedImageId, {\n      type,\n      metadata: metaData.get(type, referencedImageId),\n    });\n  });\n\n  const imagePixelModule = metaData.get('imagePixelModule', referencedImageId);\n  // TODO - add a general way to specify this\n  genericMetadataProvider.add(derivedImageId, {\n    type: 'imagePixelModule',\n    metadata: {\n      ...imagePixelModule,\n      bitsAllocated: 8,\n      bitsStored: 8,\n      highBit: 7,\n      samplesPerPixel: 1,\n      pixelRepresentation: 0,\n    },\n  });\n\n  const localImage = createAndCacheLocalImage(\n    { scalarData: imageScalarData, onCacheAdd, skipCreateBuffer },\n    imageId,\n    true\n  );\n\n  const imageLoadObject = {\n    promise: Promise.resolve(localImage),\n  };\n\n  if (!preventCache) {\n    cache.putImageLoadObject(derivedImageId, imageLoadObject);\n  }\n  return imageLoadObject.promise;\n}\n\n/**\n * Load and cache a list of imageIds\n *\n * @param referencedImageIds - list of imageIds\n * @param options\n * @param options.getDerivedImageId - function to get the derived imageId\n * @param options.targetBufferType - target buffer type\n * @param options.skipBufferCreate - avoid creating the buffer\n */\nexport function createAndCacheDerivedImages(\n  referencedImageIds: Array<string>,\n  options: DerivedImageOptions & {\n    getDerivedImageId?: (referencedImageId: string) => string;\n    targetBufferType?: PixelDataTypedArrayString;\n  } = {}\n): DerivedImages {\n  if (referencedImageIds?.length === 0) {\n    throw new Error(\n      'createAndCacheDerivedImages: parameter imageIds must be list of image Ids'\n    );\n  }\n\n  const derivedImageIds = [];\n  const allPromises = referencedImageIds.map((referencedImageId) => {\n    const newOptions: DerivedImageOptions = {\n      imageId:\n        options.getDerivedImageId?.(referencedImageId) || `derived:${uuidv4()}`,\n      ...options,\n    };\n    derivedImageIds.push(newOptions.imageId);\n    return createAndCacheDerivedImage(referencedImageId, newOptions);\n  });\n\n  return { imageIds: derivedImageIds, promises: allPromises };\n}\n\nexport function createAndCacheLocalImage(\n  options: LocalImageOptions,\n  imageId: string,\n  preventCache = false\n): IImage {\n  const imagePlaneModule = metaData.get('imagePlaneModule', imageId);\n\n  const length = imagePlaneModule.rows * imagePlaneModule.columns;\n\n  const image = {\n    imageId: imageId,\n    intercept: 0,\n    windowCenter: 0,\n    windowWidth: 0,\n    color: false,\n    numComps: 1,\n    slope: 1,\n    minPixelValue: 0,\n    maxPixelValue: 255,\n    voiLUTFunction: undefined,\n    rows: imagePlaneModule.rows,\n    columns: imagePlaneModule.columns,\n    getCanvas: undefined, // todo: which canvas?\n    height: imagePlaneModule.rows,\n    width: imagePlaneModule.columns,\n    rgba: undefined, // todo: how\n    columnPixelSpacing: imagePlaneModule.columnPixelSpacing,\n    rowPixelSpacing: imagePlaneModule.rowPixelSpacing,\n    invert: false,\n  } as IImage;\n\n  if (options.scalarData) {\n    const imageScalarData = options.scalarData;\n\n    if (\n      !(\n        imageScalarData instanceof Uint8Array ||\n        imageScalarData instanceof Float32Array ||\n        imageScalarData instanceof Uint16Array ||\n        imageScalarData instanceof Int16Array\n      )\n    ) {\n      throw new Error(\n        'To use createLocalVolume you should pass scalarData of type Uint8Array, Uint16Array, Int16Array or Float32Array'\n      );\n    }\n\n    image.sizeInBytes = imageScalarData.byteLength;\n    image.getPixelData = () => imageScalarData;\n  } else if (options.skipCreateBuffer !== true) {\n    const { numBytes, TypedArrayConstructor } = getBufferConfiguration(\n      options.targetBufferType,\n      length\n    );\n\n    const imageScalarData = new TypedArrayConstructor(length);\n\n    image.sizeInBytes = numBytes;\n    image.getPixelData = () => imageScalarData;\n  }\n\n  // The onCacheAdd may modify the size in bytes for this image, which is ok,\n  // as this is used after resolution for cache storage.  It may also do\n  // thinks like adding alternative representations such as VoxelManager\n  options.onCacheAdd?.(image);\n\n  const imageLoadObject = {\n    promise: Promise.resolve(image),\n  };\n\n  if (!preventCache) {\n    cache.putImageLoadObject(image.imageId, imageLoadObject);\n  }\n\n  return image;\n}\n\n/**\n * Removes the imageId from the request pool manager and executes the `cancel`\n * function if it exists.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n *\n */\nexport function cancelLoadImage(imageId: string): void {\n  const filterFunction = ({ additionalDetails }) => {\n    if (additionalDetails.imageId) {\n      return additionalDetails.imageId !== imageId;\n    }\n\n    // for volumes\n    return true;\n  };\n\n  // Instruct the request pool manager to filter queued\n  // requests to ensure requests we no longer need are\n  // no longer sent.\n  imageLoadPoolManager.filterRequests(filterFunction);\n\n  // TODO: Cancel decoding and retrieval as well (somehow?)\n\n  // cancel image loading if in progress\n  const imageLoadObject = cache.getImageLoadObject(imageId);\n\n  if (imageLoadObject) {\n    imageLoadObject.cancelFn();\n  }\n}\n\n/**\n * Removes the imageIds from the request pool manager and calls the `cancel`\n * function if it exists.\n *\n * @param imageIds - Array of Cornerstone Image Object's imageIds\n *\n */\nexport function cancelLoadImages(imageIds: Array<string>): void {\n  imageIds.forEach((imageId) => cancelLoadImage(imageId));\n}\n\n/**\n * Removes all the ongoing image loads by calling the `cancel` method on each\n * imageLoadObject. If no `cancel` method is available, it will be ignored.\n *\n */\nexport function cancelLoadAll(): void {\n  const requestPool = imageLoadPoolManager.getRequestPool();\n\n  Object.keys(requestPool).forEach((type: string) => {\n    const requests = requestPool[type];\n\n    Object.keys(requests).forEach((priority) => {\n      const requestDetails = requests[priority].pop();\n      const additionalDetails = requestDetails.additionalDetails as any;\n      const { imageId, volumeId } = additionalDetails;\n\n      let loadObject;\n\n      if (imageId) {\n        loadObject = cache.getImageLoadObject(imageId);\n      } else if (volumeId) {\n        loadObject = cache.getVolumeLoadObject(volumeId);\n      }\n      if (loadObject) {\n        loadObject.cancel();\n      }\n    });\n    // resetting the pool types to be empty\n    imageLoadPoolManager.clearRequestStack(type);\n\n    // TODO: Clear retrieval and decoding queues as well\n  });\n}\n\n/**\n * Registers an imageLoader plugin with cornerstone for the specified scheme\n *\n * @param scheme - The scheme to use for this image loader (e.g. 'dicomweb', 'wadouri', 'http')\n * @param imageLoader - A Cornerstone Image Loader function\n */\nexport function registerImageLoader(\n  scheme: string,\n  imageLoader: ImageLoaderFn\n): void {\n  imageLoaders[scheme] = imageLoader;\n}\n/**\n * Registers a new unknownImageLoader and returns the previous one\n *\n * @param imageLoader - A Cornerstone Image Loader\n *\n * @returns The previous Unknown Image Loader\n */\nexport function registerUnknownImageLoader(\n  imageLoader: ImageLoaderFn\n): ImageLoaderFn {\n  const oldImageLoader = unknownImageLoader;\n  unknownImageLoader = imageLoader;\n  return oldImageLoader;\n}\n/**\n * Removes all registered and unknown image loaders. This should be called\n * when the application is unmounted to prevent memory leaks.\n *\n */\nexport function unregisterAllImageLoaders(): void {\n  Object.keys(imageLoaders).forEach(\n    (imageLoader) => delete imageLoaders[imageLoader]\n  );\n  unknownImageLoader = undefined;\n}\n\n/**\n * Creates and caches derived segmentation images based on the referenced imageIds, this\n * is a helper function, we don't have segmentation concept in the cornerstone core; however,\n * this helper would make it clear that the segmentation images SHOULD be Uint8Array type\n * always until we have a better solution.\n *\n * @param referencedImageIds - An array of referenced image IDs.\n * @param options - The options for creating the derived images (default: { targetBufferType: 'Uint8Array' }).\n * @returns The derived images.\n */\nexport function createAndCacheDerivedSegmentationImages(\n  referencedImageIds: Array<string>,\n  options: DerivedImageOptions = {\n    targetBufferType: 'Uint8Array',\n  }\n): DerivedImages {\n  return createAndCacheDerivedImages(referencedImageIds, options);\n}\n\n/**\n * Creates and caches a derived segmentation image based on the referenced image ID.\n * this is a helper function, we don't have segmentation concept in the cornerstone core; however,\n * this helper would make it clear that the segmentation images SHOULD be Uint8Array type\n * always until we have a better solution.\n *\n * @param referencedImageId The ID of the referenced image.\n * @param options The options for creating the derived image (default: { targetBufferType: 'Uint8Array' }).\n * @returns A promise that resolves to the created derived segmentation image.\n */\nexport function createAndCacheDerivedSegmentationImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {\n    targetBufferType: 'Uint8Array',\n  }\n): Promise<IImage> {\n  return createAndCacheDerivedImage(referencedImageId, options);\n}\n","import '@kitware/vtk.js/Rendering/Profiles/Volume';\n\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport type { vtkImageData as vtkImageDataType } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\n\nimport { ImageVolume } from '../cache/classes/ImageVolume';\nimport cache from '../cache/cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport triggerEvent from '../utilities/triggerEvent';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport {\n  createUint16SharedArray,\n  createUint8SharedArray,\n  createFloat32SharedArray,\n  generateVolumePropsFromImageIds,\n  getBufferConfiguration,\n  uuidv4,\n} from '../utilities';\nimport {\n  Point3,\n  Metadata,\n  EventTypes,\n  Mat3,\n  IImageVolume,\n  VolumeLoaderFn,\n  IDynamicImageVolume,\n  PixelDataTypedArray,\n  IVolumeLoadObject,\n  PixelDataTypedArrayString,\n} from '../types';\nimport { getConfiguration, getShouldUseSharedArrayBuffer } from '../init';\nimport {\n  performCacheOptimizationForVolume,\n  setupCacheOptimizationEventListener,\n} from '../utilities/cacheUtils';\n\ninterface VolumeLoaderOptions {\n  imageIds: Array<string>;\n}\n\ninterface DerivedVolumeOptions {\n  volumeId: string;\n  targetBuffer?: {\n    type: PixelDataTypedArrayString;\n    sharedArrayBuffer?: boolean;\n  };\n}\ninterface LocalVolumeOptions {\n  metadata: Metadata;\n  dimensions: Point3;\n  spacing: Point3;\n  origin: Point3;\n  direction: Mat3;\n  scalarData?: PixelDataTypedArray;\n  imageIds?: Array<string>;\n  referencedImageIds?: Array<string>;\n  referencedVolumeId?: string;\n  targetBuffer?: {\n    type: PixelDataTypedArrayString;\n    sharedArrayBuffer?: boolean;\n  };\n}\n\n/**\n * Adds a single scalar data to a 3D volume\n */\nfunction addScalarDataToImageData(\n  imageData: vtkImageDataType,\n  scalarData: PixelDataTypedArray,\n  dataArrayAttrs\n) {\n  const scalarArray = vtkDataArray.newInstance({\n    name: `Pixels`,\n    values: scalarData,\n    ...dataArrayAttrs,\n  });\n\n  imageData.getPointData().setScalars(scalarArray);\n}\n\n/**\n * Adds multiple scalar data (time points) to a 4D volume\n */\nfunction addScalarDataArraysToImageData(\n  imageData: vtkImageDataType,\n  scalarDataArrays: PixelDataTypedArray[],\n  dataArrayAttrs\n) {\n  scalarDataArrays.forEach((scalarData, i) => {\n    const vtkScalarArray = vtkDataArray.newInstance({\n      name: `timePoint-${i}`,\n      values: scalarData,\n      ...dataArrayAttrs,\n    });\n\n    imageData.getPointData().addArray(vtkScalarArray);\n  });\n\n  // Set the first as active otherwise nothing is displayed on the screen\n  imageData.getPointData().setActiveScalars('timePoint-0');\n}\n\nfunction createInternalVTKRepresentation(\n  volume: IImageVolume\n): vtkImageDataType {\n  const { dimensions, metadata, spacing, direction, origin } = volume;\n  const { PhotometricInterpretation } = metadata;\n\n  let numComponents = 1;\n  if (PhotometricInterpretation === 'RGB') {\n    numComponents = 3;\n  }\n\n  const imageData = vtkImageData.newInstance();\n  const dataArrayAttrs = { numberOfComponents: numComponents };\n\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n\n  // Add scalar data to 3D or 4D volume\n  if (volume.isDynamicVolume()) {\n    const scalarDataArrays = (<IDynamicImageVolume>(\n      volume\n    )).getScalarDataArrays();\n\n    addScalarDataArraysToImageData(imageData, scalarDataArrays, dataArrayAttrs);\n  } else {\n    const scalarData = volume.getScalarData();\n\n    addScalarDataToImageData(imageData, scalarData, dataArrayAttrs);\n  }\n\n  return imageData;\n}\n\n/**\n * This module deals with VolumeLoaders and loading volumes\n */\n\nconst volumeLoaders = {};\n\nlet unknownVolumeLoader;\n\n/**\n * Load a volume using a registered Cornerstone Volume Loader.\n *\n * The volume loader that is used will be\n * determined by the volume loader scheme matching against the volumeId.\n *\n * @param volumeId - A Cornerstone Volume Object's volumeId\n * @param options - Options to be passed to the Volume Loader. Options\n * contain the ImageIds that is passed to the loader\n *\n * @returns An Object which can be used to act after a volume is loaded or loading fails\n *\n */\nfunction loadVolumeFromVolumeLoader(\n  volumeId: string,\n  options?: VolumeLoaderOptions\n): IVolumeLoadObject {\n  const colonIndex = volumeId.indexOf(':');\n  const scheme = volumeId.substring(0, colonIndex);\n  let loader = volumeLoaders[scheme];\n\n  if (loader === undefined || loader === null) {\n    if (\n      unknownVolumeLoader == null ||\n      typeof unknownVolumeLoader !== 'function'\n    ) {\n      throw new Error(\n        `No volume loader for scheme ${scheme} has been registered`\n      );\n    }\n\n    loader = unknownVolumeLoader;\n  }\n\n  const volumeLoadObject = loader(volumeId, options);\n\n  setupCacheOptimizationEventListener(volumeId);\n\n  // Broadcast a volume loaded event once the image is loaded\n  volumeLoadObject.promise.then(\n    function (volume) {\n      triggerEvent(eventTarget, Events.VOLUME_LOADED, { volume });\n    },\n    function (error) {\n      const errorObject: EventTypes.VolumeLoadedFailedEventDetail = {\n        volumeId,\n        error,\n      };\n\n      triggerEvent(eventTarget, Events.VOLUME_LOADED_FAILED, errorObject);\n    }\n  );\n\n  return volumeLoadObject;\n}\n\n/**\n * Loads a volume given a volumeId and optional priority and returns a promise which will resolve to\n * the loaded image object or fail if an error occurred.  The loaded image is not stored in the cache.\n *\n * @param volumeId - A Cornerstone Image Object's volumeId\n * @param options - Options to be passed to the Volume Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nexport function loadVolume(\n  volumeId: string,\n  options: VolumeLoaderOptions = { imageIds: [] }\n): Promise<IImageVolume> {\n  if (volumeId === undefined) {\n    throw new Error('loadVolume: parameter volumeId must not be undefined');\n  }\n\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n\n  return volumeLoadObject.promise.then((volume: IImageVolume) => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n    return volume;\n  });\n}\n\n/**\n * Loads an image given an volumeId and optional priority and returns a promise which will resolve to\n * the loaded image object or fail if an error occurred. The image is stored in the cache.\n *\n * @param volumeId - A Cornerstone Image Object's volumeId\n * @param options - Options to be passed to the Volume Loader\n *\n * @returns Volume Loader Object\n */\nexport async function createAndCacheVolume(\n  volumeId: string,\n  options?: VolumeLoaderOptions\n): Promise<Record<string, any>> {\n  if (volumeId === undefined) {\n    throw new Error(\n      'createAndCacheVolume: parameter volumeId must not be undefined'\n    );\n  }\n\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n\n  volumeLoadObject.promise.then((volume: IImageVolume) => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n  });\n\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject).catch((err) => {\n    throw err;\n  });\n\n  return volumeLoadObject.promise;\n}\n\n/**\n * Based on a referencedVolumeId, it will build and cache a new volume. If\n * no scalarData is specified in the options, an empty derived volume will be\n * created that matches the image metadata of the referenceVolume. If scalarData\n * is given, it will be used to generate the intensity values for the derivedVolume.\n * Finally, it will save the volume in the cache.\n * @param referencedVolumeId - the volumeId from which the new volume will get its metadata\n * @param options - DerivedVolumeOptions {uid: derivedVolumeUID, targetBuffer: { type: Float32Array | Uint8Array |\n * Uint16Array | Uint32Array  }, scalarData: if provided}\n *\n * @returns ImageVolume\n */\nexport async function createAndCacheDerivedVolume(\n  referencedVolumeId: string,\n  options: DerivedVolumeOptions\n): Promise<IImageVolume> {\n  const referencedVolume = cache.getVolume(referencedVolumeId);\n  if (!referencedVolume) {\n    throw new Error(\n      `Cannot created derived volume: Referenced volume with id ${referencedVolumeId} does not exist.`\n    );\n  }\n\n  let { volumeId } = options;\n  const { targetBuffer } = options;\n\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n\n  const { metadata, dimensions, spacing, origin, direction } = referencedVolume;\n  const scalarData = referencedVolume.getScalarData();\n  const scalarLength = scalarData.length;\n\n  const { volumeScalarData, numBytes } = generateVolumeScalarData(\n    targetBuffer,\n    scalarLength\n  );\n\n  // Todo: handle more than one component for segmentation (RGB)\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: volumeScalarData,\n  });\n\n  const derivedImageData = vtkImageData.newInstance();\n\n  derivedImageData.setDimensions(dimensions);\n  derivedImageData.setSpacing(spacing);\n  derivedImageData.setDirection(direction);\n  derivedImageData.setOrigin(origin);\n  derivedImageData.getPointData().setScalars(scalarArray);\n\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: derivedImageData,\n    scalarData: volumeScalarData,\n    sizeInBytes: numBytes,\n    imageIds: [],\n    referencedVolumeId,\n  });\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume),\n  };\n\n  await cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return derivedVolume;\n}\n\n/**\n * Creates and cache a volume based on a set of provided properties including\n * dimensions, spacing, origin, direction, metadata, scalarData. It should be noted that\n * scalarData should be provided for this function to work. If a volume with the same\n * Id exists in the cache it returns it immediately.\n * @param options -  { scalarData, metadata, dimensions, spacing, origin, direction }\n * @param volumeId - Id of the generated volume\n *\n * @returns ImageVolume\n */\nexport function createLocalVolume(\n  options: LocalVolumeOptions,\n  volumeId: string,\n  preventCache = false\n): IImageVolume {\n  const { metadata, dimensions, spacing, origin, direction, targetBuffer } =\n    options;\n\n  let { scalarData } = options;\n\n  // Define the valid data types for scalarData\n  const validDataTypes = [\n    'Uint8Array',\n    'Float32Array',\n    'Uint16Array',\n    'Int16Array',\n  ];\n\n  const scalarLength = dimensions[0] * dimensions[1] * dimensions[2];\n\n  // Check if scalarData is provided and is of a valid type\n  if (!scalarData || !validDataTypes.includes(scalarData.constructor.name)) {\n    // Check if targetBuffer is provided and has a valid type\n    if (!targetBuffer?.type || !validDataTypes.includes(targetBuffer.type)) {\n      throw new Error(\n        'createLocalVolume: parameter scalarData must be provided and must be either Uint8Array, Float32Array, Uint16Array or Int16Array'\n      );\n    }\n\n    // Generate volume scalar data if scalarData is not provided or invalid\n    ({ volumeScalarData: scalarData } = generateVolumeScalarData(\n      targetBuffer,\n      scalarLength\n    ));\n  }\n\n  // Todo: handle default values for spacing, origin, direction if not provided\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n\n  const cachedVolume = cache.getVolume(volumeId);\n\n  if (cachedVolume) {\n    return cachedVolume as IImageVolume;\n  }\n\n  const numBytes = scalarData ? scalarData.buffer.byteLength : scalarLength * 4;\n\n  // check if there is enough space in unallocated + image Cache\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: scalarData,\n  });\n\n  const imageData = vtkImageData.newInstance();\n\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n  imageData.getPointData().setScalars(scalarArray);\n\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: imageData,\n    scalarData,\n    sizeInBytes: numBytes,\n    referencedImageIds: options.referencedImageIds || [],\n    referencedVolumeId: options.referencedVolumeId,\n    imageIds: options.imageIds || [],\n  });\n\n  if (preventCache) {\n    return derivedVolume;\n  }\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume),\n  };\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return derivedVolume;\n}\n\nexport async function createAndCacheVolumeFromImages(\n  volumeId: string,\n  imageIds: string[],\n  options: {\n    preventCache?: boolean;\n    additionalDetails?: Record<string, any>;\n  } = {}\n): Promise<IImageVolume> {\n  const { preventCache = false } = options;\n\n  if (imageIds === undefined) {\n    throw new Error(\n      'createAndCacheVolumeFromImages: parameter imageIds must not be undefined'\n    );\n  }\n\n  if (volumeId === undefined) {\n    throw new Error(\n      'createAndCacheVolumeFromImages: parameter volumeId must not be undefined'\n    );\n  }\n\n  const cachedVolume = cache.getVolume(volumeId);\n\n  if (cachedVolume) {\n    return Promise.resolve(cachedVolume);\n  }\n\n  const volumeProps = generateVolumePropsFromImageIds(imageIds, volumeId);\n\n  // volume is an empty volume, we need to load the data from the imageIds\n  // into the volume scalarData\n\n  // it is important to get the imageIds from the volumeProps\n  // since they are sorted\n  const imagePromises = volumeProps.imageIds.map((imageId, imageIdIndex) => {\n    const imageLoadObject = cache.getImageLoadObject(imageId);\n\n    return imageLoadObject.promise.then((image) => {\n      const pixelData = image.getPixelData();\n      const offset = imageIdIndex * image.rows * image.columns;\n\n      (volumeProps.scalarData as PixelDataTypedArray).set(pixelData, offset);\n    });\n  });\n\n  await Promise.all(imagePromises);\n\n  const volume = new ImageVolume({\n    ...volumeProps,\n    referencedImageIds: imageIds,\n    ...options,\n  });\n\n  // since we generated the volume from images, we can optimize the cache\n  // by replacing the pixelData of the images with a view of the volume's\n  // scalarData\n  performCacheOptimizationForVolume(volume);\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(volume),\n  };\n\n  if (preventCache) {\n    return volumeLoadObject.promise;\n  }\n\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return volumeLoadObject.promise;\n}\n\n/**\n * Registers an volumeLoader plugin with cornerstone for the specified scheme\n *\n * @param scheme - The scheme to use for this volume loader (e.g. 'dicomweb', 'wadouri', 'http')\n * @param volumeLoader - A Cornerstone Volume Loader function\n */\nexport function registerVolumeLoader(\n  scheme: string,\n  volumeLoader: VolumeLoaderFn\n): void {\n  volumeLoaders[scheme] = volumeLoader;\n}\n\n/** Gets the array of volume loader schemes */\nexport function getVolumeLoaderSchemes(): string[] {\n  return Object.keys(volumeLoaders);\n}\n\n/**\n * Registers a new unknownVolumeLoader and returns the previous one\n *\n * @param volumeLoader - A Cornerstone Volume Loader\n *\n * @returns The previous Unknown Volume Loader\n */\nexport function registerUnknownVolumeLoader(\n  volumeLoader: VolumeLoaderFn\n): VolumeLoaderFn | undefined {\n  const oldVolumeLoader = unknownVolumeLoader;\n\n  unknownVolumeLoader = volumeLoader;\n\n  return oldVolumeLoader;\n}\n\nexport function getUnknownVolumeLoaderSchema(): string {\n  return unknownVolumeLoader.name;\n}\n\n/**\n * Creates and caches a derived segmentation volume based on a referenced volume.\n * This is basically a utility method since for the segmentations we have to specify\n * Uint8Array as the targetBuffer type for now until we support other types.\n *\n * @param referencedVolumeId - The ID of the referenced volume.\n * @param options - The options for creating the derived volume.\n * @returns A promise that resolves to the created derived segmentation volume.\n */\nexport async function createAndCacheDerivedSegmentationVolume(\n  referencedVolumeId: string,\n  options = {} as DerivedVolumeOptions\n): Promise<IImageVolume> {\n  return createAndCacheDerivedVolume(referencedVolumeId, {\n    ...options,\n    targetBuffer: {\n      type: 'Uint8Array',\n    },\n  });\n}\n\n/**\n * Creates a local segmentation volume.\n *\n * @param options - The options for creating the volume.\n * @param volumeId - The ID of the volume.\n * @param preventCache - Whether to prevent caching the volume.\n * @returns A promise that resolves to the created image volume.\n */\nexport async function createLocalSegmentationVolume(\n  options: LocalVolumeOptions,\n  volumeId: string,\n  preventCache = false\n): Promise<IImageVolume> {\n  if (!options.scalarData) {\n    options.scalarData = new Uint8Array(\n      options.dimensions[0] * options.dimensions[1] * options.dimensions[2]\n    );\n  }\n\n  return createLocalVolume(options, volumeId, preventCache);\n}\n\n/**\n * This function generates volume scalar data based on the provided target buffer and scalar length.\n * It checks if the cache can accommodate the data size and throws an error if it exceeds the cache size.\n * If a shared array buffer is available in the target buffer, it uses that to create the typed array.\n * Otherwise, it creates a typed array based on the scalar length.\n *\n * @param targetBuffer - The target buffer object which may contain a type and a shared array buffer.\n * @param scalarLength - The scalar length for creating the typed array.\n * @param useNorm16Texture - A flag to specify whether to use a 16-bit texture or not.\n * @returns The volume scalar data as a typed array.\n */\nfunction generateVolumeScalarData(\n  targetBuffer: {\n    type: PixelDataTypedArrayString;\n    sharedArrayBuffer?: boolean;\n  },\n  scalarLength: number\n) {\n  const { useNorm16Texture } = getConfiguration().rendering;\n\n  const { TypedArrayConstructor, numBytes } = getBufferConfiguration(\n    targetBuffer?.type,\n    scalarLength,\n    {\n      use16BitTexture: useNorm16Texture,\n      isVolumeBuffer: true,\n    }\n  );\n\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  let volumeScalarData;\n  if (targetBuffer?.sharedArrayBuffer ?? getShouldUseSharedArrayBuffer()) {\n    switch (targetBuffer.type) {\n      case 'Float32Array':\n        volumeScalarData = createFloat32SharedArray(scalarLength);\n        break;\n      case 'Uint8Array':\n        volumeScalarData = createUint8SharedArray(scalarLength);\n        break;\n      case 'Uint16Array':\n        volumeScalarData = createUint16SharedArray(scalarLength);\n        break;\n      case 'Int16Array':\n        volumeScalarData = createUint16SharedArray(scalarLength);\n        break;\n      default:\n        throw new Error(\n          'generateVolumeScalarData: SharedArrayBuffer is not supported for the specified target buffer type'\n        );\n    }\n  } else {\n    volumeScalarData = new TypedArrayConstructor(scalarLength);\n  }\n\n  return { volumeScalarData, numBytes };\n}\n","// This module defines a way to access various metadata about an imageId.  This layer of abstraction exists\n// So metadata can be provided in different ways (e.g. by parsing DICOM P10 or by a WADO-RS document)\n\nconst providers = [];\n\n/**\n * Adds a metadata provider with the specified priority\n * @param provider - Metadata provider function\n * @param priority - 0 is default/normal, > 0 is high, < 0 is low\n *\n * @category MetaData\n */\nexport function addProvider(\n  provider: (type: string, ...query: string[]) => any,\n  priority = 0\n): void {\n  let i;\n\n  // Find the right spot to insert this provider based on priority\n  for (i = 0; i < providers.length; i++) {\n    if (providers[i].priority <= priority) {\n      break;\n    }\n  }\n\n  // Insert the decode task at position i\n  providers.splice(i, 0, {\n    priority,\n    provider,\n  });\n}\n\n/**\n * Removes the specified provider\n *\n * @param provider - Metadata provider function\n *\n * @category MetaData\n */\nexport function removeProvider(\n  provider: (type: string, query: any) => { any }\n): void {\n  for (let i = 0; i < providers.length; i++) {\n    if (providers[i].provider === provider) {\n      providers.splice(i, 1);\n\n      break;\n    }\n  }\n}\n\n/**\n * Removes all providers\n *\n * @category MetaData\n */\nexport function removeAllProviders(): void {\n  while (providers.length > 0) {\n    providers.pop();\n  }\n}\n\n/**\n * Gets metadata from the registered metadata providers.  Will call each one from highest priority to lowest\n * until one responds\n *\n * @param type -  The type of metadata requested from the metadata store\n * @param query - The query for the metadata store, often imageId\n *        Some metadata providers support multi-valued strings, which are interpretted\n *        as the provider chooses.\n *\n * @returns The metadata retrieved from the metadata store\n * @category MetaData\n */\nfunction getMetaData(type: string, ...queries): any {\n  // Invoke each provider in priority order until one returns something\n  for (let i = 0; i < providers.length; i++) {\n    const result = providers[i].provider(type, ...queries);\n\n    if (result !== undefined) {\n      return result;\n    }\n  }\n}\n\nexport { getMetaData as get };\n","import { RequestPoolManager } from './requestPoolManager';\nimport RequestType from '../enums/RequestType';\n\n/**\n * You can use the imageLoadPoolManager to load images, by providing a `requestFn`\n * that returns a promise for the image. You can provide a `type` to specify the type of\n * request (interaction, thumbnail, prefetch), and you can provide additional details\n * that will be passed to the requestFn. Below is an example of a requestFn that loads\n * an image from an imageId:\n *\n * ```javascript\n *\n * const priority = -5\n * const requestType = RequestType.Interaction\n * const additionalDetails = { imageId }\n * const options = {\n *   targetBuffer: {\n *     type: 'Float32Array',\n *     offset: null,\n *     length: null,\n *   },\n *   preScale: {\n *     enabled: true,\n *   },\n * }\n *\n * imageLoadPoolManager.addRequest(\n *   loadAndCacheImage(imageId, options).then(() => { // set on viewport}),\n *   requestType,\n *   additionalDetails,\n *   priority\n * )\n * ```\n */\nconst imageLoadPoolManager = new RequestPoolManager('imageLoadPool');\n\nimageLoadPoolManager.grabDelay = 0;\n\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Interaction, 1000);\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Thumbnail, 1000);\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Prefetch, 1000);\n\nexport default imageLoadPoolManager;\n","import RequestType from '../enums/RequestType';\nimport { IImage } from '../types';\nimport { uuidv4 } from '../utilities';\n\ntype AdditionalDetails = {\n  imageId?: string;\n  volumeId?: string;\n};\n\ntype RequestDetailsInterface = {\n  requestFn: () => Promise<IImage | void>;\n  type: RequestType;\n  additionalDetails: AdditionalDetails;\n};\n\ntype RequestPool = {\n  [name in RequestType]: { [key: number]: RequestDetailsInterface[] };\n};\n\n/**\n * RequestPool manager class is a base class that manages the request pools.\n * It is used imageRetrievalPoolManager, and imageLoadPoolManager to retrieve and load images.\n * Previously requestPoolManager was used to manage the retrieval and loading and decoding\n * of the images in a way that new requests were sent after the image was both loaded and decoded\n * which was not performant since it was waiting for the image to be loaded and decoded before\n * sending the next request which is a network request and can be done in parallel.\n * Now, we use separate imageRetrievalPoolManager and imageLoadPoolManager\n * to improve performance and both are extending the RequestPoolManager class which\n * is a basic queueing pool.\n *\n * A new requestPool can be created by instantiating a new RequestPoolManager class.\n *\n * ```javascript\n * const requestPoolManager = new RequestPoolManager()\n * ```\n *\n * ## ImageLoadPoolManager\n *\n * You can use the imageLoadPoolManager to load images, by providing a `requestFn`\n * that returns a promise for the image. You can provide a `type` to specify the type of\n * request (interaction, thumbnail, prefetch), and you can provide additional details\n * that will be passed to the requestFn. Below is an example of a requestFn that loads\n * an image from an imageId:\n *\n * ```javascript\n *\n * const priority = -5\n * const requestType = RequestType.Interaction\n * const additionalDetails = { imageId }\n * const options = {\n *   targetBuffer: {\n *     type: 'Float32Array',\n *     offset: null,\n *     length: null,\n *   },\n *   preScale: {\n *      enabled: true,\n *    },\n * }\n *\n * imageLoadPoolManager.addRequest(\n *   loadAndCacheImage(imageId, options).then(() => { // set on viewport}),\n *   requestType,\n *   additionalDetails,\n *   priority\n * )\n * ```\n * ### ImageRetrievalPoolManager\n * You don't need to directly use the imageRetrievalPoolManager to load images\n * since the imageLoadPoolManager will automatically use it for retrieval. However,\n * maximum number of concurrent requests can be set by calling `setMaxConcurrentRequests`.\n */\nclass RequestPoolManager {\n  private id: string;\n  private awake: boolean;\n  private requestPool: RequestPool;\n  private numRequests = {\n    interaction: 0,\n    thumbnail: 0,\n    prefetch: 0,\n    compute: 0,\n  };\n  /* maximum number of requests of each type. */\n  public maxNumRequests: {\n    interaction: number;\n    thumbnail: number;\n    prefetch: number;\n    compute: number;\n  };\n  /* A public property that is used to set the delay between requests. */\n  public grabDelay: number;\n  private timeoutHandle: number;\n\n  /**\n   * By default a request pool containing three priority groups, one for each\n   * of the request types, is created. Maximum number of requests of each type\n   * is set to 6.\n   */\n  constructor(id?: string) {\n    this.id = id ? id : uuidv4();\n\n    this.requestPool = {\n      interaction: { 0: [] },\n      thumbnail: { 0: [] },\n      prefetch: { 0: [] },\n      compute: { 0: [] },\n    };\n\n    this.grabDelay = 5;\n    this.awake = false;\n\n    this.numRequests = {\n      interaction: 0,\n      thumbnail: 0,\n      prefetch: 0,\n      compute: 0,\n    };\n\n    this.maxNumRequests = {\n      interaction: 6,\n      thumbnail: 6,\n      prefetch: 5,\n      // I believe there is a bug right now, where if there are two workers\n      // and one wants to run a compute job 6 times and the limit is just 5, then\n      // the other worker will never get a chance to run its compute job.\n      // we should probably have a separate limit for compute jobs per worker\n      // context as there is another layer of parallelism there. For this reason\n      // I'm setting the limit to 1000 for now.\n      compute: 1000,\n    };\n  }\n\n  /**\n   * This function sets the maximum number of requests for a given request type.\n   * @param type - The type of request you want to set the max number\n   * of requests for it can be either of interaction, prefetch, or thumbnail.\n   * @param maxNumRequests - The maximum number of requests that can be\n   * made at a time.\n   */\n  public setMaxSimultaneousRequests(\n    type: RequestType,\n    maxNumRequests: number\n  ): void {\n    this.maxNumRequests[type] = maxNumRequests;\n  }\n\n  /**\n   * It returns the maximum number of requests of a given type that can be made\n   * @param type - The type of request.\n   * @returns The maximum number of requests of a given type.\n   */\n  public getMaxSimultaneousRequests(type: RequestType): number {\n    return this.maxNumRequests[type];\n  }\n\n  /**\n   * Stops further fetching of the requests, all the ongoing requests will still\n   * be retrieved\n   */\n  public destroy(): void {\n    if (this.timeoutHandle) {\n      window.clearTimeout(this.timeoutHandle);\n    }\n  }\n\n  /**\n   * Adds the requests to the pool of requests.\n   *\n   * @param requestFn - A function that returns a promise which resolves in the image\n   * @param type - Priority category, it can be either of interaction, prefetch,\n   * or thumbnail.\n   * @param additionalDetails - Additional details that requests can contain.\n   * For instance the volumeId for the volume requests\n   * @param priority - Priority number for each category of requests. Its default\n   * value is priority 0. The lower the priority number, the higher the priority number\n   *\n   */\n  public addRequest(\n    requestFn: () => Promise<IImage | void>,\n    type: RequestType,\n    additionalDetails: Record<string, unknown>,\n    priority = 0\n  ): void {\n    // Describe the request\n    const requestDetails: RequestDetailsInterface = {\n      requestFn,\n      type,\n      additionalDetails,\n    };\n\n    // Check if the priority group exists on the request type\n    if (this.requestPool[type][priority] === undefined) {\n      this.requestPool[type][priority] = [];\n    }\n\n    // Adding the request to the correct priority group of the request type\n    this.requestPool[type][priority].push(requestDetails);\n\n    this.startGrabbing();\n  }\n\n  /**\n   * Filter the requestPoolManager's pool of request based on the result of\n   * provided filter function. The provided filter function needs to return false or true\n   *\n   * @param filterFunction - The filter function for filtering of the requests to keep\n   */\n  public filterRequests(\n    filterFunction: (requestDetails: RequestDetailsInterface) => boolean\n  ): void {\n    Object.keys(this.requestPool).forEach((type: string) => {\n      const requestType = this.requestPool[type];\n      Object.keys(requestType).forEach((priority) => {\n        requestType[priority] = requestType[priority].filter(\n          (requestDetails: RequestDetailsInterface) => {\n            return filterFunction(requestDetails);\n          }\n        );\n      });\n    });\n  }\n\n  /**\n   * Clears the requests specific to the provided type. For instance, the\n   * pool of requests of type 'interaction' can be cleared via this function.\n   *\n   *\n   * @param type - category of the request (either interaction, prefetch or thumbnail)\n   */\n  public clearRequestStack(type: string): void {\n    if (!this.requestPool[type]) {\n      throw new Error(`No category for the type ${type} found`);\n    }\n    this.requestPool[type] = { 0: [] };\n  }\n\n  private sendRequests(type) {\n    const requestsToSend = this.maxNumRequests[type] - this.numRequests[type];\n    let syncImageCount = 0;\n\n    for (let i = 0; i < requestsToSend; i++) {\n      const requestDetails = this.getNextRequest(type);\n      if (requestDetails === null) {\n        return false;\n      } else if (requestDetails) {\n        this.numRequests[type]++;\n        this.awake = true;\n\n        let requestResult;\n        try {\n          requestResult = requestDetails.requestFn();\n        } catch (e) {\n          // This is the only warning one will get, so need a warn message\n          console.warn('sendRequest failed', e);\n        }\n        if (requestResult?.finally) {\n          requestResult.finally(() => {\n            this.numRequests[type]--;\n            this.startAgain();\n          });\n        } else {\n          // Handle non-async request functions too - typically just short circuit ones\n          this.numRequests[type]--;\n          syncImageCount++;\n        }\n      }\n    }\n    if (syncImageCount) {\n      this.startAgain();\n    }\n\n    return true;\n  }\n\n  private getNextRequest(type): RequestDetailsInterface | null {\n    const interactionPriorities = this.getSortedPriorityGroups(type);\n    for (const priority of interactionPriorities) {\n      if (this.requestPool[type][priority].length) {\n        return this.requestPool[type][priority].shift();\n      }\n    }\n\n    return null;\n  }\n\n  protected startGrabbing(): void {\n    const hasRemainingInteractionRequests = this.sendRequests(\n      RequestType.Interaction\n    );\n    const hasRemainingThumbnailRequests = this.sendRequests(\n      RequestType.Thumbnail\n    );\n    const hasRemainingPrefetchRequests = this.sendRequests(\n      RequestType.Prefetch\n    );\n    const hasRemainingComputeRequests = this.sendRequests(RequestType.Compute);\n\n    if (\n      !hasRemainingInteractionRequests &&\n      !hasRemainingThumbnailRequests &&\n      !hasRemainingPrefetchRequests &&\n      !hasRemainingComputeRequests\n    ) {\n      this.awake = false;\n    }\n  }\n\n  protected startAgain(): void {\n    if (!this.awake) {\n      return;\n    }\n\n    if (this.grabDelay !== undefined) {\n      // Prevents calling setTimeout hundreds of times when hundreds of requests\n      // are added which make it slower and works in an unexpected way when\n      // destroy/clearTimeout is called because only the last handle is stored.\n      if (!this.timeoutHandle) {\n        this.timeoutHandle = window.setTimeout(() => {\n          this.timeoutHandle = null;\n          this.startGrabbing();\n        }, this.grabDelay);\n      }\n    } else {\n      this.startGrabbing();\n    }\n  }\n\n  protected getSortedPriorityGroups(type: string): Array<number> {\n    const priorities = Object.keys(this.requestPool[type])\n      .map(Number)\n      .filter((priority) => this.requestPool[type][priority].length)\n      .sort((a, b) => a - b);\n    return priorities;\n  }\n\n  /**\n   * Returns the request pool containing different categories, their priority and\n   * the added request details.\n   *\n   * @returns the request pool which contains different categories, their priority and\n   * the added request details\n   */\n  getRequestPool(): RequestPool {\n    return this.requestPool;\n  }\n}\n\nexport { RequestPoolManager };\n","import cache, { ImageVolume } from '../cache';\nimport { Events } from '../enums';\nimport eventTarget from '../eventTarget';\nimport { getConfiguration, getShouldUseSharedArrayBuffer } from '../init';\n\n/**\n * This function will check if the cache optimization is enabled and if it is\n * it will check if the created volume was derived from an already cached stack\n * of images, if so it will go back to the image cache and create a view at the\n * correct offset of the bigger volume array buffer, this will save memory.\n *\n * @param volumeId - The volumeId that will be checked for cache optimization\n */\nexport function setupCacheOptimizationEventListener(volumeId) {\n  const { enableCacheOptimization } = getConfiguration();\n  const shouldUseSAB = getShouldUseSharedArrayBuffer();\n\n  const performOptimization = enableCacheOptimization && shouldUseSAB;\n  if (!performOptimization) {\n    return;\n  }\n\n  eventTarget.addEventListenerOnce(\n    Events.IMAGE_VOLUME_LOADING_COMPLETED,\n    (evt) => {\n      if (evt.detail.volumeId !== volumeId) {\n        return;\n      }\n\n      const volume = cache.getVolume(volumeId);\n\n      performCacheOptimizationForVolume(volume);\n    }\n  );\n}\n\n/**\n * Performs cache optimization for a volume by replacing the pixel data of each image\n * in the image cache (if found) with a view of the volume's scalar data.\n * @param options - The options for cache optimization.\n * @param options.volumeId - The ID of the volume.\n */\nexport function performCacheOptimizationForVolume(volume) {\n  if (!(volume instanceof ImageVolume)) {\n    return;\n  }\n\n  const scalarData = volume.getScalarData();\n\n  volume.imageCacheOffsetMap.size > 0\n    ? _processImageCacheOffsetMap(volume, scalarData)\n    : _processVolumeImages(volume, scalarData);\n}\n\n/**\n * This function will process the volume images and replace the pixel data of each\n * image in the image cache (if found) with a view of the volume's scalar data.\n * This function is used when the volume is derived from an already cached stack\n * of images.\n *\n * @param volume - The volume to process.\n * @param scalarData - The scalar data to use for the volume.\n */\nfunction _processImageCacheOffsetMap(volume, scalarData) {\n  volume.imageCacheOffsetMap.forEach(({ offset }, imageId) => {\n    const image = cache.getImage(imageId);\n    if (!image) {\n      return;\n    }\n\n    _updateImageWithScalarDataView(image, scalarData, offset);\n    cache.decrementImageCacheSize(image.sizeInBytes);\n  });\n}\n\n/**\n * This function will process the volume images and replace the pixel data of each\n * image in the image cache (if found) with a view of the volume's scalar data.\n * This function is used when the volume is not derived from an already cached stack\n * of images.\n *\n * @param volume - The volume to process.\n * @param scalarData - The scalar data to use for the volume.\n */\nfunction _processVolumeImages(volume, scalarData) {\n  let compatibleScalarData = scalarData;\n\n  const sampleImageIdWithImage = volume.imageIds.find((imageId) => {\n    const image = cache.getImage(imageId);\n    return image;\n  });\n\n  if (!sampleImageIdWithImage) {\n    return;\n  }\n\n  const sampleImage = cache.getImage(sampleImageIdWithImage);\n  const samplePixelData =\n    sampleImage.imageFrame?.pixelData || sampleImage.getPixelData();\n\n  // Check if the types of scalarData and pixelData are different.\n  if (scalarData.constructor !== samplePixelData.constructor) {\n    // If so, create a new typed array of the same type as pixelData and copy the values from scalarData.\n    compatibleScalarData = new samplePixelData.constructor(scalarData.length);\n\n    // Copy values from scalarData to compatibleScalarData.\n    compatibleScalarData.set(scalarData);\n  }\n\n  volume.imageIds.forEach((imageId) => {\n    const image = cache.getImage(imageId);\n    if (!image) {\n      return;\n    }\n\n    const index = volume.getImageIdIndex(imageId);\n    const offset = index * image.getPixelData().byteLength;\n\n    _updateImageWithScalarDataView(image, compatibleScalarData, offset);\n    cache.decrementImageCacheSize(image.sizeInBytes);\n  });\n}\n\nfunction _updateImageWithScalarDataView(image, scalarData, offset) {\n  const pixelData = image.imageFrame\n    ? image.imageFrame.pixelData\n    : image.getPixelData();\n\n  const view = new pixelData.constructor(\n    scalarData.buffer,\n    offset,\n    pixelData.length\n  );\n\n  image.getPixelData = () => view;\n\n  if (image.imageFrame) {\n    image.imageFrame.pixelData = view;\n  }\n\n  image.bufferView = {\n    buffer: scalarData.buffer,\n    offset,\n  };\n}\n","import vtkColorMaps from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\n\nimport { ColormapPublic, ColormapRegistration } from '../types';\nimport isEqual from './isEqual';\nimport { actorIsA } from './actorCheck';\n\nconst _colormaps = new Map();\n\n/**\n * Register a colormap\n * @param name - name of the colormap\n * @param colormap - colormap object\n */\nfunction registerColormap(colormap: ColormapRegistration) {\n  _colormaps.set(colormap.Name, colormap);\n}\n\n/**\n * Get a colormap by name\n * @param name - name of the colormap\n * @returns colormap object\n */\nfunction getColormap(name) {\n  return _colormaps.get(name);\n}\n\n/**\n * Get all registered colormap names\n * @returns array of colormap names\n *\n */\nfunction getColormapNames() {\n  return Array.from(_colormaps.keys());\n}\n\n/**\n * Finds a colormap that matches the given RGB points.\n *\n * @param rgbPoints - The RGB points to match against the colormaps.\n * @returns  The matched colormap object or null if no match is found.\n */\nfunction findMatchingColormap(rgbPoints, actor): ColormapPublic | null {\n  const colormapsVTK = vtkColorMaps.rgbPresetNames.map((presetName) =>\n    vtkColorMaps.getPresetByName(presetName)\n  );\n\n  const colormapsCS3D = getColormapNames().map((colormapName) =>\n    getColormap(colormapName)\n  );\n\n  const colormaps = colormapsVTK.concat(colormapsCS3D);\n\n  // Find the colormap that matches the given RGB points\n  const matchedColormap = colormaps.find((colormap) => {\n    const { RGBPoints: presetRGBPoints } = colormap;\n\n    if (presetRGBPoints.length !== rgbPoints.length) {\n      return false;\n    }\n\n    for (let i = 0; i < presetRGBPoints.length; i += 4) {\n      if (\n        !isEqual(\n          presetRGBPoints.slice(i + 1, i + 4),\n          rgbPoints.slice(i + 1, i + 4)\n        )\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  if (!matchedColormap) {\n    return null;\n  }\n\n  const opacity = [];\n  if (actorIsA(actor, 'vtkVolume')) {\n    const opacityPoints = actor\n      .getProperty()\n      .getScalarOpacity(0)\n      .getDataPointer();\n\n    if (!opacityPoints) {\n      return {\n        name: matchedColormap.Name,\n      };\n    }\n\n    for (let i = 0; i < opacityPoints.length; i += 2) {\n      opacity.push({\n        value: opacityPoints[i],\n        opacity: opacityPoints[i + 1],\n      });\n    }\n  }\n\n  return {\n    name: matchedColormap.Name,\n    opacity,\n  };\n}\n\nexport {\n  getColormap,\n  getColormapNames,\n  registerColormap,\n  findMatchingColormap,\n};\n","import vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport { VOIRange } from '../types';\n\nexport default function createLinearRGBTransferFunction(\n  voiRange: VOIRange\n): vtkColorTransferFunction {\n  const cfun = vtkColorTransferFunction.newInstance();\n  let lower = 0;\n  let upper = 1024;\n  if (\n    voiRange &&\n    voiRange.lower !== undefined &&\n    voiRange.upper !== undefined\n  ) {\n    lower = voiRange.lower;\n    upper = voiRange.upper;\n  }\n  cfun.addRGBPoint(lower, 0.0, 0.0, 0.0);\n  cfun.addRGBPoint(upper, 1.0, 1.0, 1.0);\n\n  return cfun;\n}\n","import { ImageSliceData, IVolumeViewport, VolumeActor } from '../types';\nimport getSliceRange from './getSliceRange';\nimport getTargetVolumeAndSpacingInNormalDir from './getTargetVolumeAndSpacingInNormalDir';\n\n/**\n * It calculates the number of slices and the current slice index for a given\n * Volume viewport\n * @param viewport - volume viewport\n * @returns An object with two properties: numberOfSlices and imageIndex.\n */\nfunction getImageSliceDataForVolumeViewport(\n  viewport: IVolumeViewport\n): ImageSliceData {\n  const camera = viewport.getCamera();\n\n  const { spacingInNormalDirection, imageVolume } =\n    getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n\n  if (!imageVolume) {\n    return;\n  }\n\n  const { viewPlaneNormal, focalPoint } = camera;\n\n  const actorEntry = viewport\n    .getActors()\n    .find(\n      (a) =>\n        a.referenceId === imageVolume.volumeId || a.uid === imageVolume.volumeId\n    );\n\n  if (!actorEntry) {\n    console.warn('No actor found for with actorUID of', imageVolume.volumeId);\n  }\n\n  const volumeActor = actorEntry.actor as VolumeActor;\n  const sliceRange = getSliceRange(volumeActor, viewPlaneNormal, focalPoint);\n\n  const { min, max, current } = sliceRange;\n\n  // calculate number of steps from min to max with current normal spacing in direction\n  const numberOfSlices = Math.round((max - min) / spacingInNormalDirection) + 1;\n\n  // calculate the imageIndex based on min, max, current\n  let imageIndex = ((current - min) / (max - min)) * numberOfSlices;\n  imageIndex = Math.floor(imageIndex);\n\n  // Clamp imageIndex\n  if (imageIndex > numberOfSlices - 1) {\n    imageIndex = numberOfSlices - 1;\n  } else if (imageIndex < 0) {\n    imageIndex = 0;\n  }\n\n  return {\n    numberOfSlices,\n    imageIndex,\n  };\n}\n\nexport default getImageSliceDataForVolumeViewport;\n","function getTransferFunctionNodes(transferFunction) {\n  const size = transferFunction.getSize();\n  const values = [];\n  for (let index = 0; index < size; index++) {\n    const nodeValue1 = [];\n\n    transferFunction.getNodeValue(index, nodeValue1);\n\n    values.push(nodeValue1);\n  }\n\n  return values;\n}\n\nfunction setTransferFunctionNodes(transferFunction, nodes) {\n  if (!nodes?.length) {\n    return;\n  }\n\n  transferFunction.removeAllPoints();\n\n  nodes.forEach((node) => {\n    transferFunction.addRGBPoint(...node);\n  });\n}\n\nexport { getTransferFunctionNodes, setTransferFunctionNodes };\n","import type Point3 from '../types/Point3';\n\n/**\n * Given an imageData object and a point in physical space, return the index of the\n * voxel that contains the point. TODO: this should be pushed to vtk upstream.\n * @param imageData - The image data object.\n * @param physicalPoint - The point in physical space that you want to transform to\n * index space.\n * @returns An array of integers.\n */\nexport default function transformWorldToIndex(imageData, worldPos: Point3) {\n  const continuousIndex = imageData.worldToIndex(worldPos);\n  const index = continuousIndex.map(Math.round);\n\n  return index;\n}\n","import eventTarget from '../eventTarget';\n\n/**\n * Small utility to trigger a custom event for a given EventTarget.\n *\n * @example\n *\n * ```javascript\n * triggerEvent(element, Events.IMAGE_RENDERED, { element })\n * ```\n * or it can trigger event on the eventTarget itself\n *\n * ```javascript\n * triggerEvent(eventTarget, CSTOOLS_EVENTS.ANNOTATION_MODIFIED, { viewportId, annotationUID })\n * ```\n *\n * @param el - The element or EventTarget to trigger the event upon\n * @param type - The event type name\n * @param detail - The event detail to be sent\n * @returns false if event is cancelable and at least one of the event handlers\n * which received event called Event.preventDefault(). Otherwise it returns true.\n */\nexport default function triggerEvent(\n  el: EventTarget = eventTarget,\n  type: string,\n  detail: unknown = null\n): boolean {\n  if (!type) {\n    throw new Error('Event type was not defined');\n  }\n\n  const event = new CustomEvent(type, {\n    detail,\n    cancelable: true,\n  });\n\n  return el.dispatchEvent(event);\n}\n","import * as Comlink from 'comlink';\nimport { RequestType } from '../enums/';\nimport { RequestPoolManager } from '../requestPool/requestPoolManager';\n\nclass CentralizedWorkerManager {\n  constructor() {\n    this.workerRegistry = {};\n    this.workerPoolManager = new RequestPoolManager('webworker');\n  }\n\n  /**\n   * Registers a new worker, it doesn't mean that the function will get executed.\n   *\n   * @param workerName - The name of the worker.\n   * @param workerFn - The function that creates a new instance of the worker.\n   * @param options - Optional parameters.\n   * @param options.maxWorkerInstances - The maximum number of instances of this worker that can be created.\n   * For instance if you create a worker with maxWorkerInstances = 2, then only 2 instances of this worker will be created\n   * and in case there are 10 tasks that need to be executed, each will get assigned 5 tasks.\n   * @param options.overwrite - Whether to overwrite the worker if it's already registered.\n   * @param options.autoTerminateOnIdle - Whether to automatically terminate idle workers.\n   */\n  registerWorker(workerName, workerFn, options = {}) {\n    const {\n      maxWorkerInstances = 1,\n      overwrite = false,\n      autoTerminateOnIdle = {\n        enabled: false,\n        idleTimeThreshold: 3000, // 3 seconds\n      },\n    } = options;\n\n    if (this.workerRegistry[workerName] && !overwrite) {\n      console.warn(`Worker type '${workerName}' is already registered...`);\n      return;\n    }\n\n    if (overwrite && this.workerRegistry[workerName]?.idleCheckIntervalId) {\n      clearInterval(this.workerRegistry[workerName].idleCheckIntervalId);\n    }\n\n    const workerProperties = {\n      workerFn: null,\n      instances: [],\n      loadCounters: [],\n      lastActiveTime: [],\n      // used for termination\n      nativeWorkers: [],\n      // auto termination\n      autoTerminateOnIdle: autoTerminateOnIdle.enabled,\n      idleCheckIntervalId: null,\n      idleTimeThreshold: autoTerminateOnIdle.idleTimeThreshold,\n    };\n\n    workerProperties.loadCounters = Array(maxWorkerInstances).fill(0);\n    workerProperties.lastActiveTime = Array(maxWorkerInstances).fill(null);\n\n    for (let i = 0; i < maxWorkerInstances; i++) {\n      const worker = workerFn();\n      workerProperties.instances.push(Comlink.wrap(worker));\n      workerProperties.nativeWorkers.push(worker);\n      workerProperties.workerFn = workerFn;\n    }\n\n    this.workerRegistry[workerName] = workerProperties;\n  }\n\n  getNextWorkerAPI(workerName) {\n    const workerProperties = this.workerRegistry[workerName];\n\n    if (!workerProperties) {\n      console.error(`Worker type '${workerName}' is not registered.`);\n      return null;\n    }\n\n    // Find the worker with the minimum load.\n    const workerInstances = workerProperties.instances.filter(\n      (instance) => instance !== null\n    );\n\n    let minLoadIndex = 0;\n    let minLoadValue = workerProperties.loadCounters[0] || 0;\n    for (let i = 1; i < workerInstances.length; i++) {\n      const currentLoadValue = workerProperties.loadCounters[i] || 0;\n      if (currentLoadValue < minLoadValue) {\n        minLoadIndex = i;\n        minLoadValue = currentLoadValue;\n      }\n    }\n\n    // Check and recreate the worker if it was terminated.\n    if (workerProperties.instances[minLoadIndex] === null) {\n      const worker = workerProperties.workerFn();\n      workerProperties.instances[minLoadIndex] = Comlink.wrap(worker);\n      workerProperties.nativeWorkers[minLoadIndex] = worker;\n    }\n\n    // Update the load counter.\n    workerProperties.loadCounters[minLoadIndex] += 1;\n\n    // return the worker that has the minimum load.\n    return {\n      api: workerProperties.instances[minLoadIndex],\n      index: minLoadIndex,\n    };\n  }\n\n  /**\n   * Executes a task on a worker.\n   *\n   * @param workerName - The name of the worker to execute the task on.\n   * @param methodName - The name of the method to execute on the worker.\n   * @param args - The arguments to pass to the method. Default is an array\n   * You should put your transferable objects in the first argument as object\n   * and from the second argument you can put your non-transferable objects such\n   * as functions, classes, etc.\n   * @param options - An object containing options for the request. Default is an empty object.\n   * @param options.requestType - The type of the request. Default is RequestType.Compute.\n   * @param options.priority - The priority of the request. Default is 0.\n   * @param options.options - Additional options for the request. Default is an empty object.\n   *\n   * @returns A promise that resolves with the result of the task.\n   */\n  executeTask(\n    workerName,\n    methodName,\n    args = {},\n    {\n      requestType = RequestType.Compute,\n      priority = 0,\n      options = {},\n      callbacks = [],\n    } = {}\n  ) {\n    return new Promise((resolve, reject) => {\n      const requestFn = async () => {\n        const { api, index } = this.getNextWorkerAPI(workerName);\n        if (!api) {\n          const error = new Error(\n            `No available worker instance for '${workerName}'`\n          );\n          console.error(error);\n          reject(error);\n          return;\n        }\n\n        try {\n          // fix if any of the args keys are a function then we need to proxy it\n          // for the worker to be able to call it\n          let finalCallbacks = [];\n          if (callbacks.length) {\n            finalCallbacks = callbacks.map((cb) => {\n              return Comlink.proxy(cb);\n            });\n          }\n          const workerProperties = this.workerRegistry[workerName];\n\n          workerProperties.processing = true;\n\n          const results = await api[methodName](args, ...finalCallbacks);\n\n          workerProperties.processing = false;\n          workerProperties.lastActiveTime[index] = Date.now();\n\n          // If auto termination is enabled and the interval is not set, set it.\n          if (\n            workerProperties.autoTerminateOnIdle &&\n            !workerProperties.idleCheckIntervalId &&\n            workerProperties.idleTimeThreshold\n          ) {\n            workerProperties.idleCheckIntervalId = setInterval(() => {\n              this.terminateIdleWorkers(\n                workerName,\n                workerProperties.idleTimeThreshold\n              );\n            }, workerProperties.idleTimeThreshold);\n          }\n\n          resolve(results);\n        } catch (err) {\n          console.error(\n            `Error executing method '${methodName}' on worker '${workerName}':`,\n            err\n          );\n          reject(err);\n        } finally {\n          this.workerRegistry[workerName].loadCounters[index]--;\n        }\n      };\n\n      // I believe there is a bug right now, where if there are two workers\n      // and one wants to run a compute job 6 times and the limit is just 5, then\n      // the other worker will never get a chance to run its compute job.\n      // we should probably have a separate limit for compute jobs per worker\n      // context as there is another layer of parallelism there.\n      this.workerPoolManager.addRequest(\n        requestFn,\n        requestType,\n        options,\n        priority\n      );\n    });\n  }\n\n  terminateIdleWorkers(workerName, idleTimeThreshold) {\n    const workerProperties = this.workerRegistry[workerName];\n\n    if (workerProperties.processing) {\n      return;\n    }\n\n    const now = Date.now();\n\n    workerProperties.instances.forEach((_, index) => {\n      const lastActiveTime = workerProperties.lastActiveTime[index];\n      const isWorkerActive =\n        lastActiveTime !== null && workerProperties.loadCounters[index] > 0;\n      const idleTime = now - lastActiveTime;\n\n      if (!isWorkerActive && idleTime > idleTimeThreshold) {\n        this.terminateWorkerInstance(workerName, index);\n      }\n    });\n  }\n\n  terminate(workerName) {\n    const workerProperties = this.workerRegistry[workerName];\n    if (!workerProperties) {\n      console.error(`Worker type '${workerName}' is not registered.`);\n      return;\n    }\n\n    workerProperties.instances.forEach((_, index) => {\n      this.terminateWorkerInstance(workerName, index);\n    });\n  }\n\n  // New method to handle individual worker termination\n  terminateWorkerInstance(workerName, index) {\n    const workerProperties = this.workerRegistry[workerName];\n    const workerInstance = workerProperties.instances[index];\n\n    if (workerInstance !== null) {\n      workerInstance[Comlink.releaseProxy]();\n      workerProperties.nativeWorkers[index].terminate();\n\n      // Set the worker instance to null after termination\n      workerProperties.instances[index] = null;\n      workerProperties.lastActiveTime[index] = null;\n    }\n  }\n}\n\nexport default CentralizedWorkerManager;\n","import { SVGCursorDescriptor } from '../types';\n\n/*\n * Definitions\n */\n\nconst BASE: SVGCursorDescriptor = {\n  iconContent: '',\n  iconSize: 16,\n  viewBox: {\n    x: 16,\n    y: 16,\n  },\n  mousePoint: {\n    x: 8,\n    y: 8,\n  },\n  mousePointerGroupString: `\n    <path stroke=\"{{color}}\" d=\"M8 16L8 0\"></path>\n    <path stroke=\"{{color}}\" d=\"M16 8L0 8\"></path>\n  `,\n};\n\nconst SEGMENTATION_CURSOR_BOUNDARIES = {\n  x: 127,\n  y: 60,\n};\n\nconst MINUS_RECT = `\n<rect fill=\"{{color}}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n`;\n\nconst PLUS_RECT = `\n<rect fill=\"{{color}}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n<rect fill=\"{{color}}\" x=\"95.84\" y=\"9.38\" width=\"15.85\" height=\"47.14\"/>\n`;\n\nconst SCISSOR_ICON = `<path fill=\"{{color}}\" d=\"M82.89,10a12.09,12.09,0,0,0-16.8-2.5l-27.5,20.4-8.5-6.3a2.93,2.93,0,0,1-1.1-3,14.66,14.66,0,0,0,.1-6.6,14.08,14.08,0,1,0-6.5,15.2,2.87,2.87,0,0,1,3.2.2l8.2,6.1-8.2,6.1a2.87,2.87,0,0,1-3.2.2,14.16,14.16,0,1,0,6.7,14.4,14,14,0,0,0-.3-5.8,2.93,2.93,0,0,1,1.1-3l8.5-6.3,27.5,20.4A11.91,11.91,0,0,0,82.89,57l-31.7-23.5ZM15.29,21a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,21Zm0,36.8a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,57.77Zm28.3-21.5a2.8,2.8,0,1,1,2.8-2.8A2.8,2.8,0,0,1,43.59,36.27Z\" transform=\"translate(-1.17 -0.96)\"/>`;\nconst RECTANGLE_ICON = `<path fill=\"{{color}}\" d=\"M8.86,2.25V66.08H72.69V2.25H8.86ZM65.28,58.67h-49v-49h49v49Z\" transform=\"translate(-8.86 -2.25)\"/>`;\nconst CIRCLE_ICON = `<path fill=\"{{color}}\" d=\"M40.77,2.25A31.92,31.92,0,1,0,72.69,34.16,31.92,31.92,0,0,0,40.77,2.25Zm0,57.63A25.71,25.71,0,1,1,66.48,34.16,25.71,25.71,0,0,1,40.77,59.87Z\" transform=\"translate(-8.86 -2.25)\"/>`;\n\nconst CursorSVG: Record<string, SVGCursorDescriptor> = {\n  Angle: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50\n    50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23\n    10l50 50q10 10 10 23z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  ArrowAnnotate: extend(BASE, {\n    iconContent: `<g id=\"arrowAnnotate-group\" fill=\"none\" stroke-width=\"1\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"arrowAnnotate-arrow\" d=\"M23,7 l-15,15 M7,17 l0,6 6,0\" stroke-width=\"2\" />\n  </g>`,\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }),\n  Bidirectional: extend(BASE, {\n    iconContent: `<g fill=\"{{color}}\" stroke-width=\"3\" stroke=\"{{color}}\">\n    <path d=\"M27.63 3.21L3.12 28.81\"></path>\n    <path d=\"M27.63 15.75L15.27 4.43\"></path>\n    <path d=\"M16.5 4.28C16.5 4.96 15.95 5.51 15.27 5.51C14.59 5.51 14.03 4.96 14.03 4.28C14.03 3.59 14.59 3.04 15.27 3.04C15.95 3.04 16.5 3.59 16.5 4.28Z\" ></path>\n    <path d=\"M28.87 3.19C28.87 3.87 28.31 4.43 27.63 4.43C26.95 4.43 26.4 3.87 26.4 3.19C26.4 2.51 26.95 1.95 27.63 1.95C28.31 1.95 28.87 2.51 28.87 3.19Z\"></path>\n    <path d=\"M28.87 15.75C28.87 16.43 28.31 16.99 27.63 16.99C26.95 16.99 26.4 16.43 26.4 15.75C26.4 15.07 26.95 14.51 27.63 14.51C28.31 14.51 28.87 15.07 28.87 15.75Z\"></path>\n    <path d=\"M4.73 28.44C4.73 29.12 4.17 29.68 3.49 29.68C2.81 29.68 2.25 29.12 2.25 28.44C2.25 27.76 2.81 27.2 3.49 27.2C4.17 27.2 4.73 27.76 4.73 28.44Z\"></path>\n  </g>`,\n    viewBox: {\n      x: 48,\n      y: 48,\n    },\n  }),\n  CobbAngle: extend(BASE, {\n    iconContent: `<g stroke=\"{{color}}\" stroke-width=\"3\">\n    <path d=\"M28.59 2.34L3.82 12.32\"></path>\n    <path d=\"M28.59 29.66L3.82 19.68\"></path>\n    <path stroke-dasharray=\"2\" fill-opacity=\"0\" d=\"M12.37\n      23.06C12.67 22.36 12.85 21.93 12.92 21.76C14.6 17.8 14.68 13.35 13.15\n      9.33C13.11 9.24 13.02 9 12.88 8.63\">\n    </path>\n  </g>`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  CircleROI: extend(BASE, {\n    iconContent: `<circle stroke=\"{{color}}\" fill=\"none\" stroke-width=\"3\" cx=\"16\" cy=\"16\" r=\"14\" />`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  EllipticalROI: extend(BASE, {\n    iconContent: `<path stroke=\"{{color}}\" fill=\"none\" stroke-width=\"3\" d=\"M30.74 15.76C30.74 20.99 24.14 25.23 16\n    25.23C7.86 25.23 1.26 20.99 1.26 15.76C1.26 10.54 7.86 6.3 16 6.3C24.14\n    6.3 30.74 10.54 30.74 15.76Z\" />`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  FreehandROI: extend(BASE, {\n    iconContent: `<g fill=\"{{color}}\" stroke=\"{{color}}\" stroke-width=\"2\">\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_3\" cy=\"4.240343\" cx=\"14.306499\"/>\n    <line id=\"svg_4\" y2=\"3.58462\" x2=\"12.242186\" y1=\"3.997482\" x1=\"13.432202\"/>\n    <line id=\"svg_5\" y2=\"3.268901\" x2=\"10.857882\" y1=\"3.608906\" x1=\"12.387902\"/>\n    <line id=\"svg_6\" y2=\"3.147471\" x2=\"9.740724\" y1=\"3.293187\" x1=\"10.955026\"/>\n    <line id=\"svg_7\" y2=\"3.147471\" x2=\"8.089274\" y1=\"3.196043\" x1=\"9.983585\"/>\n    <line id=\"svg_8\" y2=\"3.268901\" x2=\"6.874972\" y1=\"3.123185\" x1=\"8.307848\"/>\n    <line id=\"svg_9\" y2=\"3.657478\" x2=\"5.587812\" y1=\"3.220329\" x1=\"7.020688\"/>\n    <line id=\"svg_10\" y2=\"4.046054\" x2=\"4.737801\" y1=\"3.560334\" x1=\"5.854959\"/>\n    <line id=\"svg_11\" y2=\"4.337487\" x2=\"4.300652\" y1=\"3.997482\" x1=\"4.834945\"/>\n    <line id=\"svg_12\" y2=\"4.726063\" x2=\"3.88779\" y1=\"4.191771\" x1=\"4.470655\"/>\n    <line id=\"svg_15\" y2=\"5.3575\" x2=\"3.377783\" y1=\"4.604633\" x1=\"3.960648\"/>\n    <line id=\"svg_16\" y2=\"6.183226\" x2=\"2.916348\" y1=\"5.138926\" x1=\"3.547785\"/>\n    <line id=\"svg_17\" y2=\"6.960379\" x2=\"2.770632\" y1=\"5.867507\" x1=\"3.037779\"/>\n    <line id=\"svg_18\" y2=\"7.713246\" x2=\"2.673488\" y1=\"6.741804\" x1=\"2.819204\"/>\n    <line id=\"svg_19\" y2=\"8.684687\" x2=\"2.697774\" y1=\"7.616102\" x1=\"2.673488\"/>\n    <line id=\"svg_20\" y2=\"9.753273\" x2=\"2.892062\" y1=\"8.611829\" x1=\"2.697774\"/>\n    <line id=\"svg_21\" y2=\"10.724714\" x2=\"3.134923\" y1=\"9.534698\" x1=\"2.84349\"/>\n    <line id=\"svg_23\" y2=\"11.647583\" x2=\"3.596357\" y1=\"10.578998\" x1=\"3.086351\"/>\n    <line id=\"svg_25\" y2=\"12.521881\" x2=\"4.276366\" y1=\"11.501867\" x1=\"3.499213\"/>\n    <line id=\"svg_26\" y2=\"13.930471\" x2=\"5.830673\" y1=\"12.376165\" x1=\"4.13065\"/>\n    <line id=\"svg_28\" y2=\"14.707624\" x2=\"7.263549\" y1=\"13.881899\" x1=\"5.733528\"/>\n    <line id=\"svg_29\" y2=\"15.339061\" x2=\"8.963571\" y1=\"14.61048\" x1=\"7.06926\"/>\n    <line id=\"svg_30\" y2=\"15.581921\" x2=\"10.882168\" y1=\"15.314775\" x1=\"8.817855\"/>\n    <line id=\"svg_31\" y2=\"15.460491\" x2=\"12.023612\" y1=\"15.581921\" x1=\"10.785024\"/>\n    <line id=\"svg_33\" y2=\"15.120487\" x2=\"13.092197\" y1=\"15.484777\" x1=\"11.877895\"/>\n    <line id=\"svg_34\" y2=\"14.586194\" x2=\"13.86935\" y1=\"15.217631\" x1=\"12.897909\"/>\n    <line id=\"svg_35\" y2=\"13.833327\" x2=\"14.597931\" y1=\"14.756196\" x1=\"13.699348\"/>\n    <line id=\"svg_37\" y2=\"12.716169\" x2=\"15.180796\" y1=\"13.881899\" x1=\"14.549359\"/>\n    <line id=\"svg_39\" y2=\"11.429009\" x2=\"15.520801\" y1=\"12.813313\" x1=\"15.15651\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_40\" cy=\"10.967574\" cx=\"15.520801\"/>\n  </g>`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  FreehandROISculptor: extend(BASE, {\n    iconContent: `<g id=\"icon-freehand-sculpt\" fill=\"none\" stroke-width=\"1.5\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <line id=\"svg_1\" y2=\"2.559367\" x2=\"10.184807\" y1=\"4.467781\" x1=\"8.81711\"/>\n    <line id=\"svg_4\" y2=\"1.493836\" x2=\"11.727442\" y1=\"2.766112\" x1=\"10.089386\"/>\n    <line id=\"svg_7\" y2=\"1.080346\" x2=\"13.047428\" y1=\"1.748291\" x1=\"11.345759\"/>\n    <line id=\"svg_8\" y2=\"1.000829\" x2=\"14.351511\" y1=\"1.112153\" x1=\"12.77707\"/>\n    <line id=\"svg_9\" y2=\"1.350705\" x2=\"15.242104\" y1=\"0.905408\" x1=\"13.969828\"/>\n    <line id=\"svg_10\" y2=\"2.098167\" x2=\"15.862339\" y1=\"1.14396\" x1=\"14.955842\"/>\n    <line id=\"svg_11\" y2=\"3.195505\" x2=\"16.41896\" y1=\"1.939133\" x1=\"15.766918\"/>\n    <line id=\"svg_12\" y2=\"4.292843\" x2=\"16.530284\" y1=\"2.925147\" x1=\"16.387153\"/>\n    <line id=\"svg_16\" y2=\"5.644637\" x2=\"16.196311\" y1=\"3.831643\" x1=\"16.593898\"/>\n    <line id=\"svg_18\" y2=\"7.266789\" x2=\"15.623787\" y1=\"5.19934\" x1=\"16.275829\"/>\n    <line id=\"svg_19\" y2=\"10.813258\" x2=\"14.526449\" y1=\"6.726071\" x1=\"15.766918\"/>\n    <line id=\"svg_20\" y2=\"5.056209\" x2=\"8.085552\" y1=\"4.181519\" x1=\"8.976145\"/>\n    <line id=\"svg_23\" y2=\"5.326568\" x2=\"7.481221\" y1=\"4.78585\" x1=\"8.403621\"/>\n    <line id=\"svg_24\" y2=\"5.565119\" x2=\"6.749662\" y1=\"5.294761\" x1=\"7.624352\"/>\n    <line id=\"svg_25\" y2=\"5.994512\" x2=\"5.429675\" y1=\"5.533312\" x1=\"6.956407\"/>\n    <line id=\"svg_27\" y2=\"6.551133\" x2=\"4.284627\" y1=\"5.962706\" x1=\"5.572807\"/>\n    <line id=\"svg_28\" y2=\"7.584858\" x2=\"3.044158\" y1=\"6.392099\" x1=\"4.427758\"/>\n    <line id=\"svg_29\" y2=\"8.84123\" x2=\"2.185372\" y1=\"7.489437\" x1=\"3.219096\"/>\n    <line id=\"svg_31\" y2=\"10.606513\" x2=\"1.644654\" y1=\"8.602678\" x1=\"2.280792\"/>\n    <line id=\"svg_32\" y2=\"13.214679\" x2=\"1.48562\" y1=\"10.352058\" x1=\"1.724171\"/>\n    <line id=\"svg_33\" y2=\"14.375631\" x2=\"1.676461\" y1=\"12.992031\" x1=\"1.453813\"/>\n    <line id=\"svg_34\" y2=\"15.298031\" x2=\"2.264889\" y1=\"14.152983\" x1=\"1.517427\"/>\n    <line id=\"svg_35\" y2=\"16.172721\" x2=\"3.521261\" y1=\"14.948155\" x1=\"1.915013\"/>\n    <line id=\"svg_36\" y2=\"16.824762\" x2=\"5.207027\" y1=\"15.997783\" x1=\"3.28271\"/>\n    <line id=\"svg_38\" y2=\"17.063314\" x2=\"7.035924\" y1=\"16.745245\" x1=\"4.968475\"/>\n    <line id=\"svg_39\" y2=\"16.888376\" x2=\"9.278311\" y1=\"17.047411\" x1=\"6.733758\"/>\n    <line id=\"svg_40\" y2=\"16.284045\" x2=\"10.661911\" y1=\"16.983797\" x1=\"8.992048\"/>\n    <line id=\"svg_41\" y2=\"15.313934\" x2=\"11.647925\" y1=\"16.395369\" x1=\"10.455166\"/>\n    <line id=\"svg_44\" y2=\"13.898527\" x2=\"12.82478\" y1=\"15.425259\" x1=\"11.504794\"/>\n    <line id=\"svg_45\" y2=\"12.037824\" x2=\"14.144766\" y1=\"14.312017\" x1=\"12.522614\"/>\n    <line id=\"svg_47\" y2=\"10.59061\" x2=\"14.605966\" y1=\"12.228665\" x1=\"13.953925\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_48\" cy=\"3.982726\" cx=\"13.460918\"/>\n  </g>`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  Length: extend(BASE, {\n    iconContent: `<g id=\"length-group\" fill=\"none\" stroke-width=\"1\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"length-dashes\" d=\"m22.5,6 -16.5,16.5\" stroke-width=\"3\" stroke-dasharray=\"0.6666,5\" />\n  </g>`,\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }),\n  Height: extend(BASE, {\n    iconContent: `<path d=\"m 6 22 l 8.5 0 v -16 h 8\" stroke-width=\"3\" fill=\"none\" stroke=\"{{color}}\" />`,\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }),\n  Probe: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1152 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75\n    75 181zm-256-544q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73\n    198-198 73-273-73-273-198-198-273-73zm768 544q0 209-103 385.5t-279.5\n    279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5\n    385.5-103 385.5 103 279.5 279.5 103 385.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  RectangleROI: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1312 256h-832q-66 0-113 47t-47 113v832q0 66 47\n    113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zm288 160v832q0\n    119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119\n    84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  TextMarker: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M789 559l-170 450q33 0 136.5 2t160.5 2q19 0\n    57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29\n    31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15\n    34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-.5\n    13.5t-.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0\n    12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11\n    2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0\n    22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58\n    0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Crosshairs: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1325 1024h-109q-26 0-45-19t-19-45v-128q0-26\n    19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45\n    19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26\n    0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5\n    112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32\n    188.5-112.5t112.5-188.5zm339-192v128q0 26-19 45t-45 19h-143q-37 161-154.5\n    278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26\n    0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26\n    0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161\n    154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161\n    37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Eraser: extend(BASE, {\n    iconContent: `<path transform=\"translate(0,1792) scale(1,-1)\" fill=\"{{color}}\" d=\"M960 1408l336-384h-768l-336 384h768zm1013-1077q15\n    34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38\n    0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38\n    0 69.5 20.5t47.5 54.5z\" />`,\n    viewBox: {\n      x: 2048,\n      y: 1792,\n    },\n  }),\n  Magnify: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n    312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n    0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n    0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n    32s176 78.7 176 176-78.7 176-176 176z\" />`,\n    viewBox: {\n      x: 512,\n      y: 512,\n    },\n  }),\n  Pan: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1411 541l-355 355 355 355 144-144q29-31 70-14 39 17\n    39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355\n    355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59\n    39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12\n    0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144\n    144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19\n    45v448q0 42-39 59-13 5-25 5-26 0-45-19z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Rotate: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39\n    14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5\n    163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0\n    225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109\n    132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298\n    164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14\n    39 17 39 59z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  StackScroll: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M24 21v2c0 0.547-0.453 1-1 1h-22c-0.547\n    0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1zM24 13v2c0\n    0.547-0.453 1-1 1h-22c-0.547 0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547\n    0 1 0.453 1 1zM24 5v2c0 0.547-0.453 1-1 1h-22c-0.547\n    0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1z\" />`,\n    viewBox: {\n      x: 24,\n      y: 28,\n    },\n  }),\n  WindowLevelRegion: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1664 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119\n    0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5\n    84.5t84.5 203.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  WindowLevel: extend(BASE, {\n    iconContent: `\n    <path fill=\"{{color}}\" d=\"M14.5,3.5 a1 1 0 0 1 -11,11 Z\" stroke=\"none\" opacity=\"0.8\" />\n    <circle cx=\"9\" cy=\"9\" r=\"8\" fill=\"none\" stroke-width=\"2\" stroke=\"{{color}}\" />`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  Zoom: extend(BASE, {\n    iconContent: `\n  <path fill=\"{{color}}\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n    312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n    0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n    0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n    32s176 78.7 176 176-78.7 176-176 176z\" />\n  <path fill=\"{{color}}\" transform=\"scale(0.22,0.22) translate(1400,0)\" d=\"M1216\n    320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19\n    19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26\n    0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\" />`,\n    viewBox: {\n      x: 640,\n      y: 512,\n    },\n  }),\n\n  /*\n   * Segmentation Cursors\n   */\n\n  SegmentationFreeHandEraseInside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandFillInside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandEraseOutside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandFillOutside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationRectangleEraseInside: extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  // Default Rectangle Scissors\n  RectangleScissor: extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.FILL_INSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.FILL_OUTSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.ERASE_OUTSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.ERASE_INSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  CircleScissor: extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.FILL_INSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.ERASE_OUTSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.FILL_OUTSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n};\n\n/*\n * Utils\n */\n\nfunction extend(\n  base: SVGCursorDescriptor,\n  values: Record<string, unknown>\n): SVGCursorDescriptor {\n  return Object.assign(Object.create(base), values);\n}\n\n/**\n * Registers a cursor to the list, so that it will be used for the given `toolName`.\n * Overwrites the given cursor if it is already set.\n *\n * @param toolName - The name of the tool to assign a cursor to.\n * @param iconContent - The SVG icon content of the cursor.\n * @param viewBox - The viewBox of the cursor object.\n */\nfunction registerCursor(\n  toolName: string,\n  iconContent: string,\n  viewBox: { x: number; y: number }\n) {\n  CursorSVG[toolName] = extend(BASE, {\n    iconContent,\n    viewBox,\n  });\n}\n\nfunction getDefinedSVGCursorDescriptor(\n  name: string\n): SVGCursorDescriptor | undefined {\n  return CursorSVG[name];\n}\n\n/*\n * Exports\n */\nconst svgCursorNames = Object.keys(CursorSVG);\n\nexport {\n  getDefinedSVGCursorDescriptor,\n  registerCursor,\n  svgCursorNames,\n  CursorSVG,\n};\n","import { vec2, vec3 } from 'gl-matrix';\nimport { getEnabledElement, utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { getCalibratedLengthUnitsAndScale } from '../../utilities/getCalibratedUnits';\nimport { roundNumber } from '../../utilities';\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  triggerAnnotationCompleted,\n  triggerAnnotationModified,\n} from '../../stateManagement/annotation/helpers/state';\nimport {\n  drawLine as drawLineSvg,\n  drawHandles as drawHandlesSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport * as lineSegment from '../../utilities/math/line';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  PublicToolProps,\n  ToolProps,\n  SVGDrawingHelper,\n} from '../../types';\nimport { BidirectionalAnnotation } from '../../types/ToolSpecificAnnotationTypes';\n\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * BidirectionalTool let you draw annotations that measures the length and\n * width at the same time in `mm` unit. It is consisted of two perpendicular lines and\n * a text box. You can use the BidirectionalTool in all planes even in oblique\n * reconstructed planes. Note: annotation tools in cornerstone3DTools exists in the exact location\n * in the physical 3d space, as a result, by default, all annotations that are\n * drawing in the same frameOfReference will get shared between viewports that\n * are in the same frameOfReference.\n *\n * The resulting annotation's data (statistics) and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * ```js\n * cornerstoneTools.addTool(BidirectionalTool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(BidirectionalTool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(BidirectionalTool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n * ```\n *\n * Read more in the Docs section of the website.\n */\n\nclass BidirectionalTool extends AnnotationTool {\n  static toolName;\n\n  touchDragCallback: any;\n  mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n  preventHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        preventHandleOutsideImage: false,\n        getTextLines: defaultGetTextLines,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a Bidirectional Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation(\n    evt: EventTypes.InteractionEventType\n  ): BidirectionalAnnotation {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation: BidirectionalAnnotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        ...viewport.getViewReference({ points: [worldPos] }),\n      },\n      data: {\n        handles: {\n          points: [\n            // long\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            // short\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n          activeHandleIndex: null,\n        },\n        label: '',\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 1,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  }\n\n  /**\n   * It returns if the canvas point is near the provided annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: BidirectionalAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { data } = annotation;\n    const { points } = data.handles;\n\n    // Check long axis\n    let canvasPoint1 = viewport.worldToCanvas(points[0]);\n    let canvasPoint2 = viewport.worldToCanvas(points[1]);\n\n    let line = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    let distanceToPoint = lineSegment.distanceToPoint(\n      [line.start.x, line.start.y],\n      [line.end.x, line.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    // Check short axis\n    canvasPoint1 = viewport.worldToCanvas(points[2]);\n    canvasPoint2 = viewport.worldToCanvas(points[3]);\n\n    line = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    distanceToPoint = lineSegment.distanceToPoint(\n      [line.start.x, line.start.y],\n      [line.end.x, line.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * Handles the toolSelected callback for bidirectional tool\n   * @param evt - EventTypes.MouseDownEventType\n   * @param annotation - Bidirectional annotation\n   * @param interactionType - interaction type (mouse, touch)\n   */\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: BidirectionalAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    this._activateModify(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n  };\n\n  /**\n   * Executes the callback for when mouse has selected a handle (anchor point) of\n   * the bidirectional tool or when the text box has been selected.\n   *\n   * @param evt - EventTypes.MouseDownEventType\n   * @param annotation - Bidirectional annotation\n   * @param handle - Handle index or selected textBox information\n   * @param interactionType - interaction type (mouse, touch)\n   */\n  handleSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: BidirectionalAnnotation,\n    handle: ToolHandle\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const data = annotation.data;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      handleIndex = data.handles.points.findIndex((p) => p === handle);\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    hideElementCursor(element);\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  /**\n   * Handles the mouse up action for the bidirectional tool. It can be at the end\n   * of the annotation drawing (MouseUpEventType) or when the user clicks and release\n   * the mouse button instantly which let to the annotation to draw without holding\n   * the mouse button (MouseClickEventType).\n   *\n   * @param evt - mouse up or mouse click event types\n   */\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const { renderingEngine } = getEnabledElement(element);\n\n    if (this.editData.handleIndex !== undefined) {\n      const { points } = data.handles;\n      const firstLineSegmentLength = vec3.distance(points[0], points[1]);\n      const secondLineSegmentLength = vec3.distance(points[2], points[3]);\n\n      if (secondLineSegmentLength > firstLineSegmentLength) {\n        // Switch points so [0,1] is the long axis and [2,3] is the short axis.\n\n        const longAxis = [[...points[2]], [...points[3]]];\n\n        const shortAxisPoint0 = [...points[0]];\n        const shortAxisPoint1 = [...points[1]];\n\n        // shortAxis[0->1] should be perpendicular (counter-clockwise) to longAxis[0->1]\n        const longAxisVector = vec2.create();\n\n        vec2.set(\n          longAxisVector,\n          longAxis[1][0] - longAxis[0][0],\n          longAxis[1][1] - longAxis[1][0]\n        );\n\n        const counterClockWisePerpendicularToLongAxis = vec2.create();\n\n        vec2.set(\n          counterClockWisePerpendicularToLongAxis,\n          -longAxisVector[1],\n          longAxisVector[0]\n        );\n\n        const currentShortAxisVector = vec2.create();\n\n        vec2.set(\n          currentShortAxisVector,\n          shortAxisPoint1[0] - shortAxisPoint0[0],\n          shortAxisPoint1[1] - shortAxisPoint0[0]\n        );\n\n        let shortAxis;\n\n        if (\n          vec2.dot(\n            currentShortAxisVector,\n            counterClockWisePerpendicularToLongAxis\n          ) > 0\n        ) {\n          shortAxis = [shortAxisPoint0, shortAxisPoint1];\n        } else {\n          shortAxis = [shortAxisPoint1, shortAxisPoint0];\n        }\n\n        data.handles.points = [\n          longAxis[0],\n          longAxis[1],\n          shortAxis[0],\n          shortAxis[1],\n        ];\n      }\n    }\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      triggerAnnotationCompleted(annotation);\n    }\n\n    this.editData = null;\n    this.isDrawing = false;\n  };\n\n  /**\n   * @param evt - mouse move event type or mouse drag\n   */\n  _dragDrawCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { worldToCanvas } = viewport;\n    const { annotation, viewportIdsToRender, handleIndex } = this.editData;\n    const { data } = annotation;\n\n    const worldPos = currentPoints.world;\n\n    // Update first move handle\n    data.handles.points[handleIndex] = [...worldPos];\n\n    const canvasCoordPoints = data.handles.points.map(worldToCanvas);\n\n    const canvasCoords = {\n      longLineSegment: {\n        start: {\n          x: canvasCoordPoints[0][0],\n          y: canvasCoordPoints[0][1],\n        },\n        end: {\n          x: canvasCoordPoints[1][0],\n          y: canvasCoordPoints[1][1],\n        },\n      },\n      shortLineSegment: {\n        start: {\n          x: canvasCoordPoints[2][0],\n          y: canvasCoordPoints[2][1],\n        },\n        end: {\n          x: canvasCoordPoints[3][0],\n          y: canvasCoordPoints[3][1],\n        },\n      },\n    };\n\n    // ~~ calculate worldPos of our short axis handles\n    // short axis is perpendicular to long axis, and we set its length to be 2/3 of long axis\n    // (meaning each)\n    const dist = vec2.distance(canvasCoordPoints[0], canvasCoordPoints[1]);\n\n    const shortAxisDistFromCenter = dist / 3;\n    // Calculate long line's incline\n    const dx =\n      canvasCoords.longLineSegment.start.x - canvasCoords.longLineSegment.end.x;\n    const dy =\n      canvasCoords.longLineSegment.start.y - canvasCoords.longLineSegment.end.y;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const vectorX = dx / length;\n    const vectorY = dy / length;\n    // middle point between long line segment's points\n    const xMid =\n      (canvasCoords.longLineSegment.start.x +\n        canvasCoords.longLineSegment.end.x) /\n      2;\n    const yMid =\n      (canvasCoords.longLineSegment.start.y +\n        canvasCoords.longLineSegment.end.y) /\n      2;\n    // short points 1/3 distance from center of long points\n    const startX = xMid + shortAxisDistFromCenter * vectorY;\n    const startY = yMid - shortAxisDistFromCenter * vectorX;\n    const endX = xMid - shortAxisDistFromCenter * vectorY;\n    const endY = yMid + shortAxisDistFromCenter * vectorX;\n\n    // Update perpendicular line segment's points\n    data.handles.points[2] = viewport.canvasToWorld([startX, startY]);\n    data.handles.points[3] = viewport.canvasToWorld([endX, endY]);\n\n    annotation.invalidated = true;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    this.editData.hasMoved = true;\n  };\n\n  /**\n   * Mouse drag to edit annotation callback\n   * @param evt - mouse drag event\n   */\n  _dragModifyCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n    if (movingTextBox) {\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Moving tool\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n      const points = data.handles.points;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      this._dragModifyHandle(evt);\n      annotation.invalidated = true;\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  /**\n   * Mouse dragging a handle callback\n   * @param evt - mouse drag event\n   */\n  _dragModifyHandle = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { annotation, handleIndex: movingHandleIndex } = this.editData;\n    const { data } = annotation;\n\n    // Moving handle\n    const worldPos = currentPoints.world;\n    const canvasCoordHandlesCurrent = [\n      viewport.worldToCanvas(data.handles.points[0]),\n      viewport.worldToCanvas(data.handles.points[1]),\n      viewport.worldToCanvas(data.handles.points[2]),\n      viewport.worldToCanvas(data.handles.points[3]),\n    ];\n\n    const firstLineSegment = {\n      start: {\n        x: canvasCoordHandlesCurrent[0][0],\n        y: canvasCoordHandlesCurrent[0][1],\n      },\n      end: {\n        x: canvasCoordHandlesCurrent[1][0],\n        y: canvasCoordHandlesCurrent[1][1],\n      },\n    };\n    const secondLineSegment = {\n      start: {\n        x: canvasCoordHandlesCurrent[2][0],\n        y: canvasCoordHandlesCurrent[2][1],\n      },\n      end: {\n        x: canvasCoordHandlesCurrent[3][0],\n        y: canvasCoordHandlesCurrent[3][1],\n      },\n    };\n\n    // Handle we've selected's proposed point\n    const proposedPoint = <Types.Point3>[...worldPos];\n    const proposedCanvasCoord = viewport.worldToCanvas(proposedPoint);\n\n    if (movingHandleIndex === 0 || movingHandleIndex === 1) {\n      const fixedHandleIndex = movingHandleIndex === 0 ? 1 : 0;\n\n      const fixedHandleCanvasCoord =\n        canvasCoordHandlesCurrent[fixedHandleIndex];\n\n      const fixedHandleToProposedCoordVec = vec2.set(\n        vec2.create(),\n        proposedCanvasCoord[0] - fixedHandleCanvasCoord[0],\n        proposedCanvasCoord[1] - fixedHandleCanvasCoord[1]\n      );\n\n      const fixedHandleToOldCoordVec = vec2.set(\n        vec2.create(),\n        canvasCoordHandlesCurrent[movingHandleIndex][0] -\n          fixedHandleCanvasCoord[0],\n        canvasCoordHandlesCurrent[movingHandleIndex][1] -\n          fixedHandleCanvasCoord[1]\n      );\n\n      // normalize vector\n      vec2.normalize(\n        fixedHandleToProposedCoordVec,\n        fixedHandleToProposedCoordVec\n      );\n      vec2.normalize(fixedHandleToOldCoordVec, fixedHandleToOldCoordVec);\n\n      // Check whether this\n      const proposedFirstLineSegment = {\n        start: {\n          x: fixedHandleCanvasCoord[0],\n          y: fixedHandleCanvasCoord[1],\n        },\n        end: {\n          x: proposedCanvasCoord[0],\n          y: proposedCanvasCoord[1],\n        },\n      };\n\n      // Note: this is the case when we are modifying the long axis line segment\n      // and we make it shorter and shorter until its second half size becomes zero\n      // which basically means that any more modification would make the long axis\n      // second half disappear. In this case, we just bail out and do not update\n      // since we don't want to disrupt the bidirectional shape.\n      if (\n        this._movingLongAxisWouldPutItThroughShortAxis(\n          proposedFirstLineSegment,\n          secondLineSegment\n        )\n      ) {\n        return;\n      }\n\n      const centerOfRotation = fixedHandleCanvasCoord;\n\n      const angle = this._getSignedAngle(\n        fixedHandleToOldCoordVec,\n        fixedHandleToProposedCoordVec\n      );\n\n      // rotate handles around the center of rotation, first translate to origin,\n      // then rotate, then translate back\n      let firstPointX = canvasCoordHandlesCurrent[2][0];\n      let firstPointY = canvasCoordHandlesCurrent[2][1];\n\n      let secondPointX = canvasCoordHandlesCurrent[3][0];\n      let secondPointY = canvasCoordHandlesCurrent[3][1];\n\n      // translate to origin\n      firstPointX -= centerOfRotation[0];\n      firstPointY -= centerOfRotation[1];\n\n      secondPointX -= centerOfRotation[0];\n      secondPointY -= centerOfRotation[1];\n\n      // rotate\n      const rotatedFirstPoint =\n        firstPointX * Math.cos(angle) - firstPointY * Math.sin(angle);\n      const rotatedFirstPointY =\n        firstPointX * Math.sin(angle) + firstPointY * Math.cos(angle);\n\n      const rotatedSecondPoint =\n        secondPointX * Math.cos(angle) - secondPointY * Math.sin(angle);\n      const rotatedSecondPointY =\n        secondPointX * Math.sin(angle) + secondPointY * Math.cos(angle);\n\n      // translate back\n      firstPointX = rotatedFirstPoint + centerOfRotation[0];\n      firstPointY = rotatedFirstPointY + centerOfRotation[1];\n\n      secondPointX = rotatedSecondPoint + centerOfRotation[0];\n      secondPointY = rotatedSecondPointY + centerOfRotation[1];\n\n      // update handles\n      const newFirstPoint = viewport.canvasToWorld([firstPointX, firstPointY]);\n      const newSecondPoint = viewport.canvasToWorld([\n        secondPointX,\n        secondPointY,\n      ]);\n\n      // the fixed handle is the one that is not being moved so we\n      // don't need to update it\n      data.handles.points[movingHandleIndex] = proposedPoint;\n      data.handles.points[2] = newFirstPoint;\n      data.handles.points[3] = newSecondPoint;\n    } else {\n      // Translation manipulator\n      const translateHandleIndex = movingHandleIndex === 2 ? 3 : 2;\n\n      const canvasCoordsCurrent = {\n        longLineSegment: {\n          start: firstLineSegment.start,\n          end: firstLineSegment.end,\n        },\n        shortLineSegment: {\n          start: secondLineSegment.start,\n          end: secondLineSegment.end,\n        },\n      };\n\n      const longLineSegmentVec = vec2.subtract(\n        vec2.create(),\n        [\n          canvasCoordsCurrent.longLineSegment.end.x,\n          canvasCoordsCurrent.longLineSegment.end.y,\n        ],\n        [\n          canvasCoordsCurrent.longLineSegment.start.x,\n          canvasCoordsCurrent.longLineSegment.start.y,\n        ]\n      );\n\n      const longLineSegmentVecNormalized = vec2.normalize(\n        vec2.create(),\n        longLineSegmentVec\n      );\n\n      const proposedToCurrentVec = vec2.subtract(\n        vec2.create(),\n        [proposedCanvasCoord[0], proposedCanvasCoord[1]],\n        [\n          canvasCoordHandlesCurrent[movingHandleIndex][0],\n          canvasCoordHandlesCurrent[movingHandleIndex][1],\n        ]\n      );\n\n      const movementLength = vec2.length(proposedToCurrentVec);\n\n      const angle = this._getSignedAngle(\n        longLineSegmentVecNormalized,\n        proposedToCurrentVec\n      );\n\n      const movementAlongLineSegmentLength = Math.cos(angle) * movementLength;\n\n      const newTranslatedPoint = vec2.scaleAndAdd(\n        vec2.create(),\n        [\n          canvasCoordHandlesCurrent[translateHandleIndex][0],\n          canvasCoordHandlesCurrent[translateHandleIndex][1],\n        ],\n        longLineSegmentVecNormalized,\n        movementAlongLineSegmentLength\n      );\n\n      // don't update if it passes through the other line segment\n      if (\n        this._movingLongAxisWouldPutItThroughShortAxis(\n          {\n            start: {\n              x: proposedCanvasCoord[0],\n              y: proposedCanvasCoord[1],\n            },\n            end: {\n              x: newTranslatedPoint[0],\n              y: newTranslatedPoint[1],\n            },\n          },\n          {\n            start: {\n              x: canvasCoordsCurrent.longLineSegment.start.x,\n              y: canvasCoordsCurrent.longLineSegment.start.y,\n            },\n            end: {\n              x: canvasCoordsCurrent.longLineSegment.end.x,\n              y: canvasCoordsCurrent.longLineSegment.end.y,\n            },\n          }\n        )\n      ) {\n        return;\n      }\n\n      const intersectionPoint = lineSegment.intersectLine(\n        [proposedCanvasCoord[0], proposedCanvasCoord[1]],\n        [newTranslatedPoint[0], newTranslatedPoint[1]],\n        [firstLineSegment.start.x, firstLineSegment.start.y],\n        [firstLineSegment.end.x, firstLineSegment.end.y]\n      );\n\n      // don't update if it doesn't intersect\n      if (!intersectionPoint) {\n        return;\n      }\n\n      data.handles.points[translateHandleIndex] = viewport.canvasToWorld(\n        newTranslatedPoint as Types.Point2\n      );\n      data.handles.points[movingHandleIndex] = proposedPoint;\n    }\n  };\n\n  /**\n   * Cancels an ongoing drawing of a bidirectional annotation\n   * @param element - HTML Element\n   */\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const { renderingEngine } = getEnabledElement(element);\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        triggerAnnotationCompleted(annotation);\n      }\n\n      this.editData = null;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateDraw = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragDrawCallback as EventListener\n    );\n  };\n\n  _deactivateDraw = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragDrawCallback as EventListener\n    );\n  };\n\n  _activateModify = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragModifyCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  _deactivateModify = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragModifyCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  /**\n   * it is used to draw the bidirectional annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = true;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as BidirectionalAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const { color, lineWidth, lineDash, shadow } = this.getAnnotationStyle({\n        annotation,\n        styleSpecifier,\n      });\n\n      // If cachedStats does not exist, or the unit is missing (as part of import/hydration etc.),\n      // force to recalculate the stats from the points\n      if (\n        !data.cachedStats[targetId] ||\n        data.cachedStats[targetId].unit == null\n      ) {\n        data.cachedStats[targetId] = {\n          length: null,\n          width: null,\n          unit: null,\n        };\n\n        this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          renderingEngine,\n          enabledElement\n        );\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const dataId1 = `${annotationUID}-line-1`;\n      const dataId2 = `${annotationUID}-line-2`;\n\n      const lineUID = '0';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        lineUID,\n        canvasCoordinates[0],\n        canvasCoordinates[1],\n        {\n          color,\n          lineDash,\n          lineWidth,\n          shadow,\n        },\n        dataId1\n      );\n\n      const secondLineUID = '1';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        secondLineUID,\n        canvasCoordinates[2],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash,\n          lineWidth,\n          shadow,\n        },\n        dataId2\n      );\n\n      renderStatus = true;\n\n      const options = this.getLinkedTextBoxStyle(styleSpecifier, annotation);\n      if (!options.visibility) {\n        data.handles.textBox = {\n          hasMoved: false,\n          worldPosition: <Types.Point3>[0, 0, 0],\n          worldBoundingBox: {\n            topLeft: <Types.Point3>[0, 0, 0],\n            topRight: <Types.Point3>[0, 0, 0],\n            bottomLeft: <Types.Point3>[0, 0, 0],\n            bottomRight: <Types.Point3>[0, 0, 0],\n          },\n        };\n        continue;\n      }\n\n      const textLines = this.configuration.getTextLines(data, targetId);\n      if (!textLines || textLines.length === 0) {\n        continue;\n      }\n\n      let canvasTextBoxCoords;\n\n      if (!data.handles.textBox.hasMoved) {\n        canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        textLines,\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        options\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  _movingLongAxisWouldPutItThroughShortAxis = (\n    firstLineSegment,\n    secondLineSegment\n  ) => {\n    const vectorInSecondLineDirection = vec2.create();\n\n    vec2.set(\n      vectorInSecondLineDirection,\n      secondLineSegment.end.x - secondLineSegment.start.x,\n      secondLineSegment.end.y - secondLineSegment.start.y\n    );\n\n    vec2.normalize(vectorInSecondLineDirection, vectorInSecondLineDirection);\n\n    const extendedSecondLineSegment = {\n      start: {\n        x: secondLineSegment.start.x - vectorInSecondLineDirection[0] * 10,\n        y: secondLineSegment.start.y - vectorInSecondLineDirection[1] * 10,\n      },\n      end: {\n        x: secondLineSegment.end.x + vectorInSecondLineDirection[0] * 10,\n        y: secondLineSegment.end.y + vectorInSecondLineDirection[1] * 10,\n      },\n    };\n\n    // Add some buffer in the secondLineSegment when finding the proposedIntersectionPoint\n    // Of points to stop us getting stack when rotating quickly.\n\n    const proposedIntersectionPoint = lineSegment.intersectLine(\n      [extendedSecondLineSegment.start.x, extendedSecondLineSegment.start.y],\n      [extendedSecondLineSegment.end.x, extendedSecondLineSegment.end.y],\n      [firstLineSegment.start.x, firstLineSegment.start.y],\n      [firstLineSegment.end.x, firstLineSegment.end.y]\n    );\n\n    const wouldPutThroughShortAxis = !proposedIntersectionPoint;\n\n    return wouldPutThroughShortAxis;\n  };\n\n  _calculateLength(pos1, pos2) {\n    const dx = pos1[0] - pos2[0];\n    const dy = pos1[1] - pos2[1];\n    const dz = pos1[2] - pos2[2];\n\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n  }\n\n  _calculateCachedStats = (annotation, renderingEngine, enabledElement) => {\n    const { data } = annotation;\n    const { element } = enabledElement.viewport;\n\n    const worldPos1 = data.handles.points[0];\n    const worldPos2 = data.handles.points[1];\n    const worldPos3 = data.handles.points[2];\n    const worldPos4 = data.handles.points[3];\n\n    const { cachedStats } = data;\n    const targetIds = Object.keys(cachedStats);\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { imageData, dimensions } = image;\n      const index1 = transformWorldToIndex(imageData, worldPos1);\n      const index2 = transformWorldToIndex(imageData, worldPos2);\n      const index3 = transformWorldToIndex(imageData, worldPos3);\n      const index4 = transformWorldToIndex(imageData, worldPos4);\n\n      const handles1 = [index1, index2];\n      const handles2 = [index3, index4];\n\n      const { scale: scale1, units: units1 } = getCalibratedLengthUnitsAndScale(\n        image,\n        handles1\n      );\n\n      const { scale: scale2, units: units2 } = getCalibratedLengthUnitsAndScale(\n        image,\n        handles2\n      );\n\n      const dist1 = this._calculateLength(worldPos1, worldPos2) / scale1;\n      const dist2 = this._calculateLength(worldPos3, worldPos4) / scale2;\n      const length = dist1 > dist2 ? dist1 : dist2;\n      const width = dist1 > dist2 ? dist2 : dist1;\n\n      const lengthUnit = dist1 > dist2 ? units1 : units2;\n      const widthUnit = dist1 > dist2 ? units2 : units1;\n\n      this._isInsideVolume(index1, index2, index3, index4, dimensions)\n        ? (this.isHandleOutsideImage = false)\n        : (this.isHandleOutsideImage = true);\n\n      cachedStats[targetId] = {\n        length,\n        width,\n        unit: units1,\n        lengthUnit,\n        widthUnit,\n      };\n    }\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    triggerAnnotationModified(annotation, element);\n\n    return cachedStats;\n  };\n\n  _isInsideVolume = (index1, index2, index3, index4, dimensions): boolean => {\n    return (\n      csUtils.indexWithinDimensions(index1, dimensions) &&\n      csUtils.indexWithinDimensions(index2, dimensions) &&\n      csUtils.indexWithinDimensions(index3, dimensions) &&\n      csUtils.indexWithinDimensions(index4, dimensions)\n    );\n  };\n\n  _getSignedAngle = (vector1, vector2) => {\n    return Math.atan2(\n      vector1[0] * vector2[1] - vector1[1] * vector2[0],\n      vector1[0] * vector2[0] + vector1[1] * vector2[1]\n    );\n  };\n}\n\nfunction defaultGetTextLines(data, targetId): string[] {\n  const { cachedStats, label } = data;\n  const { length, width, unit, lengthUnit, widthUnit } = cachedStats[targetId];\n\n  const textLines = [];\n  if (label) {\n    textLines.push(label);\n  }\n  if (length === undefined) {\n    return textLines;\n  }\n\n  // spaceBetweenSlices & pixelSpacing &\n  // magnitude in each direction? Otherwise, this is \"px\"?\n  textLines.push(\n    `L: ${roundNumber(length)} ${lengthUnit || unit}`,\n    `W: ${roundNumber(width)} ${widthUnit || unit}`\n  );\n\n  return textLines;\n}\n\nBidirectionalTool.toolName = 'Bidirectional';\nexport default BidirectionalTool;\n","import {\n  BaseVolumeViewport,\n  cache,\n  getEnabledElement,\n  metaData,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { vec2 } from 'gl-matrix';\n\nimport AnnotationDisplayTool from './AnnotationDisplayTool';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  Annotation,\n  Annotations,\n  EventTypes,\n  ToolHandle,\n  InteractionTypes,\n  ToolProps,\n  PublicToolProps,\n} from '../../types';\nimport { addAnnotation } from '../../stateManagement/annotation/annotationState';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\nimport { triggerAnnotationModified } from '../../stateManagement/annotation/helpers/state';\n\n/**\n * Abstract class for tools which create and display annotations on the\n * cornerstone3D canvas. In addition, it provides a base class for segmentation\n * tools that require drawing an annotation before running the segmentation strategy\n * for instance threshold segmentation based on an area and a threshold.\n * Annotation tools make use of drawing utilities to draw SVG elements on the viewport.\n *\n * To create a new annotation tool, derive from this class and implement the\n * abstract methods.\n */\nabstract class AnnotationTool extends AnnotationDisplayTool {\n  /**\n   * Creates a base annotation object, adding in any annotation base data provided\n   */\n  public static createAnnotation(...annotationBaseData): Annotation {\n    let annotation: Annotation = {\n      annotationUID: null as string,\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.toolName,\n      },\n      data: {\n        text: '',\n        handles: {\n          points: new Array<Types.Point3>(),\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n        },\n        label: '',\n      },\n    } as unknown as Annotation;\n    for (const baseData of annotationBaseData) {\n      annotation = csUtils.deepMerge(annotation, baseData);\n    }\n    return annotation;\n  }\n\n  /**\n   * Creates a new annotation for the given viewport.  This just adds the\n   * viewport reference data to the metadata, and otherwise returns the\n   * static class createAnnotation data.\n   */\n  public static createAnnotationForViewport(viewport, ...annotationBaseData) {\n    return this.createAnnotation(\n      { metadata: viewport.getViewReference() },\n      ...annotationBaseData\n    );\n  }\n\n  /**\n   * Creates and adds an annotation of the given type, firing the annotation\n   * modified event on the new annotation.\n   * This implicitly uses the static class when you call it on the correct\n   * base class.  For example, you can call the KeyImageTool.createAnnotation\n   * method on KeyImageTool.toolName by calling KeyImageTool.createAndAddAnnotation\n   *\n   */\n  public static createAndAddAnnotation(viewport, ...annotationBaseData) {\n    const annotation = this.createAnnotationForViewport(\n      viewport,\n      ...annotationBaseData\n    );\n    addAnnotation(annotation, viewport.element);\n    triggerAnnotationModified(annotation, viewport.element);\n  }\n\n  static toolName;\n  // ===================================================================\n  // Abstract Methods - Must be implemented.\n  // ===================================================================\n\n  constructor(toolProps: PublicToolProps, defaultToolProps: ToolProps) {\n    super(toolProps, defaultToolProps);\n\n    if (toolProps.configuration?.getTextLines) {\n      this.configuration.getTextLines = toolProps.configuration.getTextLines;\n    }\n\n    if (toolProps.configuration?.statsCalculator) {\n      this.configuration.statsCalculator =\n        toolProps.configuration.statsCalculator;\n    }\n  }\n\n  /**\n   * @abstract addNewAnnotation Creates a new annotation based on the clicked mouse position\n   *\n   * @param evt - The normalized mouse event\n   * @param interactionType -  The interaction type used to add the annotation.\n   */\n  abstract addNewAnnotation(\n    evt: EventTypes.InteractionEventType,\n    interactionType: InteractionTypes\n  ): Annotation;\n\n  /**\n   * @abstract cancel Used to cancel the ongoing tool drawing and manipulation\n   *\n   */\n  abstract cancel(element: HTMLDivElement);\n\n  /**\n   * handleSelectedCallback Custom callback for when a handle is selected.\n   *\n   * @param evt - The normalized mouse event\n   * @param annotation - The annotation selected.\n   * @param handle - The selected handle (either Types.Point3 in space for annotations, or TextBoxHandle object for text boxes).\n   * @param interactionType - The interaction type the handle was selected with.\n   */\n  abstract handleSelectedCallback(\n    evt: EventTypes.InteractionEventType,\n    annotation: Annotation,\n    handle: ToolHandle,\n    interactionType: InteractionTypes\n  ): void;\n\n  /**\n   * Custom callback for when an annotation is selected\n   *\n   * @param evt - The normalized mouse event\n   * @param annotation - The `Annotation` to check.\n   * @param interactionType - The interaction type used to select the tool.\n   */\n  abstract toolSelectedCallback(\n    evt: EventTypes.InteractionEventType,\n    annotation: Annotation,\n    interactionType: InteractionTypes,\n    canvasCoords?: Types.Point2\n  ): void;\n\n  /**\n   * Returns true if the provided canvas coordinate tool is near the annotation\n   *\n   * @param element - The HTML element\n   * @param annotation - The annotation to check\n   * @param canvasCoords - The canvas coordinate to check\n   * @param proximity - The minimum proximity to consider the point near\n   * @param interactionType - The interaction type used to select the tool.\n   *\n   * @returns boolean if the point is near.\n   */\n  abstract isPointNearTool(\n    element: HTMLDivElement,\n    annotation: Annotation,\n    canvasCoords: Types.Point2,\n    proximity: number,\n    interactionType: string\n  ): boolean;\n\n  /**\n   * @virtual Event handler for Cornerstone MOUSE_MOVE event.\n   *\n   *\n   * @param evt - The normalized mouse event\n   * @param filteredAnnotations - The annotations to check for hover interactions\n   * @returns True if the annotation needs to be re-drawn by the annotationRenderingEngine.\n   */\n  public mouseMoveCallback = (\n    evt: EventTypes.MouseMoveEventType,\n    filteredAnnotations?: Annotations\n  ): boolean => {\n    if (!filteredAnnotations) {\n      return false;\n    }\n\n    const { element, currentPoints } = evt.detail;\n    const canvasCoords = currentPoints.canvas;\n    let annotationsNeedToBeRedrawn = false;\n\n    for (const annotation of filteredAnnotations) {\n      // Do not do anything if the annotation is locked or hidden.\n      if (\n        isAnnotationLocked(annotation) ||\n        !isAnnotationVisible(annotation.annotationUID)\n      ) {\n        continue;\n      }\n\n      const { data } = annotation;\n      const activateHandleIndex = data.handles\n        ? data.handles.activeHandleIndex\n        : undefined;\n\n      // Perform tool specific imagePointNearToolOrHandle to determine if the mouse\n      // is near the tool or its handles or its textBox.\n      const near = this._imagePointNearToolOrHandle(\n        element,\n        annotation,\n        canvasCoords,\n        6 // Todo: This should come from the state\n      );\n\n      const nearToolAndNotMarkedActive = near && !annotation.highlighted;\n      const notNearToolAndMarkedActive = !near && annotation.highlighted;\n      if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {\n        annotation.highlighted = !annotation.highlighted;\n        annotationsNeedToBeRedrawn = true;\n      } else if (\n        data.handles &&\n        data.handles.activeHandleIndex !== activateHandleIndex\n      ) {\n        // Active handle index has changed, re-render.\n        annotationsNeedToBeRedrawn = true;\n      }\n    }\n\n    return annotationsNeedToBeRedrawn;\n  };\n\n  /**\n   * It checks if the mouse click is near TextBoxHandle or AnnotationHandle itself, and\n   * return either it. It prioritize TextBoxHandle over AnnotationHandle. If\n   * the mouse click is not near any of the handles, it does not return anything.\n   *\n   * @param element - The element that the tool is attached to.\n   * @param annotation - The annotation object associated with the annotation\n   * @param canvasCoords - The coordinates of the mouse click on canvas\n   * @param proximity - The distance from the mouse cursor to the point\n   * that is considered \"near\".\n   * @returns The handle that is closest to the cursor, or null if the cursor\n   * is not near any of the handles.\n   */\n  getHandleNearImagePoint(\n    element: HTMLDivElement,\n    annotation: Annotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): ToolHandle | undefined {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const { data } = annotation;\n    const { isCanvasAnnotation } = data;\n    const { points, textBox } = data.handles;\n\n    if (textBox) {\n      const { worldBoundingBox } = textBox;\n      if (worldBoundingBox) {\n        const canvasBoundingBox = {\n          topLeft: viewport.worldToCanvas(worldBoundingBox.topLeft),\n          topRight: viewport.worldToCanvas(worldBoundingBox.topRight),\n          bottomLeft: viewport.worldToCanvas(worldBoundingBox.bottomLeft),\n          bottomRight: viewport.worldToCanvas(worldBoundingBox.bottomRight),\n        };\n\n        if (\n          canvasCoords[0] >= canvasBoundingBox.topLeft[0] &&\n          canvasCoords[0] <= canvasBoundingBox.bottomRight[0] &&\n          canvasCoords[1] >= canvasBoundingBox.topLeft[1] &&\n          canvasCoords[1] <= canvasBoundingBox.bottomRight[1]\n        ) {\n          data.handles.activeHandleIndex = null;\n          return textBox as ToolHandle;\n        }\n      }\n    }\n\n    for (let i = 0; i < points?.length; i++) {\n      const point = points[i];\n      const annotationCanvasCoordinate = isCanvasAnnotation\n        ? point.slice(0, 2)\n        : viewport.worldToCanvas(point);\n\n      const near =\n        vec2.distance(\n          canvasCoords,\n          annotationCanvasCoordinate as Types.Point2\n        ) < proximity;\n\n      if (near === true) {\n        data.handles.activeHandleIndex = i;\n        return point;\n      }\n    }\n\n    data.handles.activeHandleIndex = null;\n  }\n\n  /**\n   * It returns the style for the text box\n   * @param styleSpecifier - An object containing the specifications such as viewportId,\n   * toolGroupId, toolName and annotationUID which are used to get the style if the level of specificity is\n   * met (hierarchy is checked from most specific to least specific which is\n   * annotationLevel -> viewportLevel -> toolGroupLevel -> default.\n   * @param annotation - The annotation for the tool that is\n   * currently active.\n   * @returns An object of the style settings for the text box.\n   */\n  public getLinkedTextBoxStyle(\n    specifications: StyleSpecifier,\n    annotation?: Annotation\n  ): Record<string, unknown> {\n    // Todo: this function can be used to set different styles for different toolMode\n    // for the textBox.\n\n    return {\n      visibility: this.getStyle(\n        'textBoxVisibility',\n        specifications,\n        annotation\n      ),\n      fontFamily: this.getStyle(\n        'textBoxFontFamily',\n        specifications,\n        annotation\n      ),\n      fontSize: this.getStyle('textBoxFontSize', specifications, annotation),\n      color: this.getStyle('textBoxColor', specifications, annotation),\n      shadow: this.getStyle('textBoxShadow', specifications, annotation),\n      background: this.getStyle(\n        'textBoxBackground',\n        specifications,\n        annotation\n      ),\n      lineWidth: this.getStyle(\n        'textBoxLinkLineWidth',\n        specifications,\n        annotation\n      ),\n      lineDash: this.getStyle(\n        'textBoxLinkLineDash',\n        specifications,\n        annotation\n      ),\n    };\n  }\n\n  /**\n   * Returns true if the viewport is scaled to SUV units\n   * @param viewport - The viewport\n   * @param targetId - The annotation targetId\n   * @param imageId - The annotation imageId\n   * @returns\n   */\n  isSuvScaled(\n    viewport: Types.IStackViewport | Types.IVolumeViewport,\n    targetId: string,\n    imageId?: string\n  ): boolean {\n    if (viewport instanceof BaseVolumeViewport) {\n      const volumeId = csUtils.getVolumeId(targetId);\n      const volume = cache.getVolume(volumeId);\n      return volume?.scaling?.PT !== undefined;\n    }\n    const scalingModule: Types.ScalingParameters | undefined =\n      imageId && metaData.get('scalingModule', imageId);\n    return typeof scalingModule?.suvbw === 'number';\n  }\n\n  /**\n   * Get the style that will be applied to all annotations such as length, cobb\n   * angle, arrow annotate, etc. when rendered on a canvas or svg layer\n   */\n  protected getAnnotationStyle(context: {\n    annotation: Annotation;\n    styleSpecifier: StyleSpecifier;\n  }) {\n    const { annotation, styleSpecifier } = context;\n    const getStyle = (property) =>\n      this.getStyle(property, styleSpecifier, annotation);\n    const { annotationUID } = annotation;\n    const visibility = isAnnotationVisible(annotationUID);\n    const locked = isAnnotationLocked(annotation);\n\n    const lineWidth = getStyle('lineWidth') as number;\n    const lineDash = getStyle('lineDash') as string;\n    const color = getStyle('color') as string;\n    const shadow = getStyle('shadow') as boolean;\n    const textboxStyle = this.getLinkedTextBoxStyle(styleSpecifier, annotation);\n\n    return {\n      visibility,\n      locked,\n      color,\n      lineWidth,\n      lineDash,\n      lineOpacity: 1,\n      fillColor: color,\n      fillOpacity: 0,\n      shadow,\n      textbox: textboxStyle,\n    };\n  }\n\n  /**\n   * Returns true if the `canvasCoords` are near a handle or selectable part of the tool\n   *\n   * @param element - The HTML element\n   * @param annotation - The annotation to check\n   * @param canvasCoords - The canvas coordinates to check\n   * @param proximity - The proximity to consider\n   *\n   * @returns If the point is near.\n   */\n  private _imagePointNearToolOrHandle(\n    element: HTMLDivElement,\n    annotation: Annotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean {\n    // Based on the tool instance type, check if the point is near the tool handles\n    const handleNearImagePoint = this.getHandleNearImagePoint(\n      element,\n      annotation,\n      canvasCoords,\n      proximity\n    );\n\n    if (handleNearImagePoint) {\n      return true;\n    }\n\n    // If the point is not near the handles, check if the point is near the tool\n    const toolNewImagePoint = this.isPointNearTool(\n      element,\n      annotation,\n      canvasCoords,\n      proximity,\n      'mouse'\n    );\n\n    if (toolNewImagePoint) {\n      return true;\n    }\n  }\n}\n\nAnnotationTool.toolName = 'AnnotationTool';\nexport default AnnotationTool;\n","import { LabelmapConfig } from '../../../types/LabelmapTypes';\n\nconst defaultLabelmapConfig: LabelmapConfig = {\n  renderOutline: true,\n  outlineWidthActive: 3,\n  outlineWidthInactive: 2,\n  activeSegmentOutlineWidthDelta: 0,\n  renderFill: true,\n  renderFillInactive: true,\n  fillAlpha: 0.7,\n  fillAlphaInactive: 0.65,\n  outlineOpacity: 1,\n  outlineOpacityInactive: 0.85,\n};\n\nfunction getDefaultLabelmapConfig(): LabelmapConfig {\n  return defaultLabelmapConfig;\n}\n\n// Checks if the labelmap config is valid, which means\n// if all the required fields are present and have the correct type\nfunction isValidLabelmapConfig(config): boolean {\n  return (\n    config &&\n    typeof config.renderOutline === 'boolean' &&\n    typeof config.outlineWidthActive === 'number' &&\n    typeof config.outlineWidthInactive === 'number' &&\n    typeof config.activeSegmentOutlineWidthDelta === 'number' &&\n    typeof config.renderFill === 'boolean' &&\n    typeof config.renderFillInactive === 'boolean' &&\n    typeof config.fillAlpha === 'number' &&\n    typeof config.fillAlphaInactive === 'number' &&\n    typeof config.outlineOpacity === 'number' &&\n    typeof config.outlineOpacityInactive === 'number'\n  );\n}\n\nexport default getDefaultLabelmapConfig;\nexport { isValidLabelmapConfig };\n","import {\n  getEnabledElement,\n  cache,\n  StackViewport,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { addAnnotation, getAnnotations } from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\n\nimport {\n  drawHandles as drawHandlesSvg,\n  drawRect as drawRectSvg,\n} from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { triggerAnnotationModified } from '../../stateManagement/annotation/helpers/state';\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { RectangleROIThresholdAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport RectangleROITool from '../annotation/RectangleROITool';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\n/**\n * This tool is exactly the RectangleROITool but only draws a rectangle on the image,\n * and by using utility functions such as thresholdByRange and thresholdByROIStat it can be used to\n * create a segmentation. This tool, however, does not calculate the statistics\n * as RectangleROITool does.\n */\nclass RectangleROIThresholdTool extends RectangleROITool {\n  static toolName;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement it creates\n   * the edit data for the tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const targetId = this.getTargetId(viewport);\n    let referencedImageId, volumeId;\n\n    if (viewport instanceof StackViewport) {\n      referencedImageId = targetId.split('imageId:')[1];\n    } else {\n      volumeId = csUtils.getVolumeId(targetId);\n      const imageVolume = cache.getVolume(volumeId);\n      referencedImageId = csUtils.getClosestImageId(\n        imageVolume,\n        worldPos,\n        viewPlaneNormal\n      );\n    }\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n    // Todo: how not to store enabledElement on the annotation, segmentationModule needs the element to\n    // decide on the active segmentIndex, active segmentationIndex etc.\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        enabledElement,\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        toolName: this.getToolName(),\n        volumeId,\n      },\n      data: {\n        label: '',\n        handles: {\n          // No need a textBox\n          textBox: {\n            hasMoved: false,\n            worldPosition: null,\n            worldBoundingBox: null,\n          },\n          points: [\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          activeHandleIndex: null,\n        },\n        segmentationId: null,\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 3,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * it is used to draw the RectangleROI Threshold annotation in each\n   * request animation frame.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as RectangleROIThresholdAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      // Todo: This is not correct way to add the event trigger,\n      // this will trigger on all mouse hover too. Problem is that we don't\n      // have a cached stats mechanism for this tool yet?\n      triggerAnnotationModified(annotation, element);\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const rectangleUID = '0';\n      drawRectSvg(\n        svgDrawingHelper,\n        annotationUID,\n        rectangleUID,\n        canvasCoordinates[0],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash,\n          lineWidth,\n        }\n      );\n\n      renderStatus = true;\n    }\n\n    return renderStatus;\n  };\n}\n\nRectangleROIThresholdTool.toolName = 'RectangleROIThreshold';\nexport default RectangleROIThresholdTool;\n","import {\n  getEnabledElement,\n  cache,\n  StackViewport,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport { Types, utilities as coreUtils } from '@cornerstonejs/core';\n\nimport { getCalibratedLengthUnitsAndScale } from '../../utilities/getCalibratedUnits';\nimport { vec3 } from 'gl-matrix';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport {\n  drawHandles as drawHandlesSvg,\n  drawRect as drawRectSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport throttle from '../../utilities/throttle';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport getWorldWidthAndHeightFromCorners from '../../utilities/planar/getWorldWidthAndHeightFromCorners';\n\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  hideElementCursor,\n  resetElementCursor,\n} from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport {\n  triggerAnnotationCompleted,\n  triggerAnnotationModified,\n} from '../../stateManagement/annotation/helpers/state';\n\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { RectangleROIStartEndThresholdAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport RectangleROITool from '../annotation/RectangleROITool';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\nimport { pointInShapeCallback, roundNumber } from '../../utilities/';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nimport { BasicStatsCalculator } from '../../utilities/math/basic';\nimport { filterAnnotationsWithinSamePlane } from '../../utilities/planar';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * This tool is similar to the RectangleROIThresholdTool which\n * only draws a rectangle on the image, and by using utility functions\n * such as thresholdByRange and thresholdByROIStat it can be used to\n * create a segmentation. The only difference is that it only acts on the\n * acquisition plane and not the 3D volume, and accepts a start and end\n * slice, and renders a dashed rectangle on the image between the start and end\n * but a solid rectangle on start and end slice. Utility functions should be used\n * to modify the start and end slice.\n * // Todo: right now only the first slice has grabbable handles, need to make\n * // it so that the handles are grabbable on all slices.\n */\nclass RectangleROIStartEndThresholdTool extends RectangleROITool {\n  static toolName;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      configuration: {\n        numSlicesToPropagate: 10,\n        computePointsInsideVolume: false,\n        getTextLines: defaultGetTextLines,\n        statsCalculator: BasicStatsCalculator,\n        showTextBox: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStatsTool,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement it creates\n   * the edit data for the tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    let referencedImageId, imageVolume, volumeId;\n    if (viewport instanceof StackViewport) {\n      throw new Error('Stack Viewport Not implemented');\n    } else {\n      const targetId = this.getTargetId(viewport);\n      volumeId = csUtils.getVolumeId(targetId);\n      imageVolume = cache.getVolume(volumeId);\n      referencedImageId = csUtils.getClosestImageId(\n        imageVolume,\n        worldPos,\n        viewPlaneNormal\n      );\n    }\n\n    const spacingInNormal = csUtils.getSpacingInNormalDirection(\n      imageVolume,\n      viewPlaneNormal\n    );\n\n    const startCoord = this._getStartCoordinate(worldPos, viewPlaneNormal);\n\n    // We cannot simply add numSlicesToPropagate to startIndex because\n    // the order of imageIds can be from top to bottom or bottom to top and\n    // we want to make sure it is always propagated in the direction of the\n    // view and also to make sure we don't go out of bounds.\n    const endCoord = this._getEndCoordinate(\n      worldPos,\n      spacingInNormal,\n      viewPlaneNormal\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        enabledElement,\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        toolName: this.getToolName(),\n        volumeId,\n        spacingInNormal,\n      },\n      data: {\n        label: '',\n        startCoordinate: startCoord,\n        endCoordinate: endCoord,\n        cachedStats: {\n          pointsInVolume: [],\n          projectionPoints: [],\n          projectionPointsImageIds: [referencedImageId],\n          statistics: [],\n        },\n        handles: {\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n          points: [\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          activeHandleIndex: null,\n        },\n        labelmapUID: null,\n      },\n    };\n\n    // update the projection points in 3D space, since we are projecting\n    // the points to the slice plane, we need to make sure the points are\n    // computed for later export\n    this._computeProjectionPoints(annotation, imageVolume);\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 3,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    const targetId = this.getTargetId(enabledElement.viewport);\n    const imageVolume = cache.getVolume(targetId.split(/volumeId:|\\?/)[1]);\n\n    if (this.configuration.calculatePointsInsideVolume) {\n      this._computePointsInsideVolume(\n        annotation,\n        targetId,\n        imageVolume,\n        enabledElement\n      );\n    }\n\n    triggerAnnotationRenderForViewportIds(\n      enabledElement.renderingEngine,\n      viewportIdsToRender\n    );\n\n    if (newAnnotation) {\n      triggerAnnotationCompleted(annotation);\n    }\n  };\n\n  //Now works for non-acquisition planes\n  _computeProjectionPoints(\n    annotation: RectangleROIStartEndThresholdAnnotation,\n    imageVolume: Types.IImageVolume\n  ): void {\n    const { data, metadata } = annotation;\n    const { viewPlaneNormal, spacingInNormal } = metadata;\n    const { imageData } = imageVolume;\n    const { startCoordinate, endCoordinate } = data;\n    const { points } = data.handles;\n\n    const startIJK = transformWorldToIndex(imageData, points[0]);\n    const endIJK = transformWorldToIndex(imageData, points[0]);\n\n    const startWorld = vec3.create();\n    imageData.indexToWorldVec3(startIJK, startWorld);\n\n    const endWorld = vec3.create();\n    imageData.indexToWorldVec3(endIJK, endWorld);\n\n    // substitute the end slice index 2 with startIJK index 2\n\n    if (this._getIndexOfCoordinatesForViewplaneNormal(viewPlaneNormal) == 2) {\n      startWorld[2] = startCoordinate;\n      endWorld[2] = endCoordinate;\n    } else if (\n      this._getIndexOfCoordinatesForViewplaneNormal(viewPlaneNormal) == 0\n    ) {\n      startWorld[0] = startCoordinate;\n      endWorld[0] = endCoordinate;\n    } else if (\n      this._getIndexOfCoordinatesForViewplaneNormal(viewPlaneNormal) == 1\n    ) {\n      startWorld[1] = startCoordinate;\n      endWorld[1] = endCoordinate;\n    }\n\n    // distance between start and end slice in the world coordinate\n    const distance = vec3.distance(startWorld, endWorld);\n\n    // for each point inside points, navigate in the direction of the viewPlaneNormal\n    // with amount of spacingInNormal, and calculate the next slice until we reach the distance\n    const newProjectionPoints = [];\n    for (let dist = 0; dist < distance; dist += spacingInNormal) {\n      newProjectionPoints.push(\n        points.map((point) => {\n          const newPoint = vec3.create();\n          //@ts-ignore\n          vec3.scaleAndAdd(newPoint, point, viewPlaneNormal, dist);\n          return Array.from(newPoint);\n        })\n      );\n    }\n\n    data.cachedStats.projectionPoints = newProjectionPoints;\n  }\n\n  //This function return all the points inside the ROI and calculate statistics for every slices between startCoordinate and endCoordinate\n  _computePointsInsideVolume(\n    annotation,\n    targetId,\n    imageVolume,\n    enabledElement\n  ) {\n    const { data, metadata } = annotation;\n    const { viewPlaneNormal, viewUp } = metadata;\n    const { viewport, renderingEngine } = enabledElement;\n\n    const projectionPoints = data.cachedStats.projectionPoints;\n\n    const pointsInsideVolume: Types.Point3[][] = [[]];\n    const image = this.getTargetIdImage(targetId, renderingEngine);\n\n    const worldPos1 = data.handles.points[0];\n    const worldPos2 = data.handles.points[3];\n\n    const { worldWidth, worldHeight } = getWorldWidthAndHeightFromCorners(\n      viewPlaneNormal,\n      viewUp,\n      worldPos1,\n      worldPos2\n    );\n    const measureInfo = getCalibratedLengthUnitsAndScale(image, data.habdles);\n\n    const area =\n      Math.abs(worldWidth * worldHeight) /\n      (measureInfo.scale * measureInfo.scale);\n\n    const modalityUnitOptions = {\n      isPreScaled: isViewportPreScaled(viewport, targetId),\n\n      isSuvScaled: this.isSuvScaled(\n        viewport,\n        targetId,\n        annotation.metadata.referencedImageId\n      ),\n    };\n\n    const modalityUnit = getModalityUnit(\n      metadata.Modality,\n      annotation.metadata.referencedImageId,\n      modalityUnitOptions\n    );\n\n    for (let i = 0; i < projectionPoints.length; i++) {\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!imageVolume) {\n        continue;\n      }\n\n      const projectionPoint = projectionPoints[i][0];\n\n      const { dimensions, imageData } = imageVolume;\n\n      const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n      //We only need to change the Z of our bounds so we are getting the Z from the current projection point\n      const worldProjectionPointIndex = transformWorldToIndex(\n        imageData,\n        projectionPoint\n      );\n\n      const indexOfProjection =\n        this._getIndexOfCoordinatesForViewplaneNormal(viewPlaneNormal);\n\n      worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n      worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n      worldPos1Index[2] = Math.floor(worldPos1Index[2]);\n\n      worldPos1Index[indexOfProjection] =\n        worldProjectionPointIndex[indexOfProjection];\n\n      const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n\n      worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n      worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n      worldPos2Index[2] = Math.floor(worldPos2Index[2]);\n\n      worldPos2Index[indexOfProjection] =\n        worldProjectionPointIndex[indexOfProjection];\n\n      // Check if one of the indexes are inside the volume, this then gives us\n      // Some area to do stats over.\n\n      if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n        this.isHandleOutsideImage = false;\n        const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n        const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n\n        const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n        const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n\n        const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n        const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n\n        const boundsIJK = [\n          [iMin, iMax],\n          [jMin, jMax],\n          [kMin, kMax],\n        ] as [Types.Point2, Types.Point2, Types.Point2];\n\n        const pointsInShape = pointInShapeCallback(\n          imageData,\n          () => true,\n          this.configuration.statsCalculator.statsCallback,\n          boundsIJK\n        );\n\n        //@ts-ignore\n        pointsInsideVolume.push(pointsInShape);\n      }\n    }\n    const stats = this.configuration.statsCalculator.getStatistics();\n    data.cachedStats.pointsInVolume = pointsInsideVolume;\n    data.cachedStats.statistics = {\n      Modality: metadata.Modality,\n      area,\n      mean: stats.mean?.value,\n      stdDev: stats.stdDev?.value,\n      max: stats.max?.value,\n      statsArray: stats.array,\n      areaUnit: measureInfo.areaUnits,\n      modalityUnit,\n    };\n  }\n\n  _calculateCachedStatsTool(annotation, enabledElement) {\n    const data = annotation.data;\n    const { viewport } = enabledElement;\n\n    const { cachedStats } = data;\n    const targetId = this.getTargetId(viewport);\n    const imageVolume = cache.getVolume(targetId.split(/volumeId:|\\?/)[1]);\n\n    // Todo: this shouldn't be here, this is a performance issue\n    // Since we are extending the RectangleROI class, we need to\n    // bring the logic for handle to some cachedStats calculation\n    this._computeProjectionPoints(annotation, imageVolume);\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    triggerAnnotationModified(annotation, viewport.element);\n\n    return cachedStats;\n  }\n\n  /**\n   * it is used to draw the rectangleROIStartEnd annotation in each\n   * request animation frame.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n    let annotations = getAnnotations(this.getToolName(), viewport.element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = filterAnnotationsWithinSamePlane(\n      annotations,\n      viewport.getCamera()\n    );\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[\n        i\n      ] as RectangleROIStartEndThresholdAnnotation;\n      const { annotationUID, data } = annotation;\n      const { startCoordinate, endCoordinate } = data;\n      const { points, activeHandleIndex } = data.handles;\n\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n      // range of slices to render based on the start and end slice, like\n      // np.arange\n\n      const focalPoint = viewport.getCamera().focalPoint;\n      const viewplaneNormal = viewport.getCamera().viewPlaneNormal;\n\n      let startCoord: number | vec3 = startCoordinate;\n      let endCoord: number | vec3 = endCoordinate;\n      if (Array.isArray(startCoordinate)) {\n        startCoord = this._getCoordinateForViewplaneNormal(\n          startCoord,\n          viewplaneNormal\n        );\n      }\n\n      if (Array.isArray(endCoordinate)) {\n        endCoord = this._getCoordinateForViewplaneNormal(\n          endCoord,\n          viewplaneNormal\n        );\n      }\n\n      const roundedStartCoord = coreUtils.roundToPrecision(startCoord);\n      const roundedEndCoord = coreUtils.roundToPrecision(endCoord);\n\n      const coord = this._getCoordinateForViewplaneNormal(\n        focalPoint,\n        viewplaneNormal\n      );\n      const roundedCoord = coreUtils.roundToPrecision(coord);\n      // if the focalpoint is outside the start/end coordinates, we don't render\n      if (\n        roundedCoord < Math.min(roundedStartCoord, roundedEndCoord) ||\n        roundedCoord > Math.max(roundedStartCoord, roundedEndCoord)\n      ) {\n        continue;\n      }\n\n      // WE HAVE TO CACHE STATS BEFORE FETCHING TEXT\n\n      if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(annotation, enabledElement);\n      }\n\n      // if it is inside the start/end slice, but not exactly the first or\n      // last slice, we render the line in dash, but not the handles\n      let firstOrLastSlice = false;\n      if (\n        roundedCoord === roundedStartCoord ||\n        roundedCoord === roundedEndCoord\n      ) {\n        firstOrLastSlice = true;\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null &&\n        firstOrLastSlice\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      let lineDashToUse = lineDash;\n\n      if (!firstOrLastSlice) {\n        lineDashToUse = 2;\n      }\n\n      const rectangleUID = '0';\n      drawRectSvg(\n        svgDrawingHelper,\n        annotationUID,\n        rectangleUID,\n        canvasCoordinates[0],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash: lineDashToUse,\n          lineWidth,\n        }\n      );\n\n      renderStatus = true;\n\n      if (\n        this.configuration.showTextBox &&\n        this.configuration.calculatePointsInsideVolume\n      ) {\n        const options = this.getLinkedTextBoxStyle(styleSpecifier, annotation);\n        if (!options.visibility) {\n          data.handles.textBox = {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          };\n          continue;\n        }\n\n        const textLines = this.configuration.getTextLines(data);\n        if (!textLines || textLines.length === 0) {\n          continue;\n        }\n\n        if (!data.handles.textBox.hasMoved) {\n          const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n\n          data.handles.textBox.worldPosition =\n            viewport.canvasToWorld(canvasTextBoxCoords);\n        }\n\n        const textBoxPosition = viewport.worldToCanvas(\n          data.handles.textBox.worldPosition\n        );\n\n        const textBoxUID = '1';\n        const boundingBox = drawLinkedTextBoxSvg(\n          svgDrawingHelper,\n          annotationUID,\n          textBoxUID,\n          textLines,\n          textBoxPosition,\n          canvasCoordinates,\n          {},\n          options\n        );\n\n        const { x: left, y: top, width, height } = boundingBox;\n\n        data.handles.textBox.worldBoundingBox = {\n          topLeft: viewport.canvasToWorld([left, top]),\n          topRight: viewport.canvasToWorld([left + width, top]),\n          bottomLeft: viewport.canvasToWorld([left, top + height]),\n          bottomRight: viewport.canvasToWorld([left + width, top + height]),\n        };\n      }\n    }\n\n    return renderStatus;\n  };\n\n  _getStartCoordinate(\n    worldPos: Types.Point3,\n    viewPlaneNormal: Types.Point3\n  ): number | undefined {\n    const startPos = worldPos;\n    const startCoord = this._getCoordinateForViewplaneNormal(\n      startPos,\n      viewPlaneNormal\n    );\n\n    return startCoord;\n  }\n\n  _getEndCoordinate(\n    worldPos: Types.Point3,\n    spacingInNormal: number,\n    viewPlaneNormal: Types.Point3\n  ): number | undefined {\n    const numSlicesToPropagate = this.configuration.numSlicesToPropagate;\n\n    // get end position by moving from worldPos in the direction of viewplaneNormal\n    // with amount of numSlicesToPropagate * spacingInNormal\n    const endPos = vec3.create();\n    vec3.scaleAndAdd(\n      endPos,\n      worldPos,\n      viewPlaneNormal,\n      numSlicesToPropagate * spacingInNormal\n    );\n\n    const endCoord = this._getCoordinateForViewplaneNormal(\n      endPos,\n      viewPlaneNormal\n    );\n\n    return endCoord;\n  }\n\n  _getIndexOfCoordinatesForViewplaneNormal(\n    viewPlaneNormal: Types.Point3\n  ): number {\n    const viewplaneNormalAbs = [\n      Math.abs(viewPlaneNormal[0]),\n      Math.abs(viewPlaneNormal[1]),\n      Math.abs(viewPlaneNormal[2]),\n    ];\n    const indexOfDirection = viewplaneNormalAbs.indexOf(\n      Math.max(...viewplaneNormalAbs)\n    );\n\n    return indexOfDirection;\n  }\n\n  _getCoordinateForViewplaneNormal(\n    pos: vec3 | number,\n    viewPlaneNormal: Types.Point3\n  ): number | undefined {\n    const indexOfDirection =\n      this._getIndexOfCoordinatesForViewplaneNormal(viewPlaneNormal);\n\n    return pos[indexOfDirection];\n  }\n}\n\n/**\n * _getTextLines - Returns the Area, mean and std deviation of the area of the\n * target volume enclosed by the rectangle.\n *\n * @param data - The annotation tool-specific data.\n * @param targetId - The volumeId of the volume to display the stats for.\n */\nfunction defaultGetTextLines(data): string[] {\n  const cachedVolumeStats = data.cachedStats.statistics;\n\n  const { area, mean, max, stdDev, areaUnit, modalityUnit } = cachedVolumeStats;\n\n  if (mean === undefined) {\n    return;\n  }\n\n  const textLines: string[] = [];\n\n  textLines.push(`Area: ${roundNumber(area)} ${areaUnit}`);\n  textLines.push(`Mean: ${roundNumber(mean)} ${modalityUnit}`);\n  textLines.push(`Max: ${roundNumber(max)} ${modalityUnit}`);\n  textLines.push(`Std Dev: ${roundNumber(stdDev)} ${modalityUnit}`);\n\n  return textLines;\n}\n\nRectangleROIStartEndThresholdTool.toolName = 'RectangleROIStartEndThreshold';\nexport default RectangleROIStartEndThresholdTool;\n","import { triggerEvent, eventTarget } from '@cornerstonejs/core';\nimport Events from '../enums/Events';\nimport { Annotation } from '../types';\n\nexport type FramesRange = [number, number] | number;\n\n/**\n * This class handles the annotation frame range values for multiframes.\n * Mostly used for the Video viewport, it allows references to\n * a range of frame values.\n */\nexport default class AnnotationFrameRange {\n  protected static frameRangeExtractor =\n    /(\\/frames\\/|[&?]frameNumber=)([^/&?]*)/i;\n\n  protected static imageIdToFrames(imageId: string): FramesRange {\n    const match = imageId.match(this.frameRangeExtractor);\n    if (!match || !match[2]) {\n      return null;\n    }\n    const range = match[2].split('-').map((it) => Number(it));\n    if (range.length === 1) {\n      return range[0];\n    }\n    return range as FramesRange;\n  }\n\n  public static framesToString(range) {\n    if (Array.isArray(range)) {\n      return `${range[0]}-${range[1]}`;\n    }\n    return String(range);\n  }\n\n  protected static framesToImageId(\n    imageId: string,\n    range: FramesRange | string\n  ): string {\n    const match = imageId.match(this.frameRangeExtractor);\n    if (!match || !match[2]) {\n      return null;\n    }\n    const newRangeString = this.framesToString(range);\n    return imageId.replace(\n      this.frameRangeExtractor,\n      `${match[1]}${newRangeString}`\n    );\n  }\n\n  /**\n   * Sets the range of frames to associate with the given annotation.\n   * The range can be a single frame number (1 based according to DICOM),\n   * or a range of values in the format `min-max` where min, max are inclusive\n   * Modifies the referencedImageID to specify the updated URL.\n   */\n  public static setFrameRange(\n    annotation: Annotation,\n    range: FramesRange | string,\n    eventBase?: { viewportId; renderingEngineId }\n  ) {\n    const { referencedImageId } = annotation.metadata;\n    annotation.metadata.referencedImageId = this.framesToImageId(\n      referencedImageId,\n      range\n    );\n    const eventDetail = {\n      ...eventBase,\n      annotation,\n    };\n    triggerEvent(eventTarget, Events.ANNOTATION_MODIFIED, eventDetail);\n  }\n\n  public static getFrameRange(\n    annotation: Annotation\n  ): number | [number, number] {\n    return this.imageIdToFrames(annotation.metadata.referencedImageId);\n  }\n}\n","import {\n  Types,\n  utilities,\n  BaseVolumeViewport,\n  StackViewport,\n  cache,\n  metaData,\n} from '@cornerstonejs/core';\nimport { Annotation } from '../types';\nimport { addAnnotation } from '../stateManagement';\nimport { vec3 } from 'gl-matrix';\n\nfunction annotationHydration(\n  viewport: Types.IViewport,\n  toolName: string,\n  worldPoints: Types.Point3[],\n  options?: {\n    FrameOfReferenceUID?: string;\n    annotationUID?: string;\n  }\n): Annotation {\n  const viewReference = viewport.getViewReference();\n  const { viewPlaneNormal, FrameOfReferenceUID } = viewReference;\n  const annotation = {\n    annotationUID: options?.annotationUID || utilities.uuidv4(),\n    data: {\n      handles: {\n        points: worldPoints,\n      },\n    },\n    highlighted: false,\n    autoGenerated: false,\n    invalidated: false,\n    isLocked: false,\n    isVisible: true,\n    metadata: {\n      toolName,\n      viewPlaneNormal,\n      FrameOfReferenceUID,\n      referencedImageId: getReferencedImageId(\n        viewport,\n        worldPoints[0],\n        viewPlaneNormal\n      ),\n      ...options,\n    },\n  };\n  addAnnotation(annotation, viewport.element);\n  return annotation;\n}\n\nfunction getReferencedImageId(\n  viewport: Types.IViewport,\n  worldPos: Types.Point3,\n  viewPlaneNormal: Types.Point3\n): string {\n  let referencedImageId;\n\n  if (viewport instanceof StackViewport) {\n    referencedImageId = getClosestImageIdForStackViewport(\n      viewport,\n      worldPos,\n      viewPlaneNormal\n    );\n  } else if (viewport instanceof BaseVolumeViewport) {\n    const targetId = getTargetId(viewport);\n    const volumeId = utilities.getVolumeId(targetId);\n    const imageVolume = cache.getVolume(volumeId);\n\n    referencedImageId = utilities.getClosestImageId(\n      imageVolume,\n      worldPos,\n      viewPlaneNormal\n    );\n  } else {\n    throw new Error(\n      'getReferencedImageId: viewport must be a StackViewport or BaseVolumeViewport'\n    );\n  }\n\n  return referencedImageId;\n}\n\nfunction getTargetId(viewport: Types.IViewport): string | undefined {\n  const targetId = viewport.getReferenceId?.();\n  if (targetId) {\n    return targetId;\n  }\n  if (viewport instanceof BaseVolumeViewport) {\n    return `volumeId:${getTargetVolumeId(viewport)}`;\n  }\n  throw new Error('getTargetId: viewport must have a getTargetId method');\n}\n\nfunction getTargetVolumeId(viewport: Types.IViewport): string | undefined {\n  const actorEntries = viewport.getActors();\n\n  if (!actorEntries) {\n    return;\n  }\n  return actorEntries.find(\n    (actorEntry) => actorEntry.actor.getClassName() === 'vtkVolume'\n  )?.uid;\n}\n\nfunction getClosestImageIdForStackViewport(\n  viewport: StackViewport,\n  worldPos: Types.Point3,\n  viewPlaneNormal: Types.Point3\n): string {\n  const imageIds = viewport.getImageIds();\n  if (!imageIds || !imageIds.length) {\n    return;\n  }\n\n  const distanceImagePairs = imageIds.map((imageId) => {\n    const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId);\n    const distance = calculateDistanceToImage(\n      worldPos,\n      imagePositionPatient,\n      viewPlaneNormal\n    );\n    return { imageId, distance };\n  });\n\n  distanceImagePairs.sort((a, b) => a.distance - b.distance);\n\n  return distanceImagePairs[0].imageId;\n}\n\nfunction calculateDistanceToImage(\n  worldPos: Types.Point3,\n  ImagePositionPatient: Types.Point3,\n  viewPlaneNormal: Types.Point3\n): number {\n  const dir = vec3.create();\n  vec3.sub(dir, worldPos, ImagePositionPatient);\n\n  const dot = vec3.dot(dir, viewPlaneNormal);\n\n  return Math.abs(dot);\n}\nexport { annotationHydration, getClosestImageIdForStackViewport };\n","import type { Types } from '@cornerstonejs/core';\nimport { CONSTANTS } from '@cornerstonejs/core';\n\nconst { EPSILON } = CONSTANTS;\n\n/** Bounding box type */\ntype BoundingBox =\n  | [Types.Point2, Types.Point2, null]\n  | [Types.Point2, Types.Point2, Types.Point2];\n\nfunction calculateBoundingBox(\n  points,\n  dimensions,\n  isWorld = false\n): BoundingBox {\n  let xMin = Infinity;\n  let xMax = isWorld ? -Infinity : 0;\n  let yMin = Infinity;\n  let yMax = isWorld ? -Infinity : 0;\n  let zMin = Infinity;\n  let zMax = isWorld ? -Infinity : 0;\n\n  const is3D = points[0]?.length === 3;\n\n  // use for loop for performance\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];\n    xMin = Math.min(p[0], xMin);\n    xMax = Math.max(p[0], xMax);\n    yMin = Math.min(p[1], yMin);\n    yMax = Math.max(p[1], yMax);\n\n    if (is3D) {\n      zMin = Math.min(p[2] ?? zMin, zMin);\n      zMax = Math.max(p[2] ?? zMax, zMax);\n    }\n  }\n\n  if (dimensions) {\n    xMin = Math.max(isWorld ? dimensions[0] + EPSILON : 0, xMin);\n    xMax = Math.min(\n      isWorld ? dimensions[0] - EPSILON : dimensions[0] - 1,\n      xMax\n    );\n    yMin = Math.max(isWorld ? dimensions[1] + EPSILON : 0, yMin);\n    yMax = Math.min(\n      isWorld ? dimensions[1] - EPSILON : dimensions[1] - 1,\n      yMax\n    );\n\n    if (is3D && dimensions.length === 3) {\n      zMin = Math.max(isWorld ? dimensions[2] + EPSILON : 0, zMin);\n      zMax = Math.min(\n        isWorld ? dimensions[2] - EPSILON : dimensions[2] - 1,\n        zMax\n      );\n    }\n  } else if (!isWorld) {\n    // still need to bound to 0 and Infinity if no dimensions are provided for ijk\n    xMin = Math.max(0, xMin);\n    xMax = Math.min(Infinity, xMax);\n    yMin = Math.max(0, yMin);\n    yMax = Math.min(Infinity, yMax);\n\n    if (is3D) {\n      zMin = Math.max(0, zMin);\n      zMax = Math.min(Infinity, zMax);\n    }\n  }\n\n  return is3D\n    ? [\n        [xMin, xMax],\n        [yMin, yMax],\n        [zMin, zMax],\n      ]\n    : [[xMin, xMax], [yMin, yMax], null];\n}\n\n/**\n * With a given vertices (points) coordinates in 2D or 3D in IJK, it calculates the minimum and maximum\n * coordinate in each axis, and returns them. If clipBounds are provided it also\n * clip the min, max to the provided width, height and depth\n *\n * @param points - shape corner points coordinates either in IJK (image coordinate)\n * @param dimensions - bounds to clip the min, max\n * @returns [[xMin,xMax],[yMin,yMax], [zMin,zMax]]\n */\nexport function getBoundingBoxAroundShapeIJK(\n  points: Types.Point2[] | Types.Point3[],\n  dimensions?: Types.Point2 | Types.Point3\n): BoundingBox {\n  return calculateBoundingBox(points, dimensions, false);\n}\n\n/**\n * With a given vertices (points) coordinates in 2D or 3D in World Coordinates, it calculates the minimum and maximum\n * coordinate in each axis, and returns them. If clipBounds are provided it also\n * clip the min, max to the provided width, height and depth\n *\n * @param points - shape corner points coordinates either in IJK (image coordinate)\n * @param clipBounds - bounds to clip the min, max\n * @returns [[xMin,xMax],[yMin,yMax], [zMin,zMax]]\n */\nexport function getBoundingBoxAroundShapeWorld(\n  points: Types.Point2[] | Types.Point3[],\n  clipBounds?: Types.Point2 | Types.Point3\n): BoundingBox {\n  return calculateBoundingBox(points, clipBounds, true);\n}\n","import { utilities, Enums } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nconst { calibratedPixelSpacingMetadataProvider } = utilities;\n\n/**\n * It adds the provided spacing to the Cornerstone internal calibratedPixelSpacing\n * metadata provider, then it invalidates all the tools that have the imageId as\n * their reference imageIds. Finally, it triggers a re-render for invalidated annotations.\n * @param imageId - ImageId for the calibrated image\n * @param rowPixelSpacing - Spacing in row direction\n * @param calibrationOrScale - either the calibration object or a scale value\n */\nexport default function calibrateImageSpacing(\n  imageId: string,\n  renderingEngine: Types.IRenderingEngine,\n  calibrationOrScale: Types.IImageCalibration | number\n): void {\n  // Handle simple parameter version\n  if (typeof calibrationOrScale === 'number') {\n    calibrationOrScale = {\n      type: Enums.CalibrationTypes.USER,\n      scale: calibrationOrScale,\n    };\n  }\n  // 1. Add the calibratedPixelSpacing metadata to the metadata\n  calibratedPixelSpacingMetadataProvider.add(imageId, calibrationOrScale);\n\n  // 2. Update the actor for stackViewports\n  const viewports = renderingEngine.getStackViewports();\n\n  // 2.1 If imageId is already being used in a stackViewport -> update actor\n  viewports.forEach((viewport) => {\n    const imageIds = viewport.getImageIds();\n    if (imageIds.includes(imageId)) {\n      viewport.calibrateSpacing(imageId);\n    }\n  });\n\n  // 2.2 If imageId is cached but not being displayed in a viewport, stackViewport\n  // will handle using the calibratedPixelSpacing since it has been added\n  // to the provider\n}\n","/**\n * CINE Tool Events\n */\nenum Events {\n  CLIP_STOPPED = 'CORNERSTONE_CINE_TOOL_STOPPED',\n  CLIP_STARTED = 'CORNERSTONE_CINE_TOOL_STARTED',\n}\n\nexport default Events;\n","import { glMatrix, vec3 } from 'gl-matrix';\nimport {\n  utilities as csUtils,\n  getEnabledElement,\n  StackViewport,\n  VideoViewport,\n  VolumeViewport,\n  cache,\n  BaseVolumeViewport,\n  Enums,\n} from '@cornerstonejs/core';\n\nimport { Types } from '@cornerstonejs/core';\nimport CINE_EVENTS from './events';\nimport { addToolState, getToolState, getToolStateByViewportId } from './state';\nimport { CINETypes } from '../../types';\nimport scroll from '../scroll';\n\nconst { ViewportStatus } = Enums;\nconst { triggerEvent } = csUtils;\n\nconst debounced = true;\nconst dynamicVolumesPlayingMap = new Map();\n\n/**\n * Starts playing a clip or adjusts the frame rate of an already playing clip.  framesPerSecond is\n * optional and defaults to 30 if not specified.  A negative framesPerSecond will play the clip in reverse.\n * The element must be a stack of images\n * @param element - HTML Element\n * @param framesPerSecond - Number of frames per second\n */\nfunction playClip(\n  element: HTMLDivElement,\n  playClipOptions: CINETypes.PlayClipOptions\n): void {\n  let playClipTimeouts;\n  let playClipIsTimeVarying;\n\n  if (element === undefined) {\n    throw new Error('playClip: element must not be undefined');\n  }\n\n  const enabledElement = getEnabledElement(element);\n\n  if (!enabledElement) {\n    throw new Error(\n      'playClip: element must be a valid Cornerstone enabled element'\n    );\n  }\n\n  if (!playClipOptions) {\n    playClipOptions = {};\n  }\n\n  // 4D Cine is enabled by default\n  playClipOptions.dynamicCineEnabled =\n    playClipOptions.dynamicCineEnabled ?? true;\n\n  const { viewport } = enabledElement;\n  const volume = _getVolumeFromViewport(viewport);\n  const playClipContext = _createCinePlayContext(viewport, playClipOptions);\n  let playClipData = getToolState(element);\n\n  const isDynamicCinePlaying =\n    playClipOptions.dynamicCineEnabled && volume?.isDynamicVolume();\n\n  // If user is trying to play CINE for a 4D volume it first needs\n  // to stop CINE that has may be playing for any other viewport.\n  if (isDynamicCinePlaying) {\n    _stopDynamicVolumeCine(element);\n  }\n\n  if (!playClipData) {\n    playClipData = {\n      intervalId: undefined,\n      framesPerSecond: 30,\n      lastFrameTimeStamp: undefined,\n      ignoreFrameTimeVector: false,\n      usingFrameTimeVector: false,\n      frameTimeVector: playClipOptions.frameTimeVector ?? undefined,\n      speed: playClipOptions.frameTimeVectorSpeedMultiplier ?? 1,\n      reverse: playClipOptions.reverse ?? false,\n      loop: playClipOptions.loop ?? true,\n    };\n    addToolState(element, playClipData);\n  } else {\n    // Make sure the specified clip is not running before any property update.\n    // If a 3D CINE was playing it passes isDynamicCinePlaying as FALSE to\n    // prevent stopping a 4D CINE in case it is playing on another viewport.\n    _stopClip(element, {\n      stopDynamicCine: !isDynamicCinePlaying,\n      viewportId: viewport.id,\n    });\n  }\n\n  playClipData.dynamicCineEnabled = playClipOptions.dynamicCineEnabled;\n\n  // If a framesPerSecond is specified and is valid, update the playClipData now\n  if (\n    playClipOptions.framesPerSecond < 0 ||\n    playClipOptions.framesPerSecond > 0\n  ) {\n    playClipData.framesPerSecond = Number(playClipOptions.framesPerSecond);\n    playClipData.reverse = playClipData.framesPerSecond < 0;\n    // If framesPerSecond is given, frameTimeVector will be ignored...\n    playClipData.ignoreFrameTimeVector = true;\n  }\n\n  // Determine if frame time vector should be used instead of a fixed frame rate...\n  if (\n    playClipData.ignoreFrameTimeVector !== true &&\n    playClipData.frameTimeVector &&\n    playClipData.frameTimeVector.length === playClipContext.numScrollSteps &&\n    playClipContext.frameTimeVectorEnabled\n  ) {\n    const { timeouts, isTimeVarying } = _getPlayClipTimeouts(\n      playClipData.frameTimeVector,\n      playClipData.speed\n    );\n\n    playClipTimeouts = timeouts;\n    playClipIsTimeVarying = isTimeVarying;\n  }\n\n  // This function encapsulates the frame rendering logic...\n  const playClipAction = () => {\n    const { numScrollSteps, currentStepIndex } = playClipContext;\n    let newStepIndex = currentStepIndex + (playClipData.reverse ? -1 : 1);\n    const newStepIndexOutOfRange =\n      newStepIndex < 0 || newStepIndex >= numScrollSteps;\n\n    if (!playClipData.loop && newStepIndexOutOfRange) {\n      // If a 3D CINE was playing it passes isDynamicCinePlaying as FALSE to\n      // prevent stopping a 4D CINE in case it is playing on another viewport.\n      _stopClip(element, {\n        stopDynamicCine: !isDynamicCinePlaying,\n        viewportId: viewport.id,\n      });\n\n      const eventDetail = { element };\n\n      triggerEvent(element, CINE_EVENTS.CLIP_STOPPED, eventDetail);\n      return;\n    }\n\n    // Loop around if newStepIndex is out of range\n    if (newStepIndex >= numScrollSteps) {\n      newStepIndex = 0;\n    } else if (newStepIndex < 0) {\n      newStepIndex = numScrollSteps - 1;\n    }\n\n    const delta = newStepIndex - currentStepIndex;\n\n    if (delta) {\n      try {\n        playClipContext.scroll(delta);\n      } catch (e) {\n        console.warn('Play clip not scrolling', e);\n        _stopClipWithData(playClipData);\n        triggerEvent(element, CINE_EVENTS.CLIP_STOPPED, eventDetail);\n        return;\n      }\n    }\n  };\n\n  if (isDynamicCinePlaying) {\n    dynamicVolumesPlayingMap.set(volume.volumeId, element);\n  }\n\n  if (playClipContext.play) {\n    playClipData.framesPerSecond = playClipContext.play(\n      playClipOptions.framesPerSecond\n    );\n\n    // If playClipTimeouts array is available, not empty and its elements are NOT uniform ...\n    // ... (at least one timeout is different from the others), use alternate setTimeout implementation\n  } else if (\n    playClipTimeouts &&\n    playClipTimeouts.length > 0 &&\n    playClipIsTimeVarying\n  ) {\n    playClipData.usingFrameTimeVector = true;\n    playClipData.intervalId = window.setTimeout(\n      function playClipTimeoutHandler() {\n        playClipData.intervalId = window.setTimeout(\n          playClipTimeoutHandler,\n          playClipTimeouts[playClipContext.currentStepIndex]\n        );\n        playClipAction();\n      },\n      0\n    );\n  } else {\n    // ... otherwise user setInterval implementation which is much more efficient.\n    playClipData.usingFrameTimeVector = false;\n    playClipData.intervalId = window.setInterval(\n      playClipAction,\n      1000 / Math.abs(playClipData.framesPerSecond)\n    );\n  }\n\n  const eventDetail = {\n    element,\n  };\n\n  triggerEvent(element, CINE_EVENTS.CLIP_STARTED, eventDetail);\n}\n\n/**\n * Stops an already playing clip.\n * @param element - HTML Element\n */\nfunction stopClip(element: HTMLDivElement, options = {} as any): void {\n  _stopClip(element, {\n    stopDynamicCine: true,\n    ...options,\n  });\n}\n\nfunction _stopClip(\n  element: HTMLDivElement,\n  options = { stopDynamicCine: true, viewportId: undefined }\n) {\n  const { stopDynamicCine, viewportId } = options;\n  const enabledElement = getEnabledElement(element);\n\n  let toolState;\n  const viewport = enabledElement?.viewport;\n  if (!enabledElement) {\n    if (viewportId) {\n      toolState = getToolStateByViewportId(viewportId);\n    } else {\n      return;\n    }\n  } else {\n    const { viewport } = enabledElement;\n    toolState = getToolState(viewport.element);\n  }\n\n  if (toolState) {\n    _stopClipWithData(toolState);\n  }\n\n  if (viewport instanceof VideoViewport) {\n    viewport.pause();\n  } else if (stopDynamicCine && viewport instanceof BaseVolumeViewport) {\n    _stopDynamicVolumeCine(element);\n  }\n}\n\n/**\n * [private] Stops any CINE playing for the dynamic volume loaded on this viewport\n * @param element - HTML Element\n */\nfunction _stopDynamicVolumeCine(element) {\n  const { viewport } = getEnabledElement(element);\n  const volume = _getVolumeFromViewport(viewport);\n\n  // If the current viewport has a 4D volume loaded it may be playing\n  // if it is also loaded on another viewport and user has started CINE\n  // for that one. This guarantees the other viewport will also be stopped.\n  if (volume?.isDynamicVolume()) {\n    const dynamicCineElement = dynamicVolumesPlayingMap.get(volume.volumeId);\n\n    dynamicVolumesPlayingMap.delete(volume.volumeId);\n\n    if (dynamicCineElement && dynamicCineElement !== element) {\n      stopClip(<HTMLDivElement>dynamicCineElement);\n    }\n  }\n}\n\n/**\n * [private] Turns a Frame Time Vector (0018,1065) array into a normalized array of timeouts. Each element\n * ... of the resulting array represents the amount of time each frame will remain on the screen.\n * @param vector - A Frame Time Vector (0018,1065) as specified in section C.7.6.5.1.2 of DICOM standard.\n * @param speed - A speed factor which will be applied to each element of the resulting array.\n * @returns An array with timeouts for each animation frame.\n */\nfunction _getPlayClipTimeouts(vector: number[], speed: number) {\n  let i;\n  let sample;\n  let delay;\n  let sum = 0;\n  const limit = vector.length;\n  const timeouts = [];\n\n  // Initialize time varying to false\n  let isTimeVarying = false;\n\n  if (typeof speed !== 'number' || speed <= 0) {\n    speed = 1;\n  }\n\n  // First element of a frame time vector must be discarded\n  for (i = 1; i < limit; i++) {\n    // eslint-disable-next-line no-bitwise\n    delay = (Number(vector[i]) / speed) | 0; // Integral part only\n    timeouts.push(delay);\n    if (i === 1) {\n      // Use first item as a sample for comparison\n      sample = delay;\n    } else if (delay !== sample) {\n      isTimeVarying = true;\n    }\n\n    sum += delay;\n  }\n\n  if (timeouts.length > 0) {\n    if (isTimeVarying) {\n      // If it's a time varying vector, make the last item an average...\n      // eslint-disable-next-line no-bitwise\n      delay = (sum / timeouts.length) | 0;\n    } else {\n      delay = timeouts[0];\n    }\n\n    timeouts.push(delay);\n  }\n\n  return { timeouts, isTimeVarying };\n}\n\n/**\n * [private] Performs the heavy lifting of stopping an ongoing animation.\n * @param element - HTML Element\n * @param playClipData - The data from playClip that needs to be stopped.\n */\nfunction _stopClipWithData(playClipData) {\n  const id = playClipData.intervalId;\n\n  if (typeof id !== 'undefined') {\n    playClipData.intervalId = undefined;\n    if (playClipData.usingFrameTimeVector) {\n      clearTimeout(id);\n    } else {\n      clearInterval(id);\n    }\n  }\n}\n\nfunction _getVolumesFromViewport(viewport): Types.IImageVolume[] {\n  return viewport\n    .getActors()\n    .map((actor) => cache.getVolume(actor.uid))\n    .filter((volume) => !!volume);\n}\n\nfunction _getVolumeFromViewport(viewport): Types.IImageVolume {\n  const volumes = _getVolumesFromViewport(viewport);\n  const dynamicVolume = volumes.find((volume) => volume.isDynamicVolume());\n\n  return dynamicVolume ?? volumes[0];\n}\n\nfunction _createStackViewportCinePlayContext(\n  viewport: StackViewport,\n  waitForRendered: number\n): CINETypes.CinePlayContext {\n  const imageIds = viewport.getImageIds();\n\n  return {\n    get numScrollSteps(): number {\n      return imageIds.length;\n    },\n    get currentStepIndex(): number {\n      return viewport.getTargetImageIdIndex();\n    },\n    get frameTimeVectorEnabled(): boolean {\n      // It is always in acquired orientation\n      return true;\n    },\n    waitForRenderedCount: 0,\n    scroll(delta: number): void {\n      if (\n        this.waitForRenderedCount <= waitForRendered &&\n        viewport.viewportStatus !== ViewportStatus.RENDERED\n      ) {\n        this.waitForRenderedCount++;\n        return;\n      }\n      this.waitForRenderedCount = 0;\n      scroll(viewport, { delta, debounceLoading: debounced });\n    },\n  };\n}\n\nfunction _createVideoViewportCinePlayContext(\n  viewport: VideoViewport,\n  waitForRendered: number\n): CINETypes.CinePlayContext {\n  return {\n    get numScrollSteps(): number {\n      return viewport.getNumberOfSlices();\n    },\n    get currentStepIndex(): number {\n      return viewport.getSliceIndex();\n    },\n    get frameTimeVectorEnabled(): boolean {\n      // It is always in acquired orientation\n      return true;\n    },\n    waitForRenderedCount: 0,\n    scroll(delta: number): void {\n      if (\n        this.waitForRenderedCount <= waitForRendered &&\n        viewport.viewportStatus !== ViewportStatus.RENDERED\n      ) {\n        this.waitForRenderedCount++;\n        return;\n      }\n      this.waitForRenderedCount = 0;\n      scroll(viewport, { delta, debounceLoading: debounced });\n    },\n    play(fps?: number): number {\n      if (fps) {\n        // This is a bit of a kludge to correspond to playback rates\n        // for other viewports\n        viewport.setPlaybackRate(fps / 24);\n      }\n      viewport.play();\n      return viewport.getFrameRate();\n    },\n  };\n}\n\nfunction _createVolumeViewportCinePlayContext(\n  viewport: VolumeViewport,\n  volume: Types.IImageVolume\n): CINETypes.CinePlayContext {\n  const { volumeId } = volume;\n  const cachedScrollInfo = {\n    viewPlaneNormal: vec3.create(),\n    scrollInfo: null,\n  };\n\n  const getScrollInfo = () => {\n    const camera = viewport.getCamera();\n    const updateCache =\n      !cachedScrollInfo.scrollInfo ||\n      !vec3.equals(camera.viewPlaneNormal, cachedScrollInfo.viewPlaneNormal);\n\n    // Number of steps would change only after rotating the volume so it\n    // caches the result and recomputes only when necessary. Until it is\n    // rotated the current frame is updated locally\n    if (updateCache) {\n      const scrollInfo = csUtils.getVolumeViewportScrollInfo(\n        viewport,\n        volumeId\n      );\n\n      cachedScrollInfo.viewPlaneNormal = camera.viewPlaneNormal;\n      cachedScrollInfo.scrollInfo = scrollInfo;\n    }\n\n    return cachedScrollInfo.scrollInfo;\n  };\n\n  return {\n    get numScrollSteps(): number {\n      return getScrollInfo().numScrollSteps;\n    },\n    get currentStepIndex(): number {\n      return getScrollInfo().currentStepIndex;\n    },\n    get frameTimeVectorEnabled(): boolean {\n      const camera = viewport.getCamera();\n      const volumeViewPlaneNormal = volume.direction\n        .slice(6, 9)\n        .map((x) => -x) as Types.Point3;\n      const dot = vec3.dot(volumeViewPlaneNormal, camera.viewPlaneNormal);\n\n      // Check if the volume is in acquired orientation\n      // it may be flipped or rotated in plane\n      return glMatrix.equals(dot, 1);\n    },\n    scroll(delta: number): void {\n      getScrollInfo().currentStepIndex += delta;\n      scroll(viewport, { delta });\n    },\n  };\n}\n\nfunction _createDynamicVolumeViewportCinePlayContext(\n  volume: Types.IDynamicImageVolume\n): CINETypes.CinePlayContext {\n  return {\n    get numScrollSteps(): number {\n      return volume.numTimePoints;\n    },\n    get currentStepIndex(): number {\n      return volume.timePointIndex;\n    },\n    get frameTimeVectorEnabled(): boolean {\n      // Looping throught time does not uses frameTimeVector\n      return false;\n    },\n    scroll(delta: number): void {\n      // Updating this property (setter) makes it move to the desired time point\n      volume.timePointIndex += delta;\n    },\n  };\n}\n\nfunction _createCinePlayContext(\n  viewport,\n  playClipOptions: CINETypes.PlayClipOptions\n): CINETypes.CinePlayContext {\n  if (viewport instanceof StackViewport) {\n    return _createStackViewportCinePlayContext(\n      viewport,\n      playClipOptions.waitForRendered ?? 30\n    );\n  }\n\n  if (viewport instanceof VolumeViewport) {\n    const volume = _getVolumeFromViewport(viewport);\n\n    if (playClipOptions.dynamicCineEnabled && volume?.isDynamicVolume()) {\n      return _createDynamicVolumeViewportCinePlayContext(\n        <Types.IDynamicImageVolume>volume\n      );\n    }\n\n    return _createVolumeViewportCinePlayContext(viewport, volume);\n  }\n\n  if (viewport instanceof VideoViewport) {\n    return _createVideoViewportCinePlayContext(\n      viewport,\n      playClipOptions.waitForRendered ?? 30\n    );\n  }\n\n  throw new Error('Unknown viewport type');\n}\n\nexport { playClip, stopClip };\n","/**\n * Clips a value to an upper and lower bound.\n * @export @public @method\n * @name clip\n *\n * @param  {number} val  The value to clip.\n * @param  {number} low  The lower bound.\n * @param  {number} high The upper bound.\n * @returns {number}      The clipped value.\n */\nexport function clip(val, low, high) {\n  return Math.min(Math.max(low, val), high);\n}\n\n/**\n * Clips a value within a box.\n * @export @public @method\n * @name clipToBox\n *\n * @param  {Object} point The point to clip\n * @param  {Object} box   The bounding box to clip to.\n * @returns {Object}       The clipped point.\n */\nexport function clipToBox(point, box) {\n  // Clip an {x, y} point to a box of size {width, height}\n  point.x = clip(point.x, 0, box.width);\n  point.y = clip(point.y, 0, box.height);\n}\n\nexport default clip;\n","import { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nimport { ContourSegmentationAnnotation } from '../../types';\n\n/**\n * Adds a contour segmentation annotation to the specified segmentation.\n * @param annotation - The contour segmentation annotation to add.\n */\nexport function addContourSegmentationAnnotation(\n  annotation: ContourSegmentationAnnotation\n) {\n  if (annotation.parentAnnotationUID) {\n    // Don't add it for parent annotations - this happens during interpolation\n    return;\n  }\n  if (!annotation.data.segmentation) {\n    throw new Error(\n      'addContourSegmentationAnnotation: annotation does not have a segmentation data'\n    );\n  }\n\n  const { segmentationId, segmentIndex } = annotation.data.segmentation;\n  const segmentation = getSegmentation(segmentationId);\n\n  if (!segmentation.representationData.CONTOUR) {\n    segmentation.representationData.CONTOUR = { annotationUIDsMap: new Map() };\n  }\n\n  const { annotationUIDsMap } = segmentation.representationData.CONTOUR;\n\n  let annotationsUIDsSet = annotationUIDsMap.get(segmentIndex);\n\n  if (!annotationsUIDsSet) {\n    annotationsUIDsSet = new Set();\n    annotationUIDsMap.set(segmentIndex, annotationsUIDsSet);\n  }\n\n  annotationUIDsMap.set(\n    segmentIndex,\n    annotationsUIDsSet.add(annotation.annotationUID)\n  );\n}\n","import { state } from '../../stateManagement/segmentation';\nimport { ContourSegmentationAnnotation } from '../../types';\n\n/**\n * Removes a contour segmentation annotation from the given annotation.\n * If the annotation does not have a segmentation data, this method returns\n * quietly.  This can occur for interpolated segmentations that have not yet\n * been converted to real segmentations or other in-process segmentations.\n * @param annotation - The contour segmentation annotation to remove.\n */\nexport function removeContourSegmentationAnnotation(\n  annotation: ContourSegmentationAnnotation\n) {\n  if (!annotation.data.segmentation) {\n    throw new Error(\n      'removeContourSegmentationAnnotation: annotation does not have a segmentation data'\n    );\n  }\n\n  const { segmentationId, segmentIndex } = annotation.data.segmentation;\n  const segmentation = state.getSegmentation(segmentationId);\n  const { annotationUIDsMap } = segmentation?.representationData.CONTOUR || {};\n  const annotationsUIDsSet = annotationUIDsMap?.get(segmentIndex);\n\n  if (!annotationsUIDsSet) {\n    return;\n  }\n\n  annotationsUIDsSet.delete(annotation.annotationUID);\n\n  // Delete segmentIndex Set if there is no more annotations\n  if (!annotationsUIDsSet.size) {\n    annotationUIDsMap.delete(segmentIndex);\n  }\n}\n","/**\n * Calculates the perimeter of a polyline.\n *\n * @param polyline - The polyline represented as an array of points.\n * @param closed - Indicates whether the polyline is closed or not.\n * @returns The perimeter of the polyline.\n */\nfunction calculatePerimeter(polyline: number[][], closed: boolean): number {\n  let perimeter = 0;\n\n  for (let i = 0; i < polyline.length - 1; i++) {\n    const point1 = polyline[i];\n    const point2 = polyline[i + 1];\n    perimeter += Math.sqrt(\n      Math.pow(point2[0] - point1[0], 2) + Math.pow(point2[1] - point1[1], 2)\n    );\n  }\n\n  if (closed) {\n    const firstPoint = polyline[0];\n    const lastPoint = polyline[polyline.length - 1];\n    perimeter += Math.sqrt(\n      Math.pow(lastPoint[0] - firstPoint[0], 2) +\n        Math.pow(lastPoint[1] - firstPoint[1], 2)\n    );\n  }\n\n  return perimeter;\n}\n\nexport default calculatePerimeter;\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\nimport { ContourAnnotation } from '../../types/ToolSpecificAnnotationTypes';\n\nconst { isEqual } = csUtils;\n\n/**\n * Finds the index in the polyline of the specified handle.  If the handle\n * doesn't match a polyline point, then finds the closest polyline point.\n *\n * Assumes polyline is in the same orientation as the handles.\n *\n * @param annotation - to find the polyline and handles in\n * @param handleIndex - the index of hte handle to look for.\n *     Negative values are treated relative to the end of the handle index.\n * @returns Index in polyline of the closest handle\n *     * 0 for handleIndex 0\n *     * length for `handleIndex===handles length`\n */\nexport default function findHandlePolylineIndex(\n  annotation: ContourAnnotation,\n  handleIndex: number\n): number {\n  const { polyline } = annotation.data.contour;\n  const { points } = annotation.data.handles;\n  const { length } = points;\n  if (handleIndex === length) {\n    return polyline.length;\n  }\n  if (handleIndex < 0) {\n    handleIndex = (handleIndex + length) % length;\n  }\n  if (handleIndex === 0) {\n    return 0;\n  }\n  const handle = points[handleIndex];\n  const index = polyline.findIndex((point) => isEqual(handle, point));\n  if (index !== -1) {\n    return index;\n  }\n  // Need to find nearest\n  let closestDistance = Infinity;\n  return polyline.reduce((closestIndex, point, testIndex) => {\n    const distance = vec3.squaredDistance(point, handle);\n    if (distance < closestDistance) {\n      closestDistance = distance;\n      return testIndex;\n    }\n    return closestIndex;\n  }, -1);\n}\n","import { cache as cornerstoneCache } from '@cornerstonejs/core';\nimport vtkImageMarchingSquares from '@kitware/vtk.js/Filters/General/ImageMarchingSquares';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\n\nimport { getDeduplicatedVTKPolyDataPoints } from '../contours';\nimport { findContoursFromReducedSet } from './contourFinder';\nimport SegmentationRepresentations from '../../enums/SegmentationRepresentations';\n\nconst { Labelmap } = SegmentationRepresentations;\n\nfunction generateContourSetsFromLabelmap({ segmentations }) {\n  const { representationData, segments = [0, 1] } = segmentations;\n  const { volumeId: segVolumeId } = representationData[Labelmap];\n\n  // Get segmentation volume\n  const vol = cornerstoneCache.getVolume(segVolumeId);\n  if (!vol) {\n    console.warn(`No volume found for ${segVolumeId}`);\n    return;\n  }\n\n  const numSlices = vol.dimensions[2];\n\n  // NOTE: Workaround for marching squares not finding closed contours at\n  // boundary of image volume, clear pixels along x-y border of volume\n  const segData = vol.imageData.getPointData().getScalars().getData();\n  const pixelsPerSlice = vol.dimensions[0] * vol.dimensions[1];\n\n  for (let z = 0; z < numSlices; z++) {\n    for (let y = 0; y < vol.dimensions[1]; y++) {\n      const index = y * vol.dimensions[0] + z * pixelsPerSlice;\n      segData[index] = 0;\n      segData[index + vol.dimensions[0] - 1] = 0;\n    }\n  }\n\n  // end workaround\n  //\n  //\n  const ContourSets = [];\n\n  const { FrameOfReferenceUID } = vol.metadata;\n  // Iterate through all segments in current segmentation set\n  const numSegments = segments.length;\n  for (let segIndex = 0; segIndex < numSegments; segIndex++) {\n    const segment = segments[segIndex];\n\n    // Skip empty segments\n    if (!segment) {\n      continue;\n    }\n\n    const sliceContours = [];\n    const scalars = vtkDataArray.newInstance({\n      name: 'Scalars',\n      numberOfComponents: 1,\n      size: pixelsPerSlice * numSlices,\n      dataType: 'Uint8Array',\n    });\n    const { containedSegmentIndices } = segment;\n    for (let sliceIndex = 0; sliceIndex < numSlices; sliceIndex++) {\n      // Check if the slice is empty before running marching cube\n      if (\n        isSliceEmptyForSegment(sliceIndex, segData, pixelsPerSlice, segIndex)\n      ) {\n        continue;\n      }\n      const frameStart = sliceIndex * pixelsPerSlice;\n\n      try {\n        // Modify segData for this specific segment directly\n        for (let i = 0; i < pixelsPerSlice; i++) {\n          const value = segData[i + frameStart];\n          if (value === segIndex || containedSegmentIndices?.has(value)) {\n            (scalars as any).setValue(i + frameStart, 1);\n          } else {\n            (scalars as any).setValue(i, 0);\n          }\n        }\n\n        const mSquares = vtkImageMarchingSquares.newInstance({\n          slice: sliceIndex,\n        });\n\n        // filter out the scalar data so that only it has background and\n        // the current segment index\n        const imageDataCopy = vtkImageData.newInstance();\n\n        imageDataCopy.shallowCopy(vol.imageData);\n        imageDataCopy.getPointData().setScalars(scalars);\n\n        // Connect pipeline\n        mSquares.setInputData(imageDataCopy);\n        const cValues = [1];\n        mSquares.setContourValues(cValues);\n        mSquares.setMergePoints(false);\n\n        // Perform marching squares\n        const msOutput = mSquares.getOutputData();\n\n        // Clean up output from marching squares\n        const reducedSet = getDeduplicatedVTKPolyDataPoints(msOutput);\n        if (reducedSet.points?.length) {\n          const contours = findContoursFromReducedSet(reducedSet.lines);\n\n          sliceContours.push({\n            contours,\n            polyData: reducedSet,\n            FrameNumber: sliceIndex + 1,\n            sliceIndex,\n            FrameOfReferenceUID,\n          });\n        }\n      } catch (e) {\n        console.warn(sliceIndex);\n        console.warn(e);\n      }\n    }\n\n    const metadata = {\n      FrameOfReferenceUID,\n    };\n\n    const ContourSet = {\n      label: segment.label,\n      color: segment.color,\n      metadata,\n      sliceContours,\n    };\n\n    ContourSets.push(ContourSet);\n  }\n\n  return ContourSets;\n}\n\nfunction isSliceEmptyForSegment(sliceIndex, segData, pixelsPerSlice, segIndex) {\n  const startIdx = sliceIndex * pixelsPerSlice;\n  const endIdx = startIdx + pixelsPerSlice;\n\n  for (let i = startIdx; i < endIdx; i++) {\n    if (segData[i] === segIndex) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport { generateContourSetsFromLabelmap };\n","import RectangleROIStartEndThreshold from './RectangleROIStartEndThreshold';\n\nfunction validateAnnotation(annotation) {\n  if (!annotation?.data) {\n    throw new Error('Tool data is empty');\n  }\n\n  if (!annotation.metadata || annotation.metadata.referenceImageId) {\n    throw new Error('Tool data is not associated with any imageId');\n  }\n}\n\nclass AnnotationToPointData {\n  static TOOL_NAMES: Record<string, any> = {};\n\n  constructor() {\n    // empty\n  }\n\n  static convert(annotation, index, metadataProvider) {\n    validateAnnotation(annotation);\n\n    const { toolName } = annotation.metadata;\n    const toolClass = AnnotationToPointData.TOOL_NAMES[toolName];\n\n    if (!toolClass) {\n      throw new Error(\n        `Unknown tool type: ${toolName}, cannot convert to RTSSReport`\n      );\n    }\n\n    // Each toolData should become a list of contours, ContourSequence\n    // contains a list of contours with their pointData, their geometry\n    // type and their length.\n    const ContourSequence = toolClass.getContourSequence(\n      annotation,\n      metadataProvider\n    );\n\n    // Todo: random rgb color for now, options should be passed in\n    const color = [\n      Math.floor(Math.random() * 255),\n      Math.floor(Math.random() * 255),\n      Math.floor(Math.random() * 255),\n    ];\n\n    return {\n      ReferencedROINumber: index + 1,\n      ROIDisplayColor: color,\n      ContourSequence,\n    };\n  }\n\n  static register(toolClass) {\n    AnnotationToPointData.TOOL_NAMES[toolClass.toolName] = toolClass;\n  }\n}\n\nAnnotationToPointData.register(RectangleROIStartEndThreshold);\n\nexport default AnnotationToPointData;\n","import type { Types } from '@cornerstonejs/core';\nimport type { Annotation } from '../../types';\nimport getContourHolesDataWorld from './getContourHolesDataWorld';\n\n/**\n * Get the polylines for the child annotations (holes)\n * @param annotation - Annotation\n * @param viewport - Viewport used to convert the points from world to canvas space\n * @returns An array that contains all child polylines\n */\nexport default function getContourHolesDataCanvas(\n  annotation: Annotation,\n  viewport: Types.IViewport\n): Types.Point2[][] {\n  const worldHoleContours = getContourHolesDataWorld(annotation);\n  const canvasHoleContours = [];\n\n  worldHoleContours.forEach((worldHoleContour) => {\n    const numPoints = worldHoleContour.length;\n\n    // Pre-allocated arrays are 3-4x faster than multiple \"push()\" calls\n    const canvasHoleContour: Types.Point2[] = new Array(numPoints);\n\n    // Using FOR loop instead of map() for better performance when processing large arrays\n    for (let i = 0; i < numPoints; i++) {\n      canvasHoleContour[i] = viewport.worldToCanvas(worldHoleContour[i]);\n    }\n\n    canvasHoleContours.push(canvasHoleContour);\n  });\n\n  return canvasHoleContours;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport type { Annotation, ContourAnnotation } from '../../types';\nimport { getAnnotation } from '../../stateManagement';\n\n/**\n * Get child polylines data in world space for contour annotations that represent the holes\n * @param annotation - Annotation\n * @param viewport - Viewport used to convert the points from world to canvas space\n * @returns An array that contains all child polylines (holes) in world space\n */\nexport default function getContourHolesDataWorld(\n  annotation: Annotation\n): Types.Point3[][] {\n  const childAnnotationUIDs = annotation.childAnnotationUIDs ?? [];\n\n  return childAnnotationUIDs.map(\n    (uid) => (getAnnotation(uid) as ContourAnnotation).data.contour.polyline\n  );\n}\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport { Types } from '@cornerstonejs/core';\nimport type { ContourAnnotation } from '../../types';\nimport type { ContourWindingDirection } from '../../types/ContourAnnotation';\nimport * as math from '../math';\nimport {\n  getParentAnnotation,\n  invalidateAnnotation,\n} from '../../stateManagement';\n\n/**\n * Update the contour polyline data\n * @param annotation - Contour annotation\n * @param viewport - Viewport\n * @param polylineData - Polyline data (points, winding direction and closed)\n * @param transforms - Methods to convert points to/from canvas and world spaces\n * @param options - Options\n *   - decimate: allow to set some parameters to decimate the polyline reducing\n *   the amount of points stored which also affects how fast it will draw the\n *   annotation in a viewport, compute the winding direction, append/remove\n *   contours and create holes. A higher `epsilon` value results in a polyline\n *   with less points.\n */\nexport default function updateContourPolyline(\n  annotation: ContourAnnotation,\n  polylineData: {\n    points: Types.Point2[];\n    closed?: boolean;\n    targetWindingDirection?: ContourWindingDirection;\n  },\n  transforms: {\n    canvasToWorld: (point: Types.Point2) => Types.Point3;\n    worldToCanvas: (point: Types.Point3) => Types.Point2;\n  },\n  options?: {\n    decimate?: {\n      enabled?: boolean;\n      epsilon?: number;\n    };\n  }\n) {\n  const { canvasToWorld, worldToCanvas } = transforms;\n  const { data } = annotation;\n  const { targetWindingDirection } = polylineData;\n  let { points: polyline } = polylineData;\n\n  // Decimate the polyline to reduce tha amount of points\n  if (options?.decimate?.enabled) {\n    polyline = math.polyline.decimate(\n      polylineData.points,\n      options?.decimate?.epsilon\n    );\n  }\n\n  let { closed } = polylineData;\n  const numPoints = polyline.length;\n  const polylineWorldPoints = new Array(numPoints);\n  const currentPolylineWindingDirection =\n    math.polyline.getWindingDirection(polyline);\n  const parentAnnotation = getParentAnnotation(annotation) as ContourAnnotation;\n\n  if (closed === undefined) {\n    let currentClosedState = false;\n\n    // With two points it is just a line and do not make sense to consider it closed\n    if (polyline.length > 3) {\n      const lastToFirstDist = math.point.distanceToPointSquared(\n        polyline[0],\n        polyline[numPoints - 1]\n      );\n\n      currentClosedState = csUtils.isEqual(0, lastToFirstDist);\n    }\n\n    closed = currentClosedState;\n  }\n\n  // It must be in the opposite direction if it is a child annotation (hole)\n  let windingDirection = parentAnnotation\n    ? parentAnnotation.data.contour.windingDirection * -1\n    : targetWindingDirection;\n\n  if (windingDirection === undefined) {\n    windingDirection = currentPolylineWindingDirection;\n  }\n\n  if (windingDirection !== currentPolylineWindingDirection) {\n    polyline.reverse();\n  }\n\n  const handlePoints = data.handles.points.map((p) => worldToCanvas(p));\n\n  if (handlePoints.length > 2) {\n    const currentHandlesWindingDirection =\n      math.polyline.getWindingDirection(handlePoints);\n\n    if (currentHandlesWindingDirection !== windingDirection) {\n      data.handles.points.reverse();\n    }\n  }\n\n  for (let i = 0; i < numPoints; i++) {\n    polylineWorldPoints[i] = canvasToWorld(polyline[i]);\n  }\n\n  data.contour.polyline = polylineWorldPoints;\n  data.contour.closed = closed;\n  data.contour.windingDirection = windingDirection;\n\n  invalidateAnnotation(annotation);\n}\n","import isObject from './isObject';\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', debounce(calculateLayout, 150))\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }))\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = debounce(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * jQuery(source).on('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nfunction debounce(func, wait, options) {\n  let lastArgs, lastThis, maxWait, result, timerId, lastCallTime;\n\n  let lastInvokeTime = 0;\n  let leading = false;\n  let maxing = false;\n  let trailing = true;\n\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n  const useRAF =\n    !wait && wait !== 0 && typeof window.requestAnimationFrame === 'function';\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  wait = Number(wait) || 0;\n  if (isObject(options)) {\n    leading = Boolean(options.leading);\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;\n  }\n\n  function invokeFunc(time) {\n    const args = lastArgs;\n    const thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n\n    return result;\n  }\n\n  function startTimer(pendingFunc, wait) {\n    if (useRAF) {\n      return window.requestAnimationFrame(pendingFunc);\n    }\n\n    return setTimeout(pendingFunc, wait);\n  }\n\n  function cancelTimer(id) {\n    if (useRAF) {\n      return window.cancelAnimationFrame(id);\n    }\n    clearTimeout(id);\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = startTimer(timerExpired, wait);\n\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n    const timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (\n      lastCallTime === undefined ||\n      timeSinceLastCall >= wait ||\n      timeSinceLastCall < 0 ||\n      (maxing && timeSinceLastInvoke >= maxWait)\n    );\n  }\n\n  function timerExpired() {\n    const time = Date.now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = startTimer(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      cancelTimer(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(Date.now());\n  }\n\n  function pending() {\n    return timerId !== undefined;\n  }\n\n  function debounced(...args) {\n    const time = Date.now();\n    const isInvoking = shouldInvoke(time);\n\n    lastArgs = args;\n    lastThis = this; // eslint-disable-line consistent-this\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = startTimer(timerExpired, wait);\n\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = startTimer(timerExpired, wait);\n    }\n\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  debounced.pending = pending;\n\n  return debounced;\n}\n\nexport default debounce;\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Determine the coordinates that will place the textbox to the right of the\n * annotation.\n *\n * @param annotationCanvasPoints - The canvas points of the annotation's handles.\n * @returns - The coordinates for default placement of the textbox.\n */\nexport default function getTextBoxCoordsCanvas(\n  annotationCanvasPoints: Array<Types.Point2>\n): Types.Point2 {\n  const corners = _determineCorners(annotationCanvasPoints);\n  const centerY = (corners.top[1] + corners.bottom[1]) / 2;\n  const textBoxCanvas = <Types.Point2>[corners.right[0], centerY];\n\n  return textBoxCanvas;\n}\n\n/**\n * Determine the handles that have the min/max x and y values.\n *\n * @param canvasPoints - The canvas points of the annotation's handles.\n * @returns - The top, left, bottom, and right handles.\n */\nfunction _determineCorners(canvasPoints: Array<Types.Point2>) {\n  const handlesLeftToRight = [canvasPoints[0], canvasPoints[1]].sort(_compareX);\n  const handlesTopToBottom = [canvasPoints[0], canvasPoints[1]].sort(_compareY);\n  const right = handlesLeftToRight[handlesLeftToRight.length - 1];\n  const top = handlesTopToBottom[0];\n  const bottom = handlesTopToBottom[handlesTopToBottom.length - 1];\n\n  return {\n    top,\n    bottom,\n    right,\n  };\n\n  function _compareX(a, b) {\n    return a[0] < b[0] ? -1 : 1;\n  }\n  function _compareY(a, b) {\n    return a[1] < b[1] ? -1 : 1;\n  }\n}\n","import { Enums, utilities } from '@cornerstonejs/core';\n\nconst { CalibrationTypes } = Enums;\nconst PIXEL_UNITS = 'px';\n\nconst SUPPORTED_REGION_DATA_TYPES = [\n  1, // Tissue\n];\n\nconst SUPPORTED_LENGTH_VARIANT = [\n  '3,3', // x: cm  &  y:cm\n];\n\nconst SUPPORTED_PROBE_VARIANT = [\n  '4,3', // x: seconds  &  y : cm\n];\n\nconst UNIT_MAPPING = {\n  0: 'px',\n  1: 'percent',\n  2: 'dB',\n  3: 'cm',\n  4: 'seconds',\n  5: 'hertz',\n  6: 'dB/seconds',\n  7: 'cm/sec',\n  8: 'cm\\xb2',\n  9: 'cm\\xb2/s',\n  0xc: 'degrees',\n};\n\nconst EPS = 1e-3;\nconst SQUARE = '\\xb2';\n/**\n * Extracts the calibrated length units, area units, and the scale\n * for converting from internal spacing to image spacing.\n *\n * @param handles - to detect if spacing information is different between points\n * @param image - to extract the calibration from\n * @returns Object containing the units, area units, and scale\n */\nconst getCalibratedLengthUnitsAndScale = (image, handles) => {\n  const { calibration, hasPixelSpacing } = image;\n  let units = hasPixelSpacing ? 'mm' : PIXEL_UNITS;\n  let areaUnits = units + SQUARE;\n  let scale = 1;\n  let calibrationType = '';\n\n  if (\n    !calibration ||\n    (!calibration.type && !calibration.sequenceOfUltrasoundRegions)\n  ) {\n    return { units, areaUnits, scale };\n  }\n\n  if (calibration.type === CalibrationTypes.UNCALIBRATED) {\n    return { units: PIXEL_UNITS, areaUnits: PIXEL_UNITS + SQUARE, scale };\n  }\n\n  if (calibration.sequenceOfUltrasoundRegions) {\n    let imageIndex1, imageIndex2;\n    if (Array.isArray(handles) && handles.length === 2) {\n      [imageIndex1, imageIndex2] = handles;\n    } else if (typeof handles === 'function') {\n      const points = handles();\n      imageIndex1 = points[0];\n      imageIndex2 = points[1];\n    }\n\n    let regions = calibration.sequenceOfUltrasoundRegions.filter(\n      (region) =>\n        imageIndex1[0] >= region.regionLocationMinX0 &&\n        imageIndex1[0] <= region.regionLocationMaxX1 &&\n        imageIndex1[1] >= region.regionLocationMinY0 &&\n        imageIndex1[1] <= region.regionLocationMaxY1 &&\n        imageIndex2[0] >= region.regionLocationMinX0 &&\n        imageIndex2[0] <= region.regionLocationMaxX1 &&\n        imageIndex2[1] >= region.regionLocationMinY0 &&\n        imageIndex2[1] <= region.regionLocationMaxY1\n    );\n\n    // If we are not in a region at all we should show the underlying calibration\n    // which might be the mm spacing for the image\n    if (!regions?.length) {\n      return { units, areaUnits, scale };\n    }\n\n    // if we are in a region then it is the question of whether we support it\n    // or not. If we do not support it we should show px\n\n    regions = regions.filter(\n      (region) =>\n        SUPPORTED_REGION_DATA_TYPES.includes(region.regionDataType) &&\n        SUPPORTED_LENGTH_VARIANT.includes(\n          `${region.physicalUnitsXDirection},${region.physicalUnitsYDirection}`\n        )\n    );\n\n    if (!regions.length) {\n      return { units: PIXEL_UNITS, areaUnits: PIXEL_UNITS + SQUARE, scale };\n    }\n\n    // Todo: expand on this logic\n    const region = regions[0];\n\n    const physicalDeltaX = Math.abs(region.physicalDeltaX);\n    const physicalDeltaY = Math.abs(region.physicalDeltaY);\n\n    // if we are in a supported region then we should check if the\n    // physicalDeltaX and physicalDeltaY are the same. If they are not\n    // then we should show px again, but if they are the same then we should\n    // show the units\n    const isSamePhysicalDelta = utilities.isEqual(\n      physicalDeltaX,\n      physicalDeltaY,\n      EPS\n    );\n\n    if (isSamePhysicalDelta) {\n      // 1 to 1 aspect ratio, we use just one of them\n      scale = 1 / physicalDeltaX;\n      calibrationType = 'US Region';\n      units = UNIT_MAPPING[region.physicalUnitsXDirection] || 'unknown';\n      areaUnits = units + SQUARE;\n    } else {\n      // here we are showing at the aspect ratio of the physical delta\n      // if they are not the same, then we should show px, but the correct solution\n      // is to grab each point separately and scale them individually\n      // Todo: implement this\n      return { units: PIXEL_UNITS, areaUnits: PIXEL_UNITS + SQUARE, scale };\n    }\n  } else if (calibration.scale) {\n    scale = calibration.scale;\n  }\n\n  // everything except REGION/Uncalibrated\n  const types = [\n    CalibrationTypes.ERMF,\n    CalibrationTypes.USER,\n    CalibrationTypes.ERROR,\n    CalibrationTypes.PROJECTION,\n  ];\n\n  if (types.includes(calibration?.type)) {\n    calibrationType = calibration.type;\n  }\n\n  return {\n    units: units + (calibrationType ? ` ${calibrationType}` : ''),\n    areaUnits: areaUnits + (calibrationType ? ` ${calibrationType}` : ''),\n    scale,\n  };\n};\n\nconst getCalibratedProbeUnitsAndValue = (image, handles) => {\n  const [imageIndex] = handles;\n  const { calibration } = image;\n  let units = ['raw'];\n  let values = [null];\n  let calibrationType = '';\n\n  if (\n    !calibration ||\n    (!calibration.type && !calibration.sequenceOfUltrasoundRegions)\n  ) {\n    return { units, values };\n    // Todo: add support for other scenarios\n  }\n\n  if (calibration.sequenceOfUltrasoundRegions) {\n    // for Probe tool\n    const supportedRegionsMetadata =\n      calibration.sequenceOfUltrasoundRegions.filter(\n        (region) =>\n          SUPPORTED_REGION_DATA_TYPES.includes(region.regionDataType) &&\n          SUPPORTED_PROBE_VARIANT.includes(\n            `${region.physicalUnitsXDirection},${region.physicalUnitsYDirection}`\n          )\n      );\n\n    if (!supportedRegionsMetadata?.length) {\n      return { units, values };\n    }\n\n    const region = supportedRegionsMetadata.find(\n      (region) =>\n        imageIndex[0] >= region.regionLocationMinX0 &&\n        imageIndex[0] <= region.regionLocationMaxX1 &&\n        imageIndex[1] >= region.regionLocationMinY0 &&\n        imageIndex[1] <= region.regionLocationMaxY1\n    );\n\n    if (!region) {\n      return { units, values };\n    }\n\n    // Todo: I think this is a ok assumption for now that if the referencePixelX0 and referencePixelY0\n    // are not defined, then we can assume 0 for them\n    const { referencePixelX0 = 0, referencePixelY0 = 0 } = region;\n    const { physicalDeltaX, physicalDeltaY } = region;\n\n    const yValue =\n      (imageIndex[1] - region.regionLocationMinY0 - referencePixelY0) *\n      physicalDeltaY;\n\n    const xValue =\n      (imageIndex[0] - region.regionLocationMinX0 - referencePixelX0) *\n      physicalDeltaX;\n\n    calibrationType = 'US Region';\n    values = [xValue, yValue];\n    units = [\n      UNIT_MAPPING[region.physicalUnitsXDirection],\n      UNIT_MAPPING[region.physicalUnitsYDirection],\n    ];\n  }\n\n  return {\n    units,\n    values,\n    calibrationType,\n  };\n};\n\n/** Gets the aspect ratio of the screen display relative to the image\n * display in order to square up measurement values.\n * That is, suppose the spacing on the image is 1, 0.5 (x,y spacing)\n * This is displayed at 1, 1 spacing on screen, then the\n * aspect value will be 1/0.5 = 2\n */\nconst getCalibratedAspect = (image) => image.calibration?.aspect || 1;\n\nexport {\n  getCalibratedLengthUnitsAndScale,\n  getCalibratedAspect,\n  getCalibratedProbeUnitsAndValue,\n};\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport type { vtkImageData } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport { vec3 } from 'gl-matrix';\nimport { BoundsIJK } from '../types';\nimport { getBoundingBoxAroundShapeIJK } from './boundingBox';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * Given an imageData, and the great circle top and bottom points of a sphere,\n * this function will run the callback for each point of the imageData that is\n * within the sphere defined by the great circle points. If the viewport\n * is provided, region of interest will be an accurate approximation of the\n * sphere (using viewport camera), and the resulting performance will be\n * better.\n *\n * @privateRemarks great circle also known as orthodrome is the intersection of\n * the sphere and the plane that passes through the center of the sphere\n *\n * @param imageData - The volume imageData\n * @param circlePoints - bottom and top points of the great circle in world coordinates\n * @param callback - A callback function that will be called for each point in the shape.\n */\nfunction getSphereBoundsInfo(\n  circlePoints: [Types.Point3, Types.Point3],\n  imageData: vtkImageData,\n  viewport\n): {\n  boundsIJK: BoundsIJK;\n  centerWorld: Types.Point3;\n  radiusWorld: number;\n  topLeftWorld: Types.Point3;\n  bottomRightWorld: Types.Point3;\n} {\n  const [bottom, top] = circlePoints;\n\n  // Sphere center in world\n  const centerWorld = vec3.fromValues(\n    (bottom[0] + top[0]) / 2,\n    (bottom[1] + top[1]) / 2,\n    (bottom[2] + top[2]) / 2\n  );\n\n  // sphere radius in world\n  const radiusWorld = vec3.distance(bottom, top) / 2;\n\n  if (!viewport) {\n    throw new Error(\n      'viewport is required in order to calculate the sphere bounds'\n    );\n  }\n\n  const { boundsIJK, topLeftWorld, bottomRightWorld } =\n    _computeBoundsIJKWithCamera(\n      imageData,\n      viewport,\n      circlePoints,\n      centerWorld,\n      radiusWorld\n    );\n\n  return {\n    boundsIJK,\n    centerWorld: centerWorld as Types.Point3,\n    radiusWorld,\n    topLeftWorld: topLeftWorld as Types.Point3,\n    bottomRightWorld: bottomRightWorld as Types.Point3,\n  };\n}\n\nfunction _computeBoundsIJKWithCamera(\n  imageData,\n  viewport,\n  circlePoints,\n  centerWorld,\n  radiusWorld\n) {\n  const [bottom, top] = circlePoints;\n\n  const dimensions = imageData.getDimensions() as Types.Point3;\n\n  const camera = viewport.getCamera();\n\n  // Calculate viewRight from the camera, this will get used in order to\n  // calculate circles topLeft and bottomRight on different planes of intersection\n  // between sphere and viewPlane\n  const viewUp = vec3.fromValues(\n    camera.viewUp[0],\n    camera.viewUp[1],\n    camera.viewUp[2]\n  );\n  const viewPlaneNormal = vec3.fromValues(\n    camera.viewPlaneNormal[0],\n    camera.viewPlaneNormal[1],\n    camera.viewPlaneNormal[2]\n  );\n  const viewRight = vec3.create();\n\n  vec3.cross(viewRight, viewUp, viewPlaneNormal);\n\n  // we need to find the bounding box of the sphere in the image, e.g., the\n  // topLeftWorld and bottomRightWorld points of the bounding box.\n  // We go from the sphereCenter in the normal direction of amount radius, and\n  // we go left to find the topLeftWorld point of the bounding box. Next we go\n  // in the opposite direction and go right to find the bottomRightWorld point\n  // of the bounding box.\n  const topLeftWorld = vec3.create();\n  const bottomRightWorld = vec3.create();\n\n  vec3.scaleAndAdd(topLeftWorld, top, viewPlaneNormal, radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottom, viewPlaneNormal, -radiusWorld);\n\n  // go in the direction of viewRight with the value of radius\n  vec3.scaleAndAdd(topLeftWorld, topLeftWorld, viewRight, -radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottomRightWorld, viewRight, radiusWorld);\n\n  // In order to correctly come up with the boundsIJK, we need to consider\n  // all the points IJK to get the bounds, since the viewport might have\n  // rotate views and we cannot guarantee that the topLeft and bottomRight in the\n  // world, are the ones that will define the bounds in IJK\n  const topLeftIJK = transformWorldToIndex(\n    imageData,\n    topLeftWorld as Types.Point3\n  );\n  const bottomRightIJK = transformWorldToIndex(\n    imageData,\n    bottomRightWorld as Types.Point3\n  );\n\n  const pointsIJK = circlePoints.map((p) =>\n    transformWorldToIndex(imageData, p)\n  );\n\n  // get the bounding box of the sphere in the image\n  const boundsIJK = getBoundingBoxAroundShapeIJK(\n    [topLeftIJK, bottomRightIJK, ...pointsIJK],\n    dimensions\n  );\n\n  return { boundsIJK, topLeftWorld, bottomRightWorld };\n}\n\nexport { getSphereBoundsInfo };\n","import type { Annotation } from '../types';\nimport type { Types } from '@cornerstonejs/core';\nimport getViewportsForAnnotation from './getViewportsForAnnotation';\n\n/**\n * Finds a matching viewport in terms of the orientation of the annotation data\n * and the frame of reference.  This doesn't mean the annotation IS being displayed\n * in the viewport, just that it could be by navigating the slice, and/or pan/zoom,\n * without changing the orientation.\n *\n * @param annotation - to find a viewport that it could display in\n * @returns The viewport to display in\n */\nexport default function getViewportForAnnotation(\n  annotation: Annotation\n): Types.IStackViewport | Types.IVolumeViewport | undefined {\n  const viewports = getViewportsForAnnotation(annotation);\n\n  return viewports.length ? viewports[0] : undefined;\n}\n","import { utilities } from '@cornerstonejs/core';\n\nimport {\n  getAnnotationNearPoint,\n  getAnnotationNearPointOnEnabledElement,\n} from './getAnnotationNearPoint';\n\n// Lodash/common JS functionality\nimport debounce from './debounce';\nimport throttle from './throttle';\nimport isObject from './isObject';\nimport clip from './clip';\nimport calibrateImageSpacing from './calibrateImageSpacing';\nimport {\n  getCalibratedLengthUnitsAndScale,\n  getCalibratedProbeUnitsAndValue,\n  getCalibratedAspect,\n} from './getCalibratedUnits';\nimport triggerAnnotationRenderForViewportIds from './triggerAnnotationRenderForViewportIds';\nimport triggerAnnotationRenderForToolGroupIds from './triggerAnnotationRenderForToolGroupIds';\nimport triggerAnnotationRender from './triggerAnnotationRender';\nimport jumpToSlice from './viewport/jumpToSlice';\n\nimport pointInShapeCallback from './pointInShapeCallback';\nimport { getSphereBoundsInfo } from './getSphereBoundsInfo';\nimport scroll from './scroll';\nimport { pointToString } from './pointToString';\nimport annotationFrameRange from './annotationFrameRange';\nimport pointInSurroundingSphereCallback from './pointInSurroundingSphereCallback';\nimport getViewportForAnnotation from './getViewportForAnnotation';\nimport {\n  annotationHydration,\n  getClosestImageIdForStackViewport,\n} from './annotationHydration';\n// name spaces\nimport * as contours from './contours';\nimport * as segmentation from './segmentation';\nimport * as drawing from './drawing';\nimport * as math from './math';\nimport * as planar from './planar';\nimport * as viewportFilters from './viewportFilters';\nimport * as orientation from './orientation';\nimport * as cine from './cine';\nimport * as boundingBox from './boundingBox';\nimport * as planarFreehandROITool from './planarFreehandROITool';\nimport * as rectangleROITool from './rectangleROITool';\nimport { stackPrefetch, stackContextPrefetch } from './stackPrefetch';\nimport * as viewport from './viewport';\nimport * as touch from './touch';\nimport * as dynamicVolume from './dynamicVolume';\nimport * as polyDataUtils from './polyData/utils';\nimport * as voi from './voi';\nimport * as contourSegmentation from './contourSegmentation';\n\nconst roundNumber = utilities.roundNumber;\n\n// Events\nimport { triggerEvent } from '@cornerstonejs/core';\n\nexport {\n  math,\n  planar,\n  viewportFilters,\n  drawing,\n  debounce,\n  dynamicVolume,\n  throttle,\n  orientation,\n  isObject,\n  touch,\n  triggerEvent,\n  calibrateImageSpacing,\n  getCalibratedLengthUnitsAndScale,\n  getCalibratedProbeUnitsAndValue,\n  getCalibratedAspect,\n  segmentation,\n  contours,\n  triggerAnnotationRenderForViewportIds,\n  triggerAnnotationRenderForToolGroupIds,\n  triggerAnnotationRender,\n  pointInShapeCallback,\n  getSphereBoundsInfo,\n  getAnnotationNearPoint,\n  getViewportForAnnotation,\n  getAnnotationNearPointOnEnabledElement,\n  jumpToSlice,\n  pointInSurroundingSphereCallback,\n  viewport,\n  cine,\n  clip,\n  boundingBox,\n  rectangleROITool,\n  planarFreehandROITool,\n  stackPrefetch,\n  stackContextPrefetch,\n  scroll,\n  roundNumber,\n  pointToString,\n  polyDataUtils,\n  voi,\n  annotationFrameRange,\n  contourSegmentation,\n  annotationHydration,\n  getClosestImageIdForStackViewport,\n};\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @since 0.1.0\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * isObject({})\n * // => true\n *\n * isObject([1, 2, 3])\n * // => true\n *\n * isObject(Function)\n * // => true\n *\n * isObject(null)\n * // => false\n */\nfunction isObject(value) {\n  const type = typeof value;\n\n  return value !== null && (type === 'object' || type === 'function');\n}\n\nexport default isObject;\n","import { Types } from '@cornerstonejs/core';\n\n/**\n * Check if two axis-aligned bounding boxes intersect\n * @param aabb1 - First AABB\n * @param aabb2 - Second AABB\n * @returns True if they intersect or false otherwise\n */\nexport default function intersectAABB(\n  aabb1: Types.AABB2,\n  aabb2: Types.AABB2\n): boolean {\n  return (\n    aabb1.minX <= aabb2.maxX &&\n    aabb1.maxX >= aabb2.minX &&\n    aabb1.minY <= aabb2.maxY &&\n    aabb1.maxY >= aabb2.minY\n  );\n}\n","import { Types } from '@cornerstonejs/core';\n\n/**\n * Calculates the distance of a point to an AABB using 2D Box SDF (Signed Distance Field)\n *\n * The SDF of a Box\n * https://www.youtube.com/watch?v=62-pRVZuS5c\n *\n * @param aabb - Axis-aligned bound box\n * @param point - 2D point\n * @returns The closest distance between the 2D point and the AABB\n */\nexport default function distanceToPointSquared(\n  aabb: Types.AABB2,\n  point: Types.Point2\n): number {\n  const aabbWidth = aabb.maxX - aabb.minX;\n  const aabbHeight = aabb.maxY - aabb.minY;\n  const aabbSize = [aabbWidth, aabbHeight];\n  const aabbCenter: Types.Point2 = [\n    aabb.minX + aabbWidth / 2,\n    aabb.minY + aabbHeight / 2,\n  ];\n\n  // Translates the point as the center of the AABB is the new origin.\n  // THe point is also mirroed to the first quadrant to simplify the math.\n  const translatedPoint = [\n    Math.abs(point[0] - aabbCenter[0]),\n    Math.abs(point[1] - aabbCenter[1]),\n  ];\n\n  // Calculate the distance from the point to the vertical and horizontal AABB borders\n  const dx = translatedPoint[0] - aabbSize[0] * 0.5;\n  const dy = translatedPoint[1] - aabbSize[1] * 0.5;\n\n  // dx >  0 && dy >  0: diagonal line connecting the point to AABB's corner\n  // dx >  0 && dy <= 0: a line parallel to x-axis connecting the point to AABB's right side\n  // dx <= 0 && dy >  0: a line parallel to y-axis connecting the point to AABB's top side\n  // dx <= 0 && dy <= 0: the point is inside the AABB\n  if (dx > 0 && dy > 0) {\n    return dx * dx + dy * dy;\n  }\n\n  const dist = Math.max(dx, 0) + Math.max(dy, 0);\n\n  return dist * dist;\n}\n","import { Types } from '@cornerstonejs/core';\nimport distanceToPointSquared from './distanceToPointSquared';\n\n/**\n * Calculates the squared distance of a point to an AABB using\n * 2D Box SDF (Signed Distance Field)\n *\n * The SDF of a Box\n * https://www.youtube.com/watch?v=62-pRVZuS5c\n *\n * @param aabb - Axis-aligned bound box (minX, minY, maxX and maxY)\n * @param point - 2D point\n * @returns The squared distance between the 2D point and the AABB\n */\nexport default function distanceToPoint(\n  aabb: Types.AABB2,\n  point: Types.Point2\n): number {\n  return Math.sqrt(distanceToPointSquared(aabb, point));\n}\n","import { NamedStatistics } from '../../../types';\n\nabstract class Calculator {\n  static run: ({ value }) => void;\n  /**\n   * Gets the statistics as both an array of values, as well as the named values.\n   */\n  static getStatistics: () => NamedStatistics;\n}\n\nexport default Calculator;\n","import { utilities } from '@cornerstonejs/core';\nimport { NamedStatistics } from '../../../types';\nimport Calculator from './Calculator';\n\nconst { PointsManager } = utilities;\n\nexport default class BasicStatsCalculator extends Calculator {\n  private static max = [-Infinity];\n  private static min = [Infinity];\n  private static sum = [0];\n  private static count = 0;\n\n  // private static sumSquares = [0];\n  // Values for Welford's algorithm\n  private static runMean = [0];\n  private static m2 = [0];\n\n  // Collect the points to be returned\n  private static pointsInShape = PointsManager.create3(1024);\n\n  public static statsInit(options: { noPointsCollection: boolean }) {\n    if (options.noPointsCollection) {\n      BasicStatsCalculator.pointsInShape = null;\n    }\n  }\n\n  /**\n   * This callback is used when we verify if the point is in the annotation drawn\n   * so we can get every point in the shape to calculate the statistics\n   */\n  static statsCallback = ({ value: newValue, pointLPS = null }): void => {\n    if (\n      Array.isArray(newValue) &&\n      newValue.length > 1 &&\n      this.max.length === 1\n    ) {\n      this.max.push(this.max[0], this.max[0]);\n      this.min.push(this.min[0], this.min[0]);\n      this.sum.push(this.sum[0], this.sum[0]);\n      this.runMean.push(0, 0);\n      // this.sumSquares.push(this.sumSquares[0], this.sumSquares[0]);\n      this.m2.push(this.m2[0], this.m2[0]);\n    }\n\n    this.pointsInShape?.push(pointLPS);\n    const newArray = Array.isArray(newValue) ? newValue : [newValue];\n\n    this.count += 1;\n    this.max.map((it, idx) => {\n      const value = newArray[idx];\n\n      const delta = value - this.runMean[idx];\n      this.sum[idx] += value;\n      this.runMean[idx] += delta / this.count;\n      const delta2 = value - this.runMean[idx];\n      this.m2[idx] += delta * delta2;\n      // this.sumSquares[idx] += value * value;\n\n      this.min[idx] = Math.min(this.min[idx], value);\n      this.max[idx] = Math.max(it, value);\n    });\n  };\n\n  /**\n   * Basic function that calculates statistics for a given array of points.\n   * @returns An object that contains :\n   * max : The maximum value of the array\n   * mean : mean of the array\n   * stdDev : standard deviation of the array\n   * array : An array of hte above values, in order.\n   */\n\n  static getStatistics = (options?: { unit: string }): NamedStatistics => {\n    const mean = this.sum.map((sum) => sum / this.count);\n    const stdDev = this.m2.map((squaredDiffSum) =>\n      Math.sqrt(squaredDiffSum / this.count)\n    );\n    // const stdDevWithSumSquare = this.sumSquares.map((it, idx) =>\n    //   Math.sqrt(this.sumSquares[idx] / this.count - mean[idx] ** 2)\n    // );\n\n    const unit = options?.unit || null;\n\n    const named: NamedStatistics = {\n      max: {\n        name: 'max',\n        label: 'Max Pixel',\n        value: singleArrayAsNumber(this.max),\n        unit,\n      },\n      min: {\n        name: 'min',\n        label: 'Min Pixel',\n        value: singleArrayAsNumber(this.min),\n        unit,\n      },\n      mean: {\n        name: 'mean',\n        label: 'Mean Pixel',\n        value: singleArrayAsNumber(mean),\n        unit,\n      },\n      stdDev: {\n        name: 'stdDev',\n        label: 'Standard Deviation',\n        value: singleArrayAsNumber(stdDev),\n        unit,\n      },\n      // stdDevWithSumSquare: {\n      //   name: 'stdDevWithSumSquare',\n      //   value: singleArrayAsNumber(stdDevWithSumSquare),\n      //   unit,\n      // },\n      count: {\n        name: 'count',\n        label: 'Pixel Count',\n        value: this.count,\n        unit: null,\n      },\n      pointsInShape: this.pointsInShape,\n      array: [],\n    };\n    named.array.push(\n      named.max,\n      named.mean,\n      named.stdDev,\n      // Use the stdDev twice to preserve old ordering - this is updated to be\n      // correct value with Welford's algorithm now.\n      named.stdDev,\n      named.count\n    );\n\n    this.max = [-Infinity];\n    this.min = [Infinity];\n    this.sum = [0];\n    // this.sumSquares = [0];\n    this.m2 = [0];\n    this.runMean = [0];\n    this.count = 0;\n    this.pointsInShape = PointsManager.create3(1024);\n\n    return named;\n  };\n}\n\nfunction singleArrayAsNumber(val: number[]) {\n  return val.length === 1 ? val[0] : val;\n}\n","import type { Types } from '@cornerstonejs/core';\ninterface Inverts {\n  invXRadiusSq?: number;\n  invYRadiusSq?: number;\n  invZRadiusSq?: number;\n  fast?: boolean;\n  /**\n   * If you call the pointInEllipse.precalculateInverts first, then you\n   * can call precalculated directly instead of having the extra time for\n   * the if conditions.\n   */\n  precalculated?: (pointLPS: Types.Point3) => boolean;\n}\n\n/**\n * Given an ellipse and a point, return true if the point is inside the ellipse\n * @param ellipse - The ellipse object to check against.\n * @param pointLPS - The point in LPS space to test.\n * @param inverts - An object to cache the inverted radius squared values, if you\n * are testing multiple points against the same ellipse then it is recommended to\n * pass in the same object to cache the values. However, there is a simpler way\n * to do this by passing in the fast flag as true, then on the first iteration\n * the values will be cached and on subsequent iterations the cached values will\n * be used.\n *\n * @returns A boolean value.\n */\nexport default function pointInEllipse(\n  ellipse,\n  pointLPS,\n  inverts: Inverts = {}\n) {\n  if (!inverts.precalculated) {\n    precalculatePointInEllipse(ellipse, inverts);\n  }\n  return inverts.precalculated(pointLPS);\n}\n\n/**\n * This will perform some precalculations to make things faster.\n * Ideally, use the 'precalculated' function inside inverts to call the\n * test function.  This minimizes re-reading of variables and only needs the\n * LPS passed each time.\n * That is:\n *\n * ```\n *    const inverts = precalculatePointInEllipse(ellipse);\n *    if( inverts.precalculated(pointLPS) ) ...\n * ```\n */\nconst precalculatePointInEllipse = (ellipse, inverts: Inverts = {}) => {\n  const { xRadius, yRadius, zRadius } = ellipse;\n\n  // This will run only once since we are caching the values in the same\n  // object that is passed in.\n  if (\n    inverts.invXRadiusSq === undefined ||\n    inverts.invYRadiusSq === undefined ||\n    inverts.invZRadiusSq === undefined\n  ) {\n    inverts.invXRadiusSq = xRadius !== 0 ? 1 / xRadius ** 2 : 0;\n    inverts.invYRadiusSq = yRadius !== 0 ? 1 / yRadius ** 2 : 0;\n    inverts.invZRadiusSq = zRadius !== 0 ? 1 / zRadius ** 2 : 0;\n  }\n\n  const { invXRadiusSq, invYRadiusSq, invZRadiusSq } = inverts;\n  const { center } = ellipse;\n  const [centerL, centerP, centerS] = center;\n\n  inverts.precalculated = (pointLPS) => {\n    // Calculate the sum of normalized squared distances\n    const dx = pointLPS[0] - centerL;\n    let inside = dx * dx * invXRadiusSq;\n    if (inside > 1) {\n      return false;\n    }\n\n    const dy = pointLPS[1] - centerP;\n    inside += dy * dy * invYRadiusSq;\n    if (inside > 1) {\n      return false;\n    }\n\n    const dz = pointLPS[2] - centerS;\n    inside += dz * dz * invZRadiusSq;\n\n    // Check if the point is inside the ellipse\n    return inside <= 1;\n  };\n\n  return inverts;\n};\n\nexport { precalculatePointInEllipse };\n","import type { Types } from '@cornerstonejs/core';\n\nexport type CanvasCoordinates = [\n  Types.Point2, // bottom\n  Types.Point2, // top\n  Types.Point2, // left\n  Types.Point2 // right\n];\n\n/**\n * It takes the canvas coordinates of the ellipse corners and returns the top left and bottom right\n * corners of it\n *\n * @param ellipseCanvasPoints - The coordinates of the ellipse in the canvas.\n * @returns An array of two points.\n */\nexport default function getCanvasEllipseCorners(\n  ellipseCanvasPoints: CanvasCoordinates\n): Array<Types.Point2> {\n  const [bottom, top, left, right] = ellipseCanvasPoints;\n\n  const topLeft = <Types.Point2>[left[0], top[1]];\n  const bottomRight = <Types.Point2>[right[0], bottom[1]];\n\n  return [topLeft, bottomRight];\n}\n","import type { Types } from '@cornerstonejs/core';\nimport * as math from '../';\n\n/**\n * Calculate the closest point and the squared distance between a reference point and a line segment.\n *\n * It projects the reference point onto the line segment but it shall be bounded by the\n * start/end points since this is a line segment and not a line which could be extended.\n *\n * @param lineStart - Start point of the line segment\n * @param lineEnd - End point of the line segment\n * @param point - Reference point\n * @returns Closest point and the squared distance between a `point` and a line\n *   segment defined by `lineStart` and `lineEnd` points\n */\nexport default function distanceToPointSquaredInfo(\n  lineStart: Types.Point2,\n  lineEnd: Types.Point2,\n  point: Types.Point2\n): {\n  point: Types.Point2;\n  distanceSquared: number;\n} {\n  let closestPoint: Types.Point2;\n  const distanceSquared = math.point.distanceToPointSquared(lineStart, lineEnd);\n\n  // Check if lineStart equal to the lineEnd which means the closest point\n  // is any of these two points\n  if (lineStart[0] === lineEnd[0] && lineStart[1] === lineEnd[1]) {\n    closestPoint = lineStart;\n  }\n\n  if (!closestPoint) {\n    const dotProduct =\n      ((point[0] - lineStart[0]) * (lineEnd[0] - lineStart[0]) +\n        (point[1] - lineStart[1]) * (lineEnd[1] - lineStart[1])) /\n      distanceSquared;\n\n    if (dotProduct < 0) {\n      closestPoint = lineStart;\n    } else if (dotProduct > 1) {\n      closestPoint = lineEnd;\n    } else {\n      closestPoint = [\n        lineStart[0] + dotProduct * (lineEnd[0] - lineStart[0]),\n        lineStart[1] + dotProduct * (lineEnd[1] - lineStart[1]),\n      ];\n    }\n  }\n\n  return {\n    point: [...closestPoint],\n    distanceSquared: math.point.distanceToPointSquared(point, closestPoint),\n  };\n}\n","import { Types } from '@cornerstonejs/core';\nimport distanceToPointSquaredInfo from './distanceToPointSquaredInfo';\n\n/**\n * Calculates the distance-squared of a point to a line segment\n *\n * @param lineStart - x,y coordinates of the start of the line\n * @param lineEnd - x,y coordinates of the end of the line\n * @param point - x,y of the point\n * @returns distance-squared\n */\nexport default function distanceToPointSquared(\n  lineStart: Types.Point2,\n  lineEnd: Types.Point2,\n  point: Types.Point2\n): number {\n  return distanceToPointSquaredInfo(lineStart, lineEnd, point).distanceSquared;\n}\n","import distanceToPointSquared from './distanceToPointSquared';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Calculates the distance of a point to a line\n *\n * @param lineStart - x,y coordinates of the start of the line\n * @param lineEnd - x,y coordinates of the end of the line\n * @param point - x,y of the point\n * @returns distance\n */\nexport default function distanceToPoint(\n  lineStart: Types.Point2,\n  lineEnd: Types.Point2,\n  point: Types.Point2\n): number {\n  if (lineStart.length !== 2 || lineEnd.length !== 2 || point.length !== 2) {\n    throw Error(\n      'lineStart, lineEnd, and point should have 2 elements of [x, y]'\n    );\n  }\n\n  return Math.sqrt(distanceToPointSquared(lineStart, lineEnd, point));\n}\n","import type { Types } from '@cornerstonejs/core';\n\n// Returns sign of number\nfunction sign(x: any) {\n  return typeof x === 'number'\n    ? x\n      ? x < 0\n        ? -1\n        : 1\n      : x === x\n      ? 0\n      : NaN\n    : NaN;\n}\n\n/**\n * Calculates the intersection point between two lines in the 2D plane\n *\n * @param line1Start - x,y coordinates of the start of the first line\n * @param line1End - x,y coordinates of the end of the first line\n * @param line2Start - x,y coordinates of the start of the second line\n * @param line2End - x,y coordinates of the end of the second line\n * @returns [x,y] - point x,y of the point\n */\n\nexport default function intersectLine(\n  line1Start: Types.Point2,\n  line1End: Types.Point2,\n  line2Start: Types.Point2,\n  line2End: Types.Point2\n): number[] {\n  const [x1, y1] = line1Start;\n  const [x2, y2] = line1End;\n  const [x3, y3] = line2Start;\n  const [x4, y4] = line2End;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\n  const a1 = y2 - y1;\n  const b1 = x1 - x2;\n  const c1 = x2 * y1 - x1 * y2;\n\n  // Compute r3 and r4\n  const r3 = a1 * x3 + b1 * y3 + c1;\n  const r4 = a1 * x4 + b1 * y4 + c1;\n\n  /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\n   * same side of line 1, the line segments do not intersect.\n   */\n\n  if (r3 !== 0 && r4 !== 0 && sign(r3) === sign(r4)) {\n    return;\n  }\n\n  // Compute a2, b2, c2\n  const a2 = y4 - y3;\n  const b2 = x3 - x4;\n  const c2 = x4 * y3 - x3 * y4;\n\n  // Compute r1 and r2\n  const r1 = a2 * x1 + b2 * y1 + c2;\n  const r2 = a2 * x2 + b2 * y2 + c2;\n\n  /* Check signs of r1 and r2.  If both point 1 and point 2 lie\n   * on same side of second line segment, the line segments do\n   * not intersect.\n   */\n\n  if (r1 !== 0 && r2 !== 0 && sign(r1) === sign(r2)) {\n    return;\n  }\n\n  /* Line segments intersect: compute intersection point.\n   */\n\n  const denom = a1 * b2 - a2 * b1;\n  let num;\n\n  /* The denom/2 is to get rounding instead of truncating.  It\n   * is added or subtracted to the numerator, depending upon the\n   * sign of the numerator.\n   */\n\n  num = b1 * c2 - b2 * c1;\n  const x = num / denom;\n\n  num = a2 * c1 - a1 * c2;\n  const y = num / denom;\n\n  const intersectionPoint = [x, y];\n\n  return intersectionPoint;\n}\n","import type { Types } from '@cornerstonejs/core';\n\nconst ORIENTATION_TOLERANCE = 1e-2;\n\n/**\n * Test if a point is on a line segment\n * @param lineStart - Line segment start point\n * @param lineEnd - Line segment end point\n * @param point - Point to test\n * @returns True if the point lies on the line segment or false otherwise\n */\nexport default function isPointOnLineSegment(\n  lineStart: Types.Point2,\n  lineEnd: Types.Point2,\n  point: Types.Point2\n): boolean {\n  // The code below runs ~4x faster than calling `line.distanceToPointSquared()` (155 vs 598 ms)\n\n  // No Math.min/max call for better performance when testing thousands of points\n  const minX = lineStart[0] <= lineEnd[0] ? lineStart[0] : lineEnd[0];\n  const maxX = lineStart[0] >= lineEnd[0] ? lineStart[0] : lineEnd[0];\n  const minY = lineStart[1] <= lineEnd[1] ? lineStart[1] : lineEnd[1];\n  const maxY = lineStart[1] >= lineEnd[1] ? lineStart[1] : lineEnd[1];\n\n  // Checks if the point lies inside the AABB\n  const aabbContainsPoint =\n    point[0] >= minX - ORIENTATION_TOLERANCE &&\n    point[0] <= maxX + ORIENTATION_TOLERANCE &&\n    point[1] >= minY - ORIENTATION_TOLERANCE &&\n    point[1] <= maxY + ORIENTATION_TOLERANCE;\n\n  if (!aabbContainsPoint) {\n    return false;\n  }\n\n  // Now that we know the point is inside the AABB we check if it lies on the line segment\n  const orientation =\n    (lineEnd[1] - lineStart[1]) * (point[0] - lineEnd[0]) -\n    (lineEnd[0] - lineStart[0]) * (point[1] - lineEnd[1]);\n  const absOrientation = orientation >= 0 ? orientation : -orientation;\n\n  // The orientation must be zero for points that lies on the same line\n  return absOrientation <= ORIENTATION_TOLERANCE;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport distanceToPointSquared from './distanceToPointSquared';\n\ntype Point = Types.Point2 | Types.Point3;\n\n/**\n * Calculates the distance of a point to another point\n *\n * @param p1 - x,y or x,y,z of the point\n * @param p2 - x,y or x,y,z of the point\n * @returns distance\n */\nexport default function distanceToPoint(p1: Point, p2: Point): number {\n  return Math.sqrt(distanceToPointSquared(p1, p2));\n}\n","import type { Types } from '@cornerstonejs/core';\n\ntype Point = Types.Point2 | Types.Point3;\n\n/**\n * Calculates the distance squared of a point to another point\n *\n * @param p1 - x,y or x,y,z of the point\n * @param p2 - x,y or x,y,z of the point\n * @returns distance\n */\nexport default function distanceToPointSquared(p1: Point, p2: Point): number {\n  if (p1.length !== p2.length) {\n    throw Error('Both points should have the same dimensionality');\n  }\n\n  const [x1, y1, z1 = 0] = p1;\n  const [x2, y2, z2 = 0] = p2;\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const dz = z2 - z1;\n\n  // Time to square 10M numbers:\n  //   (n * n) = 161ms | (n ** 2) = 199ms | Math.pow(n, 2) = 29529ms\n  return dx * dx + dy * dy + dz * dz;\n}\n","import { Types } from '@cornerstonejs/core';\n\n/**\n * Get a mirrored point along the line created by two points where one of them\n * is the static (\"anchor\") point and the other one is the point to be mirroed.\n * @param mirrorPoint - 2D Point to be mirroed\n * @param staticPoint - Static 2D point\n * @returns Mirroed 2D point\n */\nexport default function mirror(\n  mirrorPoint: Types.Point2,\n  staticPoint: Types.Point2\n): Types.Point2 {\n  const [x1, y1] = mirrorPoint;\n  const [x2, y2] = staticPoint;\n\n  const newX = 2 * x2 - x1;\n  const newY = 2 * y2 - y1;\n\n  return [newX, newY];\n}\n","import { glMatrix } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\nimport * as math from '..';\n\n/**\n * A polyline is considered closed if the start and end points are at the same position\n *\n * @param polyline - Polyline points (2D)\n * @returns True if the polyline is already closed or false otherwise\n */\nexport default function isClosed(polyline: Types.Point2[]): boolean {\n  if (polyline.length < 3) {\n    return false;\n  }\n\n  const numPolylinePoints = polyline.length;\n\n  const firstPoint = polyline[0];\n  const lastPoint = polyline[numPolylinePoints - 1];\n  const distFirstToLastPoints = math.point.distanceToPointSquared(\n    firstPoint,\n    lastPoint\n  );\n\n  return glMatrix.equals(0, distFirstToLastPoints);\n}\n","import type { Types } from '@cornerstonejs/core';\nimport isClosed from './isClosed';\n\n/**\n * Checks if a 2D point is inside the polyline.\n *\n * A point is inside a curve/polygon if the number of intersections between the horizontal\n * ray emanating from the given point and to the right and the line segments is odd.\n * https://www.eecs.umich.edu/courses/eecs380/HANDOUTS/PROJ2/InsidePoly.html\n *\n * Note that a point on the polyline is considered inside.\n *\n * @param polyline - Polyline points (2D)\n * @param point - 2D Point\n * @returns True if the point is inside the polyline or false otherwise\n */\nexport default function containsPoint(\n  polyline: Types.Point2[],\n  point: Types.Point2,\n  options: {\n    closed?: boolean;\n    holes?: Types.Point2[][];\n  } = {\n    closed: undefined,\n  }\n): boolean {\n  if (polyline.length < 3) {\n    return false;\n  }\n\n  const numPolylinePoints = polyline.length;\n  let numIntersections = 0;\n\n  const { closed, holes } = options;\n\n  if (holes?.length) {\n    for (const hole of holes) {\n      if (containsPoint(hole, point)) {\n        return false;\n      }\n    }\n  }\n\n  // Test intersection against [end, start] line segment if it should be closed\n  const shouldClose = !(closed === undefined ? isClosed(polyline) : closed);\n  const maxSegmentIndex = polyline.length - (shouldClose ? 1 : 2);\n\n  for (let i = 0; i <= maxSegmentIndex; i++) {\n    const p1 = polyline[i];\n\n    // Calculating the next point index without using % (mod) operator like in\n    // `(i + 1) % numPolylinePoints` to make it 20% faster\n    const p2Index = i === numPolylinePoints - 1 ? 0 : i + 1;\n    const p2 = polyline[p2Index];\n\n    // Calculating min/max without using Math.min/max to make it ~3% faster\n    const maxX = p1[0] >= p2[0] ? p1[0] : p2[0];\n    const maxY = p1[1] >= p2[1] ? p1[1] : p2[1];\n    const minY = p1[1] <= p2[1] ? p1[1] : p2[1];\n\n    const mayIntersectLineSegment =\n      point[0] <= maxX && point[1] >= minY && point[1] < maxY;\n\n    if (mayIntersectLineSegment) {\n      const isVerticalLine = p1[0] === p2[0];\n      let intersects = isVerticalLine;\n\n      if (!intersects) {\n        const xIntersection =\n          ((point[1] - p1[1]) * (p2[0] - p1[0])) / (p2[1] - p1[1]) + p1[0];\n\n        intersects = point[0] <= xIntersection;\n      }\n\n      numIntersections += intersects ? 1 : 0;\n    }\n  }\n\n  return !!(numIntersections % 2);\n}\n","import type { Types } from '@cornerstonejs/core';\nimport containsPoint from './containsPoint';\n\n/**\n * Checks if a polyline contains a set of points.\n *\n * @param polyline - Polyline points (2D)\n * @param points - 2D points to verify\n * @returns True if all points are inside the polyline or false otherwise\n */\nexport default function containsPoints(\n  polyline: Types.Point2[],\n  points: Types.Point2[]\n): boolean {\n  for (let i = 0, numPoint = points.length; i < numPoint; i++) {\n    if (!containsPoint(polyline, points[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Calculates the area of an array of `Point2` points using the shoelace algorithm.\n *\n * The units of the area are in the same units as the points are in. E.g. if\n * the points are in canvas, then the result is in canvas pixels ^2; If they are\n * in mm, then the result is in mm^2; etc.\n */\nexport default function getArea(points: Types.Point2[]): number {\n  // Shoelace algorithm.\n  const n = points.length;\n  let area = 0.0;\n  let j = n - 1;\n\n  for (let i = 0; i < n; i++) {\n    area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n    j = i; // j is previous vertex to i\n  }\n\n  // Return absolute value of half the sum (half as summing up traingles).\n  return Math.abs(area / 2.0);\n}\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Returns the area with signal of a 2D polyline\n * https://www.youtube.com/watch?v=GpsKrAipXm8&t=1900s\n *\n * This functions has a runtime very close to `getArea` and it is recommended to\n * be called only if you need the area signal (eg: calculate polygon normal or\n * winding direction). If you do not need the area signal you should always call\n * `getArea`.\n *\n * @param polyline - Polyline points (2D)\n * @returns Area of the polyline (with signal)\n */\nexport default function getSignedArea(polyline: Types.Point2[]): number {\n  if (polyline.length < 3) {\n    return 0;\n  }\n\n  // Reference point can be any point on the same plane\n  const refPoint = polyline[0];\n  let area = 0;\n\n  // Takes three points (reference point and two other points from each line\n  // segment) and calculate the area with cross product. The magnitude of the\n  // vector returned by a cross product is equal to the area of the parallelogram\n  // that the vectors span which is two times the area of the triangle.\n  //\n  // Not calling vec3 mathods makes the function run much faster since polylines\n  // may have thousands of points when using freehand ROI tool and that would\n  // increase considerably the number of function calls.\n  for (let i = 0, len = polyline.length; i < len; i++) {\n    const p1 = polyline[i];\n    // Using ternary instead of % (mod) operator to make it faster\n    const p2Index = i === len - 1 ? 0 : i + 1;\n    const p2 = polyline[p2Index];\n    const aX = p1[0] - refPoint[0];\n    const aY = p1[1] - refPoint[1];\n    const bX = p2[0] - refPoint[0];\n    const bY = p2[1] - refPoint[1];\n\n    // Cross product between vectors \"a\" and \"b\" which returns (0, 0, crossProd)\n    // for 2D vectors.\n    area += aX * bY - aY * bX;\n  }\n\n  // Divide by two because cross product returns two times the area for each triangle\n  area *= 0.5;\n\n  return area;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport getSignedArea from './getSignedArea';\n\n/**\n * Calculate the winding direction (CW or CCW) of a polyline\n * @param polyline - Polyline (2D)\n * @returns 1 for CW or -1 for CCW polylines\n */\nexport default function getWindingDirection(polyline: Types.Point2[]): number {\n  const signedArea = getSignedArea(polyline);\n\n  // Return 1 or -1 which is also possible to convert into ContourOrientation\n  return signedArea >= 0 ? 1 : -1;\n}\n","import { vec3 } from 'gl-matrix';\nimport { Types } from '@cornerstonejs/core';\n\nfunction _getAreaVector(polyline: Types.Point3[]): Types.Point3 {\n  const vecArea = vec3.create();\n\n  // Reference point can be any point on the same plane\n  const refPoint = polyline[0];\n\n  // Takes three points, reference point and two other points from each line\n  // segment, and calculate the area with cross product. The magnitude of the\n  // vector returned by a cross product is equal to the area of the parallelogram\n  // that the vectors span which is two times the area of the triangle.\n  //\n  // Not calling vec3 mathods makes the function run much faster since polylines\n  // may have thousands of points when using freehand ROI tool and that would\n  // increase considerably the number of function calls.\n  for (let i = 0, len = polyline.length; i < len; i++) {\n    const p1 = polyline[i];\n    // Using ternary instead of % (mod) operator to make it faster\n    const p2Index = i === len - 1 ? 0 : i + 1;\n    const p2 = polyline[p2Index];\n\n    const aX = p1[0] - refPoint[0];\n    const aY = p1[1] - refPoint[1];\n    const aZ = p1[2] - refPoint[2];\n    const bX = p2[0] - refPoint[0];\n    const bY = p2[1] - refPoint[1];\n    const bZ = p2[2] - refPoint[2];\n\n    // Cross product without calling vec3.cross() for better performance\n    vecArea[0] += aY * bZ - aZ * bY;\n    vecArea[1] += aZ * bX - aX * bZ;\n    vecArea[2] += aX * bY - aY * bX;\n  }\n\n  // Divide by two because cross product returns two times the area for each triangle\n  vec3.scale(vecArea, vecArea, 0.5);\n\n  // The magnitude of the vector is the area of the polyline\n  return <Types.Point3>vecArea;\n}\n\n/**\n * Calculate the normal of a 3D planar polyline\n * @param polyline - Planar polyline in 3D space\n * @returns Normal of the 3D planar polyline\n */\nexport default function getNormal3(polyline: Types.Point3[]): Types.Point3 {\n  const vecArea = _getAreaVector(polyline);\n\n  return vec3.normalize(vecArea, vecArea) as Types.Point3;\n}\n","import { Types } from '@cornerstonejs/core';\nimport getSignedArea from './getSignedArea';\n\n/**\n * Calculate the normal of a 2D polyline\n * https://www.youtube.com/watch?v=GpsKrAipXm8&t=1982s\n *\n * @param polyline - Planar polyline in 2D space\n * @returns Normal of the 2D planar polyline\n */\nexport default function getNormal2(polyline: Types.Point2[]): Types.Point3 {\n  const area = getSignedArea(polyline);\n\n  // The normal of a 2D polyline is (0, 0, 1) or (0, 0, -1) depending if it\n  // is CW or CCW polyline\n  return [0, 0, area / Math.abs(area)] as Types.Point3;\n}\n","import type { Types } from '@cornerstonejs/core';\n\n// ATTENTION: this is an internal function and it should not be added to \"polyline\"\n// namespace.\n//\n// TODO: there is a similar function in math.lineSegment.intersectLine but we\n// need to investigate why it is 6x slower than this one when thousands of\n// intersections are calculated. Also that one may return [NaN, NaN] for\n// collinear points.\n\n/**\n * Checks whether the line (`p1`,`q1`) intersects the line (`p2`,`q2`) via an\n * orientation algorithm.\n *\n * Credit and details: geeksforgeeks.org/check-if-two-given-line-segments-intersect/\n *\n * @param p1 - Start point of line segment 1\n * @param q1 - End point of line segment 1\n * @param p2 - Start point of line segment 2\n * @param q2 - End point of line segment 2\n * @returns True if the line segments intersect or false otherwise\n */\nexport default function areLineSegmentsIntersecting(\n  p1: Types.Point2,\n  q1: Types.Point2,\n  p2: Types.Point2,\n  q2: Types.Point2\n): boolean {\n  let result = false;\n\n  // Line 1 AABB\n  const line1MinX = p1[0] < q1[0] ? p1[0] : q1[0];\n  const line1MinY = p1[1] < q1[1] ? p1[1] : q1[1];\n  const line1MaxX = p1[0] > q1[0] ? p1[0] : q1[0];\n  const line1MaxY = p1[1] > q1[1] ? p1[1] : q1[1];\n\n  // Line 2 AABB\n  const line2MinX = p2[0] < q2[0] ? p2[0] : q2[0];\n  const line2MinY = p2[1] < q2[1] ? p2[1] : q2[1];\n  const line2MaxX = p2[0] > q2[0] ? p2[0] : q2[0];\n  const line2MaxY = p2[1] > q2[1] ? p2[1] : q2[1];\n\n  // If AABBs do not intersect it is impossible for the lines to intersect.\n  // Checking AABB before doing any math makes it run ~12% faster.\n  if (\n    line1MinX > line2MaxX ||\n    line1MaxX < line2MinX ||\n    line1MinY > line2MaxY ||\n    line1MaxY < line2MinY\n  ) {\n    return false;\n  }\n\n  const orient = [\n    orientation(p1, q1, p2),\n    orientation(p1, q1, q2),\n    orientation(p2, q2, p1),\n    orientation(p2, q2, q1),\n  ];\n\n  // General Case\n  if (orient[0] !== orient[1] && orient[2] !== orient[3]) {\n    return true;\n  }\n\n  // Special Cases\n  if (orient[0] === 0 && onSegment(p1, p2, q1)) {\n    // If p1, q1 and p2 are colinear and p2 lies on segment p1q1\n    result = true;\n  } else if (orient[1] === 0 && onSegment(p1, q2, q1)) {\n    // If p1, q1 and p2 are colinear and q2 lies on segment p1q1\n    result = true;\n  } else if (orient[2] === 0 && onSegment(p2, p1, q2)) {\n    // If p2, q2 and p1 are colinear and p1 lies on segment p2q2\n    result = true;\n  } else if (orient[3] === 0 && onSegment(p2, q1, q2)) {\n    // If p2, q2 and q1 are colinear and q1 lies on segment p2q2\n    result = true;\n  }\n\n  return result;\n}\n\n/**\n * Checks the orientation of 3 points, returns a 0, 1 or 2 based on\n * the orientation of the points.\n */\nfunction orientation(\n  p: Types.Point2,\n  q: Types.Point2,\n  r: Types.Point2\n): number {\n  // Take the cross product between vectors PQ and QR\n  const orientationValue =\n    (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n\n  if (orientationValue === 0) {\n    return 0; // Colinear\n  }\n\n  return orientationValue > 0 ? 1 : 2;\n}\n\n/**\n * Checks if point `q` lies on the segment (`p`,`r`).\n */\nfunction onSegment(p: Types.Point2, q: Types.Point2, r: Types.Point2): boolean {\n  if (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport areLineSegmentsIntersecting from './areLineSegmentsIntersecting';\n\n/**\n * Get all intersections between a polyline and a line segment.\n * @param polyline - Polyline points\n * @param p1 - Start point of line segment\n * @param q1 - End point of line segment\n * @param closed - Test the intersection against the line segment that connects\n * the last to the first point when set to true\n * @returns Start/end point indexes of all line segments that intersect (p1, q1)\n */\nexport default function getLineSegmentIntersectionsIndexes(\n  polyline: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): Types.Point2[] {\n  const intersections: Types.Point2[] = [];\n  const numPoints = polyline.length;\n  const maxI = numPoints - (closed ? 1 : 2);\n\n  for (let i = 0; i <= maxI; i++) {\n    const p2 = polyline[i];\n    // Do not use % operator for better performance\n    const j = i === numPoints - 1 ? 0 : i + 1;\n    const q2 = polyline[j];\n\n    if (areLineSegmentsIntersecting(p1, q1, p2, q2)) {\n      intersections.push([i, j]);\n    }\n  }\n\n  return intersections;\n}\n","import { Types } from '@cornerstonejs/core';\nimport * as mathLine from '../line';\n\n// ATTENTION: this is an internal function and it should not be added to \"polyline\" namespace\n\n// Tested with +1M random overlapping line segments and any tolerance below this\n// one may return invalid results.\nconst PARALLEL_LINES_TOLERANCE = 1e-2;\n\n/**\n * It returns the intersection between two lines (not line segments) or a midpoint\n * when the line segments overlap. This function calculates the intersection between\n * lines because it considers that getFirstLineSegmentIntersectionIndexes,\n * getLineSegmentIntersectionsCoordinates or getLineSegmentIntersectionsIndexes\n * has already been called first which guarantees.\n *\n * @param p1 - Line segment 1 start\n * @param q1 - Line segment 1 end\n * @param p2 - Line segment 2 start\n * @param q2 - Line segment 21 end\n * @returns The intersection between two lines or a midpoint when they overlap\n */\nexport default function getLinesIntersection(\n  p1: Types.Point2,\n  q1: Types.Point2,\n  p2: Types.Point2,\n  q2: Types.Point2\n) {\n  const diffQ1P1 = [q1[0] - p1[0], q1[1] - p1[1]];\n  const diffQ2P2 = [q2[0] - p2[0], q2[1] - p2[1]];\n  const denominator = diffQ2P2[1] * diffQ1P1[0] - diffQ2P2[0] * diffQ1P1[1];\n  const absDenominator = denominator >= 0 ? denominator : -denominator;\n\n  if (absDenominator < PARALLEL_LINES_TOLERANCE) {\n    // No Math.min/max calls for better performance.\n    const line1AABB = [\n      p1[0] < q1[0] ? p1[0] : q1[0], // 0: minX\n      p1[0] > q1[0] ? p1[0] : q1[0], // 1: maxX\n      p1[1] < q1[1] ? p1[1] : q1[1], // 2: minY\n      p1[1] > q1[1] ? p1[1] : q1[1], // 3: maxY\n    ];\n\n    // No Math.min/max calls for better performance.\n    const line2AABB = [\n      p2[0] < q2[0] ? p2[0] : q2[0], // 0: minX\n      p2[0] > q2[0] ? p2[0] : q2[0], // 1: maxX\n      p2[1] < q2[1] ? p2[1] : q2[1], // 2: minY\n      p2[1] > q2[1] ? p2[1] : q2[1], // 3: maxY\n    ];\n\n    const aabbIntersects =\n      line1AABB[0] <= line2AABB[1] && // minX1 <= maxX2\n      line1AABB[1] >= line2AABB[0] && // maxX1 >= minX2\n      line1AABB[2] <= line2AABB[3] && // minY1 <= maxY2\n      line1AABB[3] >= line2AABB[2]; // maxY1 >= minY2\n\n    if (!aabbIntersects) {\n      return;\n    }\n\n    // Three tests are enough to know if the lines overlap\n    const overlap =\n      mathLine.isPointOnLineSegment(p1, q1, p2) ||\n      mathLine.isPointOnLineSegment(p1, q1, q2) ||\n      mathLine.isPointOnLineSegment(p2, q2, p1);\n\n    if (!overlap) {\n      return;\n    }\n\n    // min/max seems to be inverted but that is correct because it is looking\n    // for the intersection range. No Math.min/max calls for better performance.\n    const minX = line1AABB[0] > line2AABB[0] ? line1AABB[0] : line2AABB[0];\n    const maxX = line1AABB[1] < line2AABB[1] ? line1AABB[1] : line2AABB[1];\n    const minY = line1AABB[2] > line2AABB[2] ? line1AABB[2] : line2AABB[2];\n    const maxY = line1AABB[3] < line2AABB[3] ? line1AABB[3] : line2AABB[3];\n    const midX = (minX + maxX) * 0.5;\n    const midY = (minY + maxY) * 0.5;\n\n    return [midX, midY];\n  }\n\n  let a = p1[1] - p2[1];\n  let b = p1[0] - p2[0];\n  const numerator1 = diffQ2P2[0] * a - diffQ2P2[1] * b;\n  const numerator2 = diffQ1P1[0] * a - diffQ1P1[1] * b;\n  a = numerator1 / denominator;\n  b = numerator2 / denominator;\n\n  const resultX = p1[0] + a * diffQ1P1[0];\n  const resultY = p1[1] + a * diffQ1P1[1];\n\n  return [resultX, resultY];\n}\n","import { Types } from '@cornerstonejs/core';\nimport * as mathPoint from '../point';\nimport getLineSegmentIntersectionsIndexes from './getLineSegmentIntersectionsIndexes';\nimport containsPoint from './containsPoint';\nimport getNormal2 from './getNormal2';\nimport { glMatrix, vec3 } from 'gl-matrix';\nimport getLinesIntersection from './getLinesIntersection';\n\nenum PolylinePointType {\n  Vertex,\n  Intersection,\n}\n\n// Position of the point related to the intersection region\nenum PolylinePointPosition {\n  Outside = -1,\n  Edge = 0,\n  Inside = 1,\n}\n\n// Direction from last point to the intersection point to know if it is entering\n// or exiting the intersection region\nenum PolylinePointDirection {\n  Exiting = -1,\n  Unknown = 0,\n  Entering = 1,\n}\n\ntype PolylinePoint = {\n  type: PolylinePointType;\n  coordinates: Types.Point2;\n  position?: PolylinePointPosition;\n  visited: boolean;\n  next: PolylinePoint;\n};\n\ntype PolylineIntersectionPoint = PolylinePoint & {\n  direction: PolylinePointDirection;\n  cloned?: boolean;\n};\n\n/**\n * Ensure all polyline point objects are pointing to the next object in case\n * it is still not point to anyone.\n * @param polylinePoints - Array that contains all polyline points (vertices and intersections)\n */\nfunction ensuresNextPointers(polylinePoints: PolylinePoint[]) {\n  // Make sure all nodes point to a valid node\n  for (let i = 0, len = polylinePoints.length; i < len; i++) {\n    const currentPoint = polylinePoints[i];\n\n    if (!currentPoint.next) {\n      currentPoint.next = polylinePoints[i === len - 1 ? 0 : i + 1];\n    }\n  }\n}\n\n/**\n * Creates one linked list per polyline that contains all vertices and intersections\n * found while walking along the edges.\n *\n * @param targetPolyline - Target polyline\n * @param sourcePolyline - Source polyline\n * @returns Two linked lists with all vertices and intersections.\n */\nfunction getSourceAndTargetPointsList(\n  targetPolyline: Types.Point2[],\n  sourcePolyline: Types.Point2[]\n) {\n  const targetPolylinePoints: PolylinePoint[] = [];\n  const sourcePolylinePoints: PolylinePoint[] = [];\n  const sourceIntersectionsCache = new Map<\n    number,\n    PolylineIntersectionPoint[]\n  >();\n\n  const isFirstPointInside = containsPoint(sourcePolyline, targetPolyline[0]);\n\n  let intersectionPointDirection = isFirstPointInside\n    ? PolylinePointDirection.Exiting\n    : PolylinePointDirection.Entering;\n\n  // Store all vertices and intersection for target contour\n  for (let i = 0, len = targetPolyline.length; i < len; i++) {\n    const p1 = targetPolyline[i];\n    const pointInside = containsPoint(sourcePolyline, p1);\n    const vertexPoint: PolylinePoint = {\n      type: PolylinePointType.Vertex,\n      coordinates: p1,\n      position: pointInside\n        ? PolylinePointPosition.Inside\n        : PolylinePointPosition.Outside,\n      visited: false,\n      next: null,\n    };\n\n    targetPolylinePoints.push(vertexPoint);\n\n    const q1 = targetPolyline[i === len - 1 ? 0 : i + 1];\n    const intersectionsInfo = getLineSegmentIntersectionsIndexes(\n      sourcePolyline,\n      p1,\n      q1\n    ).map((intersectedLineSegment) => {\n      const sourceLineSegmentId: number = intersectedLineSegment[0];\n      const p2 = sourcePolyline[intersectedLineSegment[0]];\n      const q2 = sourcePolyline[intersectedLineSegment[1]];\n\n      // lineSegment.intersectLine returns the midpoint of the four points\n      // when the lines are parallel or co-incident.  Otherwise it will return\n      // an extension of the line.\n      const intersectionCoordinate = getLinesIntersection(\n        p1,\n        q1,\n        p2,\n        q2\n      ) as Types.Point2;\n\n      const targetStartPointDistSquared = mathPoint.distanceToPointSquared(\n        p1,\n        intersectionCoordinate\n      );\n\n      return {\n        sourceLineSegmentId,\n        coordinate: intersectionCoordinate,\n        targetStartPointDistSquared,\n      };\n    });\n\n    intersectionsInfo.sort(\n      (left, right) =>\n        left.targetStartPointDistSquared - right.targetStartPointDistSquared\n    );\n\n    intersectionsInfo.forEach((intersectionInfo) => {\n      const { sourceLineSegmentId, coordinate: intersectionCoordinate } =\n        intersectionInfo;\n\n      // Intersection point to be added to the target polyline list\n      const targetEdgePoint: PolylineIntersectionPoint = {\n        type: PolylinePointType.Intersection,\n        coordinates: intersectionCoordinate,\n        position: PolylinePointPosition.Edge,\n        direction: intersectionPointDirection,\n        visited: false,\n        next: null,\n      };\n\n      // Intersection point to be added to the source polyline list.\n      // At this point there is no way to know if the point is entering or\n      // exiting the intersection region but that is not going to be used\n      // hence it is set to \"unknown\".\n      const sourceEdgePoint: PolylineIntersectionPoint = {\n        ...targetEdgePoint,\n        direction: PolylinePointDirection.Unknown,\n        cloned: true,\n      };\n\n      if (intersectionPointDirection === PolylinePointDirection.Entering) {\n        targetEdgePoint.next = sourceEdgePoint;\n      } else {\n        sourceEdgePoint.next = targetEdgePoint;\n      }\n\n      let sourceIntersectionPoints =\n        sourceIntersectionsCache.get(sourceLineSegmentId);\n\n      if (!sourceIntersectionPoints) {\n        sourceIntersectionPoints = [];\n        sourceIntersectionsCache.set(\n          sourceLineSegmentId,\n          sourceIntersectionPoints\n        );\n      }\n\n      targetPolylinePoints.push(targetEdgePoint);\n      sourceIntersectionPoints.push(sourceEdgePoint);\n\n      // Switches from \"exiting\" to \"entering\" and vice-versa\n      intersectionPointDirection *= -1;\n    });\n  }\n\n  // Store all vertices and intersections for source contour\n  for (let i = 0, len = sourcePolyline.length; i < len; i++) {\n    const lineSegmentId: number = i;\n    const p1 = sourcePolyline[i];\n    const vertexPoint: PolylinePoint = {\n      type: PolylinePointType.Vertex,\n      coordinates: p1,\n      visited: false,\n      next: null,\n    };\n\n    sourcePolylinePoints.push(vertexPoint);\n\n    const sourceIntersectionPoints =\n      sourceIntersectionsCache.get(lineSegmentId);\n\n    if (!sourceIntersectionPoints?.length) {\n      continue;\n    }\n\n    // Calculate the distance between each intersection point to the start point\n    // of the line segment, sort them by distance and return a sorted array that\n    // contains all intersection points.\n    sourceIntersectionPoints\n      .map((intersectionPoint) => ({\n        intersectionPoint,\n        lineSegStartDistSquared: mathPoint.distanceToPointSquared(\n          p1,\n          intersectionPoint.coordinates\n        ),\n      }))\n      .sort(\n        (left, right) =>\n          left.lineSegStartDistSquared - right.lineSegStartDistSquared\n      )\n      .map(({ intersectionPoint }) => intersectionPoint)\n      .forEach((intersectionPoint) =>\n        sourcePolylinePoints.push(intersectionPoint)\n      );\n  }\n\n  ensuresNextPointers(targetPolylinePoints);\n  ensuresNextPointers(sourcePolylinePoints);\n\n  return { targetPolylinePoints, sourcePolylinePoints };\n}\n\n/**\n * Get the next unvisited polyline points that is outside the intersection region.\n * @param polylinePoints - All polyline points (vertices and intersections)\n * @returns Any unvisited point that is outside the intersection region if it\n * exists or `undefined` otherwise\n */\nfunction getUnvisitedOutsidePoint(polylinePoints: PolylinePoint[]) {\n  for (let i = 0, len = polylinePoints.length; i < len; i++) {\n    const point = polylinePoints[i];\n\n    if (!point.visited && point.position === PolylinePointPosition.Outside) {\n      return point;\n    }\n  }\n}\n\n/**\n * Merge two planar polylines (2D)\n */\nfunction mergePolylines(\n  targetPolyline: Types.Point2[],\n  sourcePolyline: Types.Point2[]\n) {\n  const targetNormal = getNormal2(targetPolyline);\n  const sourceNormal = getNormal2(sourcePolyline);\n  const dotNormals = vec3.dot(sourceNormal, targetNormal);\n\n  // Both polylines need to be CW or CCW to be merged and one of them needs to\n  // be reversed if theirs orientation are not the same\n  if (!glMatrix.equals(1, dotNormals)) {\n    sourcePolyline = sourcePolyline.slice().reverse();\n  }\n\n  const { targetPolylinePoints } = getSourceAndTargetPointsList(\n    targetPolyline,\n    sourcePolyline\n  );\n  const startPoint: PolylinePoint =\n    getUnvisitedOutsidePoint(targetPolylinePoints);\n\n  // Source polyline contains target polyline\n  if (!startPoint) {\n    return targetPolyline.slice();\n  }\n\n  const mergedPolyline = [startPoint.coordinates];\n  let currentPoint = startPoint.next;\n\n  while (currentPoint !== startPoint) {\n    if (\n      currentPoint.type === PolylinePointType.Intersection &&\n      (<PolylineIntersectionPoint>currentPoint).cloned\n    ) {\n      currentPoint = currentPoint.next;\n      continue;\n    }\n\n    mergedPolyline.push(currentPoint.coordinates);\n    currentPoint = currentPoint.next;\n  }\n\n  return mergedPolyline;\n}\n\n/**\n * Subtract two planar polylines (2D)\n */\nfunction subtractPolylines(\n  targetPolyline: Types.Point2[],\n  sourcePolyline: Types.Point2[]\n): Types.Point2[][] {\n  const targetNormal = getNormal2(targetPolyline);\n  const sourceNormal = getNormal2(sourcePolyline);\n  const dotNormals = vec3.dot(sourceNormal, targetNormal);\n\n  // The polylines need to have different orientation (CW+CCW or CCW+CW) to be\n  // subtracted and one of them needs to be reversed if theirs orientation are\n  // the same\n  if (!glMatrix.equals(-1, dotNormals)) {\n    sourcePolyline = sourcePolyline.slice().reverse();\n  }\n\n  const { targetPolylinePoints } = getSourceAndTargetPointsList(\n    targetPolyline,\n    sourcePolyline\n  );\n  let startPoint: PolylinePoint = null;\n  const subtractedPolylines = [];\n\n  while ((startPoint = getUnvisitedOutsidePoint(targetPolylinePoints))) {\n    const subtractedPolyline = [startPoint.coordinates];\n    let currentPoint = startPoint.next;\n\n    startPoint.visited = true;\n\n    while (currentPoint !== startPoint) {\n      currentPoint.visited = true;\n\n      if (\n        currentPoint.type === PolylinePointType.Intersection &&\n        (<PolylineIntersectionPoint>currentPoint).cloned\n      ) {\n        currentPoint = currentPoint.next;\n        continue;\n      }\n\n      subtractedPolyline.push(currentPoint.coordinates);\n      currentPoint = currentPoint.next;\n    }\n\n    subtractedPolylines.push(subtractedPolyline);\n  }\n\n  return subtractedPolylines;\n}\n\nexport { mergePolylines, subtractPolylines };\n","import type { Types } from '@cornerstonejs/core';\nimport areLineSegmentsIntersecting from './areLineSegmentsIntersecting';\n\n/**\n * Checks whether the line (`p1`,`q1`) intersects any of the other lines in the\n * `points`, and returns the first value.\n *\n * @param points - Polyline points\n * @param p1 - First point of the line segment that is being tested\n * @param q1 - Second point of the line segment that is being tested\n * @param closed - Test the intersection with the line segment that connects\n *   the last and first points of the polyline\n * @returns Indexes of the line segment points from the polyline that intersects [p1, q1]\n */\nexport default function getFirstLineSegmentIntersectionIndexes(\n  points: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): Types.Point2 | undefined {\n  let initialI;\n  let j;\n\n  if (closed) {\n    j = points.length - 1;\n    initialI = 0;\n  } else {\n    j = 0;\n    initialI = 1;\n  }\n\n  for (let i = initialI; i < points.length; i++) {\n    const p2 = points[j];\n    const q2 = points[i];\n\n    if (areLineSegmentsIntersecting(p1, q1, p2, q2)) {\n      return [j, i];\n    }\n\n    j = i;\n  }\n}\n","import { Types } from '@cornerstonejs/core';\nimport getFirstLineSegmentIntersectionIndexes from './getFirstLineSegmentIntersectionIndexes';\n\n/**\n * Check if two polylines intersect comparing line segment by line segment.\n * @param sourcePolyline - Source polyline\n * @param targetPolyline - Target polyline\n * @returns True if the polylines intersect or false otherwise\n */\nexport default function intersectPolyline(\n  sourcePolyline: Types.Point2[],\n  targetPolyline: Types.Point2[]\n): boolean {\n  // Naive way to detect intersection between polylines in O(n^2).\n  // TODO: Implement Bentley Ottmann sweep line algorithm or maybe some\n  // algorithm that uses r-tree may make it run faster\n  for (let i = 0, sourceLen = sourcePolyline.length; i < sourceLen; i++) {\n    const sourceP1 = sourcePolyline[i];\n    const sourceP2Index = i === sourceLen - 1 ? 0 : i + 1;\n    const sourceP2 = sourcePolyline[sourceP2Index];\n\n    const intersectionPointIndexes = getFirstLineSegmentIntersectionIndexes(\n      targetPolyline,\n      sourceP1,\n      sourceP2\n    );\n\n    if (intersectionPointIndexes?.length === 2) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport * as mathLine from '../line';\n\nconst DEFAULT_EPSILON = 0.1;\n\n/**\n * Ramer–Douglas–Peucker algorithm implementation to decimate a polyline\n * to a similar polyline with fewer points\n *\n * https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm\n * https://rosettacode.org/wiki/Ramer-Douglas-Peucker_line_simplification\n * https://karthaus.nl/rdp/\n *\n * @param polyline - Polyline to decimate\n * @param epsilon - A maximum given distance 'epsilon' to decide if a point\n * should or shouldn't be added the decimated polyline version. In each\n * iteration the polyline is split into two polylines and the distance of each\n * point from those new polylines are checked against the line that connects\n * the first and last points.\n * @returns Decimated polyline\n */\nexport default function decimate(\n  polyline: Types.Point2[],\n  epsilon = DEFAULT_EPSILON\n) {\n  const numPoints = polyline.length;\n\n  // The polyline must have at least a start and end points\n  if (numPoints < 3) {\n    return polyline;\n  }\n\n  const epsilonSquared = epsilon * epsilon;\n  const partitionQueue = [[0, numPoints - 1]];\n\n  // Used a boolean array to set each point that will be in the decimated polyline\n  // because pre-allocated arrays are 3-4x faster than thousands of push() calls\n  // to add all points to a new array.\n  const polylinePointFlags = new Array(numPoints).fill(false);\n\n  // Start and end points are always added to the decimated polyline\n  let numDecimatedPoints = 2;\n\n  // Add start and end points to the decimated polyline\n  polylinePointFlags[0] = true;\n  polylinePointFlags[numPoints - 1] = true;\n\n  // Iterative approach using a queue instead of recursion to reduce the number\n  // of function calls (performance)\n  while (partitionQueue.length) {\n    const [startIndex, endIndex] = partitionQueue.pop();\n\n    // Return if there is no point between the start and end points\n    if (endIndex - startIndex === 1) {\n      continue;\n    }\n\n    const startPoint = polyline[startIndex];\n    const endPoint = polyline[endIndex];\n    let maxDistSquared = -Infinity;\n    let maxDistIndex = -1;\n\n    // Search for the furthest point\n    for (let i = startIndex + 1; i < endIndex; i++) {\n      const currentPoint = polyline[i];\n      const distSquared = mathLine.distanceToPointSquared(\n        startPoint,\n        endPoint,\n        currentPoint\n      );\n\n      if (distSquared > maxDistSquared) {\n        maxDistSquared = distSquared;\n        maxDistIndex = i;\n      }\n    }\n\n    // Do not add any of the points because the fursthest one is very close to\n    // the line based on the epsilon value\n    if (maxDistSquared < epsilonSquared) {\n      continue;\n    }\n\n    // Update the flag for the furthest point because it will be added to the\n    // decimated polyline\n    polylinePointFlags[maxDistIndex] = true;\n    numDecimatedPoints++;\n\n    // Partition the points into two parts using maxDistIndex as the pivot point\n    // and process both sides\n    partitionQueue.push([maxDistIndex, endIndex]);\n    partitionQueue.push([startIndex, maxDistIndex]);\n  }\n\n  // A pre-allocated array is 3-4x faster then multiple push() calls\n  const decimatedPolyline: Types.Point2[] = new Array(numDecimatedPoints);\n\n  for (let srcIndex = 0, dstIndex = 0; srcIndex < numPoints; srcIndex++) {\n    if (polylinePointFlags[srcIndex]) {\n      decimatedPolyline[dstIndex++] = polyline[srcIndex];\n    }\n  }\n\n  return decimatedPolyline;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport getLineSegmentIntersectionsIndexes from './getLineSegmentIntersectionsIndexes';\nimport getLinesIntersection from './getLinesIntersection';\n\n/**\n * Returns all intersections points between a line segment and a polyline\n */\nexport default function getLineSegmentIntersectionsCoordinates(\n  points: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): Types.Point2[] {\n  const result = [];\n  const polylineIndexes = getLineSegmentIntersectionsIndexes(\n    points,\n    p1,\n    q1,\n    closed\n  );\n\n  for (let i = 0; i < polylineIndexes.length; i++) {\n    const p2 = points[polylineIndexes[i][0]];\n    const q2 = points[polylineIndexes[i][1]];\n    const intersection = getLinesIntersection(p1, q1, p2, q2);\n    result.push(intersection);\n  }\n\n  return result;\n}\n","import { vec2 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\nimport areLineSegmentsIntersecting from './areLineSegmentsIntersecting';\n\n/**\n * Checks whether the line (`p1`,`q1`) intersects any of the other lines in the\n * `points`, and returns the closest value.\n * @param points - Polyline points\n * @param p1 - Start point of the line segment\n * @param q1 - End point of the line segment\n * @param closed - Test the intersection against the line that connects the first to the last when closed\n * @returns The closest line segment from polyline that intersects the line segment [p1, q1]\n */\nexport default function getClosestLineSegmentIntersection(\n  points: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): { segment: Types.Point2; distance: number } | undefined {\n  let initialQ2Index;\n  let p2Index;\n\n  if (closed) {\n    p2Index = points.length - 1;\n    initialQ2Index = 0;\n  } else {\n    p2Index = 0;\n    initialQ2Index = 1;\n  }\n\n  const intersections = [];\n\n  for (let q2Index = initialQ2Index; q2Index < points.length; q2Index++) {\n    const p2 = points[p2Index];\n    const q2 = points[q2Index];\n\n    if (areLineSegmentsIntersecting(p1, q1, p2, q2)) {\n      intersections.push([p2Index, q2Index]);\n    }\n\n    p2Index = q2Index;\n  }\n\n  if (intersections.length === 0) {\n    return;\n  }\n\n  // Find intersection closest to the start point\n  const distances = [];\n\n  intersections.forEach((intersection) => {\n    const intersectionPoints = [\n      points[intersection[0]],\n      points[intersection[1]],\n    ];\n\n    const midpoint = [\n      (intersectionPoints[0][0] + intersectionPoints[1][0]) / 2,\n      (intersectionPoints[0][1] + intersectionPoints[1][1]) / 2,\n    ];\n\n    distances.push(vec2.distance(<vec2>midpoint, p1));\n  });\n\n  const minDistance = Math.min(...distances);\n  const indexOfMinDistance = distances.indexOf(minDistance);\n\n  return {\n    segment: intersections[indexOfMinDistance],\n    distance: minDistance,\n  };\n}\n","import { StackViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\nconst EPSILON = 1e-3;\n\n/**\n * Gets the desired spacing for points in the polyline for the\n * `PlanarFreehandROITool` in the x and y canvas directions, as well as\n * returning these canvas directions in world space.\n *\n * @param viewport - The Cornerstone3D `StackViewport` or `VolumeViewport`.\n * @param subPixelResolution - The number to divide the image pixel spacing by\n * to get the sub pixel spacing. E.g. `10` will return spacings 10x smaller than\n * the native image spacing.\n * @returns The spacings of the X and Y directions, and the 3D directions of the\n * x and y directions.\n */\nconst getSubPixelSpacingAndXYDirections = (\n  viewport: Types.IStackViewport | Types.IVolumeViewport,\n  subPixelResolution: number\n): { spacing: Types.Point2; xDir: Types.Point3; yDir: Types.Point3 } => {\n  let spacing;\n  let xDir;\n  let yDir;\n\n  if (viewport instanceof StackViewport) {\n    // Check XY directions\n    const imageData = viewport.getImageData();\n\n    xDir = imageData.direction.slice(0, 3);\n    yDir = imageData.direction.slice(3, 6);\n\n    spacing = imageData.spacing;\n  } else {\n    // Check volume directions\n    const imageData = viewport.getImageData();\n    const { direction, spacing: volumeSpacing } = imageData;\n    const { viewPlaneNormal, viewUp } = viewport.getCamera();\n\n    // Calculate size of spacing vector in normal direction\n    const iVector = direction.slice(0, 3) as Types.Point3;\n    const jVector = direction.slice(3, 6) as Types.Point3;\n    const kVector = direction.slice(6, 9) as Types.Point3;\n\n    const viewRight = vec3.create(); // Get the X direction of the viewport\n\n    vec3.cross(viewRight, <vec3>viewUp, <vec3>viewPlaneNormal);\n\n    const absViewRightDotI = Math.abs(vec3.dot(viewRight, iVector));\n    const absViewRightDotJ = Math.abs(vec3.dot(viewRight, jVector));\n    const absViewRightDotK = Math.abs(vec3.dot(viewRight, kVector));\n\n    // Get X spacing\n    let xSpacing;\n    if (Math.abs(1 - absViewRightDotI) < EPSILON) {\n      xSpacing = volumeSpacing[0];\n      xDir = iVector;\n    } else if (Math.abs(1 - absViewRightDotJ) < EPSILON) {\n      xSpacing = volumeSpacing[1];\n      xDir = jVector;\n    } else if (Math.abs(1 - absViewRightDotK) < EPSILON) {\n      xSpacing = volumeSpacing[2];\n      xDir = kVector;\n    } else {\n      throw new Error('No support yet for oblique plane planar contours');\n    }\n\n    const absViewUpDotI = Math.abs(vec3.dot(viewUp, iVector));\n    const absViewUpDotJ = Math.abs(vec3.dot(viewUp, jVector));\n    const absViewUpDotK = Math.abs(vec3.dot(viewUp, kVector));\n\n    // Get Y spacing\n    let ySpacing;\n    if (Math.abs(1 - absViewUpDotI) < EPSILON) {\n      ySpacing = volumeSpacing[0];\n      yDir = iVector;\n    } else if (Math.abs(1 - absViewUpDotJ) < EPSILON) {\n      ySpacing = volumeSpacing[1];\n      yDir = jVector;\n    } else if (Math.abs(1 - absViewUpDotK) < EPSILON) {\n      ySpacing = volumeSpacing[2];\n      yDir = kVector;\n    } else {\n      throw new Error('No support yet for oblique plane planar contours');\n    }\n\n    spacing = [xSpacing, ySpacing];\n  }\n\n  const subPixelSpacing: Types.Point2 = [\n    spacing[0] / subPixelResolution,\n    spacing[1] / subPixelResolution,\n  ];\n\n  return { spacing: subPixelSpacing, xDir, yDir };\n};\n\nexport default getSubPixelSpacingAndXYDirections;\n","import { vec2 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Returns true if points `p1` and `p2` are within `closeContourProximity`.\n */\nconst pointsAreWithinCloseContourProximity = (\n  p1: Types.Point2,\n  p2: Types.Point2,\n  closeContourProximity: number\n): boolean => {\n  return vec2.dist(p1, p2) < closeContourProximity;\n};\n\nexport default pointsAreWithinCloseContourProximity;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec2, vec3 } from 'gl-matrix';\nimport { PlanarFreehandROICommonData } from './planarFreehandROIInternalTypes';\n\n/**\n * Adds one or more points to the array at a resolution defined by the underlying image.\n */\nconst addCanvasPointsToArray = (\n  element: HTMLDivElement,\n  canvasPoints: Types.Point2[],\n  newCanvasPoint: Types.Point2,\n  commonData: PlanarFreehandROICommonData\n): number => {\n  const { xDir, yDir, spacing } = commonData;\n  const enabledElement = getEnabledElement(element);\n  const { viewport } = enabledElement;\n\n  if (!canvasPoints.length) {\n    canvasPoints.push(newCanvasPoint);\n    console.log('>>>>> !canvasPoints. :: RETURN');\n    return 1;\n  }\n\n  const lastWorldPos = viewport.canvasToWorld(\n    canvasPoints[canvasPoints.length - 1]\n  );\n  const newWorldPos = viewport.canvasToWorld(newCanvasPoint);\n  const worldPosDiff = vec3.create();\n\n  vec3.subtract(worldPosDiff, newWorldPos, lastWorldPos);\n\n  const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n  const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n\n  const numPointsToAdd = Math.max(\n    Math.floor(xDist / spacing[0]),\n    Math.floor(yDist / spacing[0])\n  );\n\n  if (numPointsToAdd > 1) {\n    const lastCanvasPoint = canvasPoints[canvasPoints.length - 1];\n\n    const canvasDist = vec2.dist(lastCanvasPoint, newCanvasPoint);\n\n    const canvasDir = vec2.create();\n\n    vec2.subtract(canvasDir, newCanvasPoint, lastCanvasPoint);\n\n    vec2.set(canvasDir, canvasDir[0] / canvasDist, canvasDir[1] / canvasDist);\n\n    const distPerPoint = canvasDist / numPointsToAdd;\n\n    for (let i = 1; i <= numPointsToAdd; i++) {\n      canvasPoints.push([\n        lastCanvasPoint[0] + distPerPoint * canvasDir[0] * i,\n        lastCanvasPoint[1] + distPerPoint * canvasDir[1] * i,\n      ]);\n    }\n  } else {\n    canvasPoints.push(newCanvasPoint);\n  }\n\n  return numPointsToAdd;\n};\n\nexport default addCanvasPointsToArray;\n","import type { Types } from '@cornerstonejs/core';\nimport { vec2 } from 'gl-matrix';\n\n/**\n * Returns `true` if the point `p` can project onto point (`p1`, `p2`), and if\n * this projected point is less than `proximity` units away.\n */\nconst pointCanProjectOnLine = (\n  p: Types.Point2,\n  p1: Types.Point2,\n  p2: Types.Point2,\n  proximity: number\n): boolean => {\n  // Perfom checks in order of computational complexity.\n  const p1p = [p[0] - p1[0], p[1] - p1[1]];\n  const p1p2 = [p2[0] - p1[0], p2[1] - p1[1]];\n\n  const dot = p1p[0] * p1p2[0] + p1p[1] * p1p2[1];\n\n  // Dot product needs to be positive to be a candidate for projection onto line segment.\n  if (dot < 0) {\n    return false;\n  }\n\n  const p1p2Mag = Math.sqrt(p1p2[0] * p1p2[0] + p1p2[1] * p1p2[1]);\n\n  if (p1p2Mag === 0) {\n    return false;\n  }\n\n  const projectionVectorMag = dot / p1p2Mag;\n  const p1p2UnitVector = [p1p2[0] / p1p2Mag, p1p2[1] / p1p2Mag];\n  const projectionVector = [\n    p1p2UnitVector[0] * projectionVectorMag,\n    p1p2UnitVector[1] * projectionVectorMag,\n  ];\n  const projectionPoint = <Types.Point2>[\n    p1[0] + projectionVector[0],\n    p1[1] + projectionVector[1],\n  ];\n\n  const distance = vec2.distance(p, projectionPoint);\n\n  if (distance > proximity) {\n    // point is too far away.\n    return false;\n  }\n\n  // Check projects onto line segment.\n  if (vec2.distance(p1, projectionPoint) > vec2.distance(p1, p2)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default pointCanProjectOnLine;\n","import { utilities } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nconst epsilon = 1e-6;\n\n/**\n * Projects a polyline from 3D to 2D by reducing one dimension.\n *\n * @param polyline - The polyline to be projected.\n * @returns An object containing the shared dimension index and the projected polyline in 2D.\n * @throws Error if a shared dimension index cannot be found for the polyline.\n */\nexport function projectTo2D(polyline: Types.Point3[]) {\n  // We need to reduce one dimension to 2D, so basically\n  // we need to find the dimension index that is shared by all points\n  // Use the first three points, two is enough but three is more robust\n  let sharedDimensionIndex;\n\n  const testPoints = utilities.getRandomSampleFromArray(polyline, 50);\n\n  for (let i = 0; i < 3; i++) {\n    if (\n      testPoints.every(\n        (point, index, array) => Math.abs(point[i] - array[0][i]) < epsilon\n      )\n    ) {\n      sharedDimensionIndex = i;\n      break;\n    }\n  }\n\n  if (sharedDimensionIndex === undefined) {\n    throw new Error(\n      'Cannot find a shared dimension index for polyline, probably oblique plane'\n    );\n  }\n\n  // convert polyline list and point to 2D\n  const points2D = [] as Types.Point2[];\n\n  const firstDim = (sharedDimensionIndex + 1) % 3;\n  const secondDim = (sharedDimensionIndex + 2) % 3;\n\n  for (let i = 0; i < polyline.length; i++) {\n    points2D.push([polyline[i][firstDim], polyline[i][secondDim]]);\n  }\n\n  return {\n    sharedDimensionIndex,\n    projectedPolyline: points2D,\n  };\n}\n","import type { Types } from '@cornerstonejs/core';\nimport containsPoint from './containsPoint';\nimport { projectTo2D } from './projectTo2D';\n\n/**\n * Determines whether a 3D point is inside a polyline in 3D space.\n *\n * The algorithm works by reducing the polyline and point to 2D space, and then\n * using the 2D algorithm to determine whether the point is inside the polyline.\n *\n * @param point - The 3D point to test.\n * @param polyline - The polyline represented as an array of 3D points.\n * @param options.holesPolyline - An array of polylines representing each hole, so it\n * is an array of arrays of 3D points.\n * @returns A boolean indicating whether the point is inside the polyline.\n * @throws An error if a shared dimension index cannot be found for the polyline points.\n */\nexport function isPointInsidePolyline3D(\n  point: Types.Point3,\n  polyline: Types.Point3[],\n  options: { holes?: Types.Point3[][] } = {}\n) {\n  const { sharedDimensionIndex, projectedPolyline } = projectTo2D(polyline);\n\n  const { holes } = options;\n  const projectedHoles = [] as Types.Point2[][];\n\n  if (holes) {\n    for (let i = 0; i < holes.length; i++) {\n      const hole = holes[i];\n      const hole2D = [] as Types.Point2[];\n\n      for (let j = 0; j < hole.length; j++) {\n        hole2D.push([\n          hole[j][(sharedDimensionIndex + 1) % 3],\n          hole[j][(sharedDimensionIndex + 2) % 3],\n        ]);\n      }\n\n      projectedHoles.push(hole2D);\n    }\n  }\n\n  const point2D = [\n    point[(sharedDimensionIndex + 1) % 3],\n    point[(sharedDimensionIndex + 2) % 3],\n  ] as Types.Point2;\n\n  return containsPoint(projectedPolyline, point2D, { holes: projectedHoles });\n}\n","import type { Types } from '@cornerstonejs/core';\nimport * as lineSegment from '../line';\n\ntype rectLineSegments = {\n  top: Types.Point2[];\n  right: Types.Point2[];\n  bottom: Types.Point2[];\n  left: Types.Point2[];\n};\n\n/**\n * Given a rectangle left, top, width and height, return an object containing the\n * line segments that make up the rectangle's four sides\n * @param left - The x-coordinate of the left edge of the rectangle.\n * @param top - The y-coordinate of the top edge of the rectangle.\n * @param width - The width of the rectangle.\n * @param height - The height of the rectangle.\n * @returns An object with four keys, each of which contains an array of two\n * points.\n */\nfunction rectToLineSegments(\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): rectLineSegments {\n  const topLineStart: Types.Point2 = [left, top];\n  const topLineEnd: Types.Point2 = [left + width, top];\n\n  const rightLineStart: Types.Point2 = [left + width, top];\n  const rightLineEnd: Types.Point2 = [left + width, top + height];\n\n  const bottomLineStart: Types.Point2 = [left + width, top + height];\n  const bottomLineEnd: Types.Point2 = [left, top + height];\n\n  const leftLineStart: Types.Point2 = [left, top + height];\n  const leftLineEnd: Types.Point2 = [left, top];\n\n  const lineSegments = {\n    top: [topLineStart, topLineEnd],\n    right: [rightLineStart, rightLineEnd],\n    bottom: [bottomLineStart, bottomLineEnd],\n    left: [leftLineStart, leftLineEnd],\n  };\n\n  return lineSegments;\n}\n\n/**\n * Calculates distance of the point to the rectangle. It calculates the minimum\n * distance between the point and each line segment of the rectangle.\n *\n * @param rect - coordinates of the rectangle [left, top, width, height]\n * @param point - [x,y] coordinates of a point\n * @returns\n */\nexport default function distanceToPoint(\n  rect: number[],\n  point: Types.Point2\n): number {\n  if (rect.length !== 4 || point.length !== 2) {\n    throw Error(\n      'rectangle:[left, top, width, height] or point: [x,y] not defined correctly'\n    );\n  }\n\n  const [left, top, width, height] = rect;\n\n  let minDistance = 655535;\n  const lineSegments = rectToLineSegments(left, top, width, height);\n\n  Object.keys(lineSegments).forEach((segment) => {\n    const [lineStart, lineEnd] = lineSegments[segment];\n    const distance = lineSegment.distanceToPoint(lineStart, lineEnd, point);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n    }\n  });\n\n  return minDistance;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\ntype Sphere = {\n  center: Types.Point3 | vec3;\n  radius: number;\n  // Square of the radius\n  radius2?: number;\n};\n\n/**\n * Checks if a point is inside a sphere. Note: this is similar to the\n * `pointInEllipse` function, but since we don't need checks for the\n * ellipse's rotation in different views, we can use a simpler equation\n * which would be faster (no if statements).\n *\n * This is safe to call for point in circle as long as you don't call it with\n * anything off-plane - that is, a circle is a degenerate sphere that is\n * intersected with the primary plane.\n *\n * @param sphere - Sphere object with center and radius and radius squared\n *     as radius2 if you are calling this a huge number of times.\n * @param pointLPS - the point to check in world coordinates\n * @returns boolean\n */\nexport default function pointInSphere(sphere: Sphere, pointLPS: vec3): boolean {\n  const { center, radius } = sphere;\n  const radius2 = sphere.radius2 || radius * radius;\n\n  return (\n    (pointLPS[0] - center[0]) * (pointLPS[0] - center[0]) +\n      (pointLPS[1] - center[1]) * (pointLPS[1] - center[1]) +\n      (pointLPS[2] - center[2]) * (pointLPS[2] - center[2]) <=\n    radius2\n  );\n}\n","// Pulled from source: https://github.com/w8r/liang-barsky\n// MIT Licensed.\n\n/**\n * Fast, destructive implementation of Liang-Barsky line clipping algorithm.\n * It clips a 2D segment by a rectangle.\n * @author Alexander Milevski <info@w8r.name>\n * @license MIT\n */\n\nconst EPSILON = 1e-6;\nconst INSIDE = 1;\nconst OUTSIDE = 0;\n\nfunction clipT(num, denom, c) {\n  const [tE, tL] = c;\n  if (Math.abs(denom) < EPSILON) {\n    return num < 0;\n  }\n  const t = num / denom;\n\n  if (denom > 0) {\n    if (t > tL) {\n      return 0;\n    }\n    if (t > tE) {\n      c[0] = t;\n    }\n  } else {\n    if (t < tE) {\n      return 0;\n    }\n    if (t < tL) {\n      c[1] = t;\n    }\n  }\n  return 1;\n}\n\n/**\n * @param  {Point} a\n * @param  {Point} b\n * @param  {BoundingBox} box [xmin, ymin, xmax, ymax]\n * @param  {Point?} [da]\n * @param  {Point?} [db]\n * @return {number}\n */\nexport default function clip(a, b, box, da?, db?) {\n  const [x1, y1] = a;\n  const [x2, y2] = b;\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n\n  if (da === undefined || db === undefined) {\n    da = a;\n    db = b;\n  } else {\n    da[0] = a[0];\n    da[1] = a[1];\n    db[0] = b[0];\n    db[1] = b[1];\n  }\n\n  if (\n    Math.abs(dx) < EPSILON &&\n    Math.abs(dy) < EPSILON &&\n    x1 >= box[0] &&\n    x1 <= box[2] &&\n    y1 >= box[1] &&\n    y1 <= box[3]\n  ) {\n    return INSIDE;\n  }\n\n  const c = [0, 1];\n  if (\n    clipT(box[0] - x1, dx, c) &&\n    clipT(x1 - box[2], -dx, c) &&\n    clipT(box[1] - y1, dy, c) &&\n    clipT(y1 - box[3], -dy, c)\n  ) {\n    const [tE, tL] = c;\n    if (tL < 1) {\n      db[0] = x1 + tL * dx;\n      db[1] = y1 + tL * dy;\n    }\n    if (tE > 0) {\n      da[0] += tE * dx;\n      da[1] += tE * dy;\n    }\n    return INSIDE;\n  }\n  return OUTSIDE;\n}\n","import smoothAnnotation from './smoothAnnotation';\n\nexport default {\n  smoothAnnotation,\n};\n\nexport { smoothAnnotation };\n","import filterAnnotationsWithinSlice from './filterAnnotationsWithinSlice';\nimport getWorldWidthAndHeightFromCorners from './getWorldWidthAndHeightFromCorners';\nimport filterAnnotationsForDisplay from './filterAnnotationsForDisplay';\nimport getPointInLineOfSightWithCriteria from './getPointInLineOfSightWithCriteria';\nimport { isPlaneIntersectingAABB } from './isPlaneIntersectingAABB';\nimport { filterAnnotationsWithinSamePlane } from './filterAnnotationsWithinPlane';\n\nexport default {\n  filterAnnotationsWithinSlice,\n  getWorldWidthAndHeightFromCorners,\n  filterAnnotationsForDisplay,\n  getPointInLineOfSightWithCriteria,\n  isPlaneIntersectingAABB,\n  filterAnnotationsWithinSamePlane,\n};\n\nexport {\n  filterAnnotationsWithinSlice,\n  getWorldWidthAndHeightFromCorners,\n  filterAnnotationsForDisplay,\n  getPointInLineOfSightWithCriteria,\n  isPlaneIntersectingAABB,\n  filterAnnotationsWithinSamePlane,\n};\n","import { vec3 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\nimport type { vtkImageData } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport BoundsIJK from '../types/BoundsIJK';\n\nexport type PointInShape = {\n  value: number;\n  index: number;\n  pointIJK: vec3;\n  pointLPS: vec3 | number[];\n};\n\nexport type PointInShapeCallback = ({\n  value,\n  index,\n  pointIJK,\n  pointLPS,\n}: {\n  value: number;\n  index: number;\n  pointIJK: vec3;\n  pointLPS: vec3;\n}) => void;\n\nexport type ShapeFnCriteria = (pointLPS: vec3, pointIJK: vec3) => boolean;\n\n/**\n * For each point in the image (If boundsIJK is not provided, otherwise, for each\n * point in the provided bounding box), It runs the provided callback IF the point\n * passes the provided criteria to be inside the shape (which is defined by the\n * provided pointInShapeFn)\n *\n * @param imageData - The image data object.\n * @param dimensions - The dimensions of the image.\n * @param pointInShapeFn - A function that takes a point in LPS space and returns\n * true if the point is in the shape and false if it is not.\n * @param callback - A function that will be called for\n * every point in the shape.\n * @param boundsIJK - The bounds of the volume in IJK coordinates.\n */\nexport default function pointInShapeCallback(\n  imageData: vtkImageData | Types.CPUImageData,\n  pointInShapeFn: ShapeFnCriteria,\n  callback?: PointInShapeCallback,\n  boundsIJK?: BoundsIJK\n): Array<PointInShape> {\n  let iMin, iMax, jMin, jMax, kMin, kMax;\n\n  let scalarData;\n  const { numComps } = imageData as any;\n\n  // if getScalarData is a method on imageData\n  if ((imageData as Types.CPUImageData).getScalarData) {\n    scalarData = (imageData as Types.CPUImageData).getScalarData();\n  } else {\n    scalarData = (imageData as vtkImageData)\n      .getPointData()\n      .getScalars()\n      .getData();\n  }\n\n  if (!scalarData) {\n    console.warn('No scalar data found for imageData', imageData);\n    return;\n  }\n\n  const dimensions = imageData.getDimensions();\n\n  if (!boundsIJK) {\n    iMin = 0;\n    iMax = dimensions[0];\n    jMin = 0;\n    jMax = dimensions[1];\n    kMin = 0;\n    kMax = dimensions[2];\n  } else {\n    [[iMin, iMax], [jMin, jMax], [kMin, kMax]] = boundsIJK;\n  }\n\n  const start = vec3.fromValues(iMin, jMin, kMin);\n\n  const direction = imageData.getDirection();\n  const rowCosines = direction.slice(0, 3);\n  const columnCosines = direction.slice(3, 6);\n  const scanAxisNormal = direction.slice(6, 9);\n\n  const spacing = imageData.getSpacing();\n  const [rowSpacing, columnSpacing, scanAxisSpacing] = spacing;\n\n  // @ts-ignore will be fixed in vtk-master\n  const worldPosStart = imageData.indexToWorld(start);\n\n  const rowStep = vec3.fromValues(\n    rowCosines[0] * rowSpacing,\n    rowCosines[1] * rowSpacing,\n    rowCosines[2] * rowSpacing\n  );\n\n  const columnStep = vec3.fromValues(\n    columnCosines[0] * columnSpacing,\n    columnCosines[1] * columnSpacing,\n    columnCosines[2] * columnSpacing\n  );\n\n  const scanAxisStep = vec3.fromValues(\n    scanAxisNormal[0] * scanAxisSpacing,\n    scanAxisNormal[1] * scanAxisSpacing,\n    scanAxisNormal[2] * scanAxisSpacing\n  );\n\n  const xMultiple =\n    numComps ||\n    scalarData.length / dimensions[2] / dimensions[1] / dimensions[0];\n  const yMultiple = dimensions[0] * xMultiple;\n  const zMultiple = dimensions[1] * yMultiple;\n\n  const pointsInShape: Array<PointInShape> = [];\n\n  const currentPos = vec3.clone(worldPosStart);\n\n  for (let k = kMin; k <= kMax; k++) {\n    const startPosJ = vec3.clone(currentPos);\n\n    for (let j = jMin; j <= jMax; j++) {\n      const startPosI = vec3.clone(currentPos);\n\n      for (let i = iMin; i <= iMax; i++) {\n        const pointIJK: Types.Point3 = [i, j, k];\n\n        // The current world position (pointLPS) is now in currentPos\n        if (pointInShapeFn(currentPos as Types.Point3, pointIJK)) {\n          const index = k * zMultiple + j * yMultiple + i * xMultiple;\n          let value;\n          if (xMultiple > 2) {\n            value = [\n              scalarData[index],\n              scalarData[index + 1],\n              scalarData[index + 2],\n            ];\n          } else {\n            value = scalarData[index];\n          }\n\n          pointsInShape.push({\n            value,\n            index,\n            pointIJK,\n            pointLPS: currentPos.slice(),\n          });\n          if (callback) {\n            callback({ value, index, pointIJK, pointLPS: currentPos });\n          }\n        }\n\n        // Increment currentPos by rowStep for the next iteration\n        vec3.add(currentPos, currentPos, rowStep);\n      }\n\n      // Reset currentPos to the start of the next J line and increment by columnStep\n      vec3.copy(currentPos, startPosI);\n      vec3.add(currentPos, currentPos, columnStep);\n    }\n\n    // Reset currentPos to the start of the next K slice and increment by scanAxisStep\n    vec3.copy(currentPos, startPosJ);\n    vec3.add(currentPos, currentPos, scanAxisStep);\n  }\n\n  return pointsInShape;\n}\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport type { vtkImageData } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport { vec3 } from 'gl-matrix';\nimport { pointInSphere } from './math/sphere';\nimport pointInShapeCallback, {\n  PointInShapeCallback,\n} from './pointInShapeCallback';\nimport { BoundsIJK } from '../types';\nimport { getBoundingBoxAroundShape } from './boundingBox';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * Given an imageData, and the great circle top and bottom points of a sphere,\n * this function will run the callback for each point of the imageData that is\n * within the sphere defined by the great circle points. If the viewport\n * is provided, region of interest will be an accurate approximation of the\n * sphere (using viewport camera), and the resulting performance will be\n * better.\n *\n * @privateRemarks great circle also known as orthodrome is the intersection of\n * the sphere and the plane that passes through the center of the sphere\n *\n * @param imageData - The volume imageData\n * @param circlePoints - bottom and top points of the great circle in world coordinates\n * @param callback - A callback function that will be called for each point in the shape.\n */\nexport default function pointInSurroundingSphereCallback(\n  imageData: vtkImageData,\n  circlePoints: [Types.Point3, Types.Point3],\n  callback: PointInShapeCallback,\n  viewport?: Types.IVolumeViewport\n): void {\n  // We can run the sphere equation to determine if a point is inside\n  // the sphere; however, since the imageData dimensions can be quite large, we\n  // can narrow down the search by estimating the bounds of the sphere in index\n  // space.\n  const { boundsIJK, centerWorld, radiusWorld } = _getBounds(\n    circlePoints,\n    imageData,\n    viewport\n  );\n\n  const sphereObj = {\n    center: centerWorld,\n    radius: radiusWorld,\n  };\n\n  pointInShapeCallback(\n    imageData,\n    (pointLPS) => pointInSphere(sphereObj, pointLPS),\n    callback,\n    boundsIJK\n  );\n}\n\nfunction _getBounds(\n  circlePoints: [Types.Point3, Types.Point3],\n  imageData: vtkImageData,\n  viewport\n): {\n  boundsIJK: BoundsIJK;\n  centerWorld: Types.Point3;\n  radiusWorld: number;\n} {\n  const [bottom, top] = circlePoints;\n\n  // Sphere center in world\n  const centerWorld = vec3.fromValues(\n    (bottom[0] + top[0]) / 2,\n    (bottom[1] + top[1]) / 2,\n    (bottom[2] + top[2]) / 2\n  );\n\n  // sphere radius in world\n  const radiusWorld = vec3.distance(bottom, top) / 2;\n\n  let boundsIJK;\n\n  if (!viewport) {\n    // If no viewport is provide (no camera), we can estimate the bounding box\n    // of the sphere in index space.\n    // This is done by calculating the maximum value for radius in the index\n    // space (since the radius is in world space, we need to convert it to index, and\n    // each dimensions can have a different scale factor). Therefore, by finding\n    // the minimum spacing value in the imageData, we can calculate the maximum\n    // radius in index space and use that to calculate the bounds of the sphere\n    // This will not be accurate, but it is a good first approximation.\n    // sphere center in index\n    const centerIJK = transformWorldToIndex(\n      imageData,\n      centerWorld as Types.Point3\n    );\n\n    const spacings = imageData.getSpacing();\n    const minSpacing = Math.min(...spacings);\n\n    const maxRadiusIJK = Math.ceil(radiusWorld / minSpacing);\n\n    boundsIJK = [\n      [centerIJK[0] - maxRadiusIJK, centerIJK[0] + maxRadiusIJK],\n      [centerIJK[1] - maxRadiusIJK, centerIJK[1] + maxRadiusIJK],\n      [centerIJK[2] - maxRadiusIJK, centerIJK[2] + maxRadiusIJK],\n    ];\n\n    return {\n      boundsIJK,\n      centerWorld: centerWorld as Types.Point3,\n      radiusWorld,\n    };\n  }\n\n  boundsIJK = _computeBoundsIJKWithCamera(\n    imageData,\n    viewport,\n    circlePoints,\n    centerWorld,\n    radiusWorld\n  );\n\n  return {\n    boundsIJK,\n    centerWorld: centerWorld as Types.Point3,\n    radiusWorld,\n  };\n}\n\nfunction _computeBoundsIJKWithCamera(\n  imageData,\n  viewport,\n  circlePoints,\n  centerWorld,\n  radiusWorld\n) {\n  const [bottom, top] = circlePoints;\n\n  const dimensions = imageData.getDimensions() as Types.Point3;\n  const camera = viewport.getCamera();\n\n  // Calculate viewRight from the camera, this will get used in order to\n  // calculate circles topLeft and bottomRight on different planes of intersection\n  // between sphere and viewPlane\n  const viewUp = vec3.fromValues(\n    camera.viewUp[0],\n    camera.viewUp[1],\n    camera.viewUp[2]\n  );\n  const viewPlaneNormal = vec3.fromValues(\n    camera.viewPlaneNormal[0],\n    camera.viewPlaneNormal[1],\n    camera.viewPlaneNormal[2]\n  );\n  const viewRight = vec3.create();\n\n  vec3.cross(viewRight, viewUp, viewPlaneNormal);\n\n  // we need to find the bounding box of the sphere in the image, e.g., the\n  // topLeftWorld and bottomRightWorld points of the bounding box.\n  // We go from the sphereCenter in the normal direction of amount radius, and\n  // we go left to find the topLeftWorld point of the bounding box. Next we go\n  // in the opposite direction and go right to find the bottomRightWorld point\n  // of the bounding box.\n  const topLeftWorld = vec3.create();\n  const bottomRightWorld = vec3.create();\n\n  vec3.scaleAndAdd(topLeftWorld, top, viewPlaneNormal, radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottom, viewPlaneNormal, -radiusWorld);\n\n  // go in the direction of viewRight with the value of radius\n  vec3.scaleAndAdd(topLeftWorld, topLeftWorld, viewRight, -radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottomRightWorld, viewRight, radiusWorld);\n\n  // convert the world coordinates to index coordinates\n\n  const sphereCornersIJK = [\n    <Types.Point3>transformWorldToIndex(imageData, <Types.Point3>topLeftWorld),\n    <Types.Point3>(\n      transformWorldToIndex(imageData, <Types.Point3>bottomRightWorld)\n    ),\n  ];\n\n  // get the bounding box of the sphere in the image\n  const boundsIJK = getBoundingBoxAroundShape(sphereCornersIJK, dimensions);\n\n  return boundsIJK;\n}\n","export function pointToString(point, decimals = 5) {\n  return (\n    parseFloat(point[0]).toFixed(decimals) +\n    ',' +\n    parseFloat(point[1]).toFixed(decimals) +\n    ',' +\n    parseFloat(point[2]).toFixed(decimals) +\n    ','\n  );\n}\n","import vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\n/**\n * Gets a point from an array of numbers given its index\n * @param points - array of number, each point defined by three consecutive numbers\n * @param idx - index of the point to retrieve\n * @returns\n */\nexport function getPoint(points, idx): Types.Point3 {\n  const idx3 = idx * 3;\n  if (idx3 < points.length) {\n    return vec3.fromValues(\n      points[idx3],\n      points[idx3 + 1],\n      points[idx3 + 2]\n    ) as Types.Point3;\n  }\n}\n\n/**\n * Extract contour point sets from the outline of a poly data actor\n * @param polyData - vtk polyData\n * @returns\n */\nexport function getPolyDataPointIndexes(polyData: vtkPolyData) {\n  const linesData = polyData.getLines().getData();\n  let idx = 0;\n  const lineSegments = new Map<number, number[]>();\n\n  // Populate lineSegments map\n  while (idx < linesData.length) {\n    const segmentSize = linesData[idx++];\n    const segment = [];\n    for (let i = 0; i < segmentSize; i++) {\n      segment.push(linesData[idx + i]);\n    }\n    lineSegments.set(segment[0], segment);\n    idx += segmentSize;\n  }\n\n  const contours = [];\n\n  // Function to find an available starting point\n  const findStartingPoint = (map) => {\n    for (const [key, value] of map.entries()) {\n      if (value !== undefined) {\n        return key;\n      }\n    }\n    return -1;\n  };\n\n  // Build contours\n  let startPoint = findStartingPoint(lineSegments);\n  while (startPoint !== -1) {\n    const contour = [startPoint];\n    while (lineSegments.has(startPoint)) {\n      const nextPoint = lineSegments.get(startPoint)[1];\n      if (lineSegments.has(nextPoint)) {\n        contour.push(nextPoint);\n      }\n      lineSegments.delete(startPoint);\n      startPoint = nextPoint;\n    }\n    contours.push(contour);\n    startPoint = findStartingPoint(lineSegments);\n  }\n\n  return contours.length ? contours : undefined;\n}\n\n/**\n * Extract contour points from a poly data object\n * @param polyData - vtk polyData\n * @returns\n */\nexport function getPolyDataPoints(polyData: vtkPolyData) {\n  const contoursIndexes = getPolyDataPointIndexes(polyData);\n  if (!contoursIndexes) {\n    return;\n  }\n\n  const rawPointsData = polyData.getPoints().getData();\n  return contoursIndexes.map((contourIndexes) =>\n    contourIndexes.map((index) => getPoint(rawPointsData, index))\n  );\n}\n","import { vec3 } from 'gl-matrix';\nimport { utilities as csUtils } from '@cornerstonejs/core';\n\nconst { isEqual } = csUtils;\n\nconst iAxis = vec3.fromValues(1, 0, 0);\nconst jAxis = vec3.fromValues(0, 1, 0);\nconst kAxis = vec3.fromValues(0, 0, 1);\n\nconst axisList = [iAxis, jAxis, kAxis];\n\n/**\n * Determines whether a given rectangle in a 3D space (defined by its corner\n * points in IJK coordinates) is aligned with the IJK axes.\n * @param rectangleCornersIJK - The corner points of the rectangle in IJK coordinates\n * @returns True if the rectangle is aligned with the IJK axes, false otherwise\n */\nfunction isAxisAlignedRectangle(rectangleCornersIJK) {\n  const rectangleVec1 = vec3.subtract(\n    vec3.create(),\n    rectangleCornersIJK[0],\n    rectangleCornersIJK[1]\n  );\n\n  const rectangleVec2 = vec3.subtract(\n    vec3.create(),\n    rectangleCornersIJK[0],\n    rectangleCornersIJK[2]\n  );\n\n  // Calculate the angles with IJK axes for both vectors\n  const anglesVec1 = calculateAnglesWithAxes(rectangleVec1, axisList);\n  const anglesVec2 = calculateAnglesWithAxes(rectangleVec2, axisList);\n\n  // Check if all angles are aligned (0, 90, 180, or 270 degrees)\n  // we could do csUtils.isEqual(angle % 90, 0) but this is more explicit for reading\n  const isAligned = [...anglesVec1, ...anglesVec2].every(\n    (angle) =>\n      isEqual(angle, 0) ||\n      isEqual(angle, 90) ||\n      isEqual(angle, 180) ||\n      isEqual(angle, 270)\n  );\n\n  return isAligned;\n}\n\n// Function to calculate angle with IJK axes\nfunction calculateAnglesWithAxes(vec, axes) {\n  return axes.map((axis) => (vec3.angle(vec, axis) * 180) / Math.PI);\n}\n\nexport { isAxisAlignedRectangle };\n","import {\n  StackViewport,\n  Types,\n  VolumeViewport,\n  eventTarget,\n  EVENTS,\n  utilities as csUtils,\n  getEnabledElement,\n} from '@cornerstonejs/core';\nimport { ScrollOptions, EventTypes } from '../types';\n\n/**\n * It scrolls one slice in the Stack or Volume Viewport, it uses the options provided\n * to determine the slice to scroll to. For Stack Viewport, it scrolls in the 1 or -1\n * direction, for Volume Viewport, it uses the camera and focal point to determine the\n * slice to scroll to based on the spacings.\n * @param viewport - The viewport in which to scroll\n * @param options - Options to use for scrolling, including direction, invert, and volumeId\n * @returns\n */\nexport default function scroll(\n  viewport: Types.IViewport,\n  options: ScrollOptions\n): void {\n  // check if viewport is disabled then throw error\n  const enabledElement = getEnabledElement(viewport.element);\n\n  if (!enabledElement) {\n    throw new Error('Scroll::Viewport is not enabled (it might be disabled)');\n  }\n\n  if (\n    viewport instanceof StackViewport &&\n    viewport.getImageIds().length === 0\n  ) {\n    throw new Error('Scroll::Stack Viewport has no images');\n  }\n\n  const { volumeId, delta, scrollSlabs } = options;\n\n  if (viewport instanceof VolumeViewport) {\n    scrollVolume(viewport, volumeId, delta, scrollSlabs);\n  } else {\n    (viewport as Types.IStackViewport).scroll(\n      delta,\n      options.debounceLoading,\n      options.loop\n    );\n  }\n}\n\nexport function scrollVolume(\n  viewport: VolumeViewport,\n  volumeId: string,\n  delta: number,\n  scrollSlabs = false\n) {\n  const useSlabThickness = scrollSlabs;\n\n  const { numScrollSteps, currentStepIndex, sliceRangeInfo } =\n    csUtils.getVolumeViewportScrollInfo(viewport, volumeId, useSlabThickness);\n\n  if (!sliceRangeInfo) {\n    return;\n  }\n\n  const { sliceRange, spacingInNormalDirection, camera } = sliceRangeInfo;\n  const { focalPoint, viewPlaneNormal, position } = camera;\n\n  const { newFocalPoint, newPosition } = csUtils.snapFocalPointToSlice(\n    focalPoint,\n    position,\n    sliceRange,\n    viewPlaneNormal,\n    spacingInNormalDirection,\n    delta\n  );\n\n  viewport.setCamera({\n    focalPoint: newFocalPoint,\n    position: newPosition,\n  });\n  viewport.render();\n\n  const desiredStepIndex = currentStepIndex + delta;\n\n  const VolumeScrollEventDetail: EventTypes.VolumeScrollOutOfBoundsEventDetail =\n    {\n      volumeId,\n      viewport,\n      delta,\n      desiredStepIndex,\n      currentStepIndex,\n      numScrollSteps,\n      currentImageId: viewport.getCurrentImageId(),\n    };\n\n  if (\n    (desiredStepIndex > numScrollSteps || desiredStepIndex < 0) &&\n    viewport.getCurrentImageId() // Check that we are in the plane of acquistion\n  ) {\n    // One common use case of this trigger might be to load the next\n    // volume in a time series or the next segment of a partially loaded volume.\n\n    csUtils.triggerEvent(\n      eventTarget,\n      EVENTS.VOLUME_SCROLL_OUT_OF_BOUNDS,\n      VolumeScrollEventDetail\n    );\n  } else {\n    csUtils.triggerEvent(\n      eventTarget,\n      EVENTS.VOLUME_VIEWPORT_SCROLL,\n      VolumeScrollEventDetail\n    );\n  }\n}\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport {\n  AnnotationCompletedEventType,\n  AnnotationModifiedEventType,\n  AnnotationRemovedEventType,\n} from '../../../types/EventTypes';\nimport { state as annotationState } from '../../../stateManagement/annotation';\nimport type AnnotationGroupSelector from '../../../types/AnnotationGroupSelector';\nimport getInterpolationDataCollection from '../../contours/interpolation/getInterpolationDataCollection';\nimport type {\n  InterpolationViewportData,\n  AcceptInterpolationSelector,\n} from '../../../types/InterpolationTypes';\nimport interpolate from '../../contours/interpolation/interpolate';\nimport deleteRelatedAnnotations from './deleteRelatedAnnotations';\nimport { InterpolationROIAnnotation } from '../../../types/ToolSpecificAnnotationTypes';\nimport ChangeTypes from '../../../enums/ChangeTypes';\nimport getViewportForAnnotation from '../../getViewportForAnnotation';\nimport { addContourSegmentationAnnotation } from '../../contourSegmentation/addContourSegmentationAnnotation';\n\nconst { uuidv4 } = csUtils;\n\nconst ChangeTypesForInterpolation = [\n  ChangeTypes.HandlesUpdated,\n  ChangeTypes.InterpolationUpdated,\n];\n\nexport default class InterpolationManager {\n  static toolNames = [];\n\n  static addTool(toolName: string) {\n    if (!this.toolNames.includes(toolName)) {\n      this.toolNames.push(toolName);\n    }\n  }\n\n  /**\n   * Accepts the autogenerated interpolations, marking them as non-autogenerated.\n   * Can provide a selector to choose which ones to accept.\n   *\n   * Rules for which items to select:\n   * 1. Only choose annotations having the same segment index and segmentationID\n   * 2. Exclude all contours having the same interpolation UID as any other contours\n   *    on the same slice.\n   * 3. Exclude autogenerated annotations\n   * 4. Exclude any reset interpolationUIDs (this is a manual operation to allow\n   *    creating a new interpolation)\n   * 5. Find the set of interpolationUID's remaining\n   *    a. If the set is of size 0, assign a new interpolationUID\n   *    b. If the set is of size 1, assign that interpolationUID\n   *    c. Otherwise (optional, otherwise do b for size>1 randomly),\n   *       for every remaining annotation, find the one whose center\n   *       point is closest to the center point of the new annotation.\n   *       Choose that interpolationUID\n   *\n   * To allow creating new interpolated groups, the idea is to just use a new\n   * segment index, then have an operation to update the segment index of an\n   * interpolation set.  That way the user can easily draw/see the difference,\n   * and then merge them as required.\n   * However, the base rules allow creating two contours on a single image to\n   * create a separate set.\n   */\n  static acceptAutoGenerated(\n    annotationGroupSelector: AnnotationGroupSelector,\n    selector: AcceptInterpolationSelector = {}\n  ) {\n    const { toolNames, segmentationId, segmentIndex, sliceIndex } = selector;\n    for (const toolName of toolNames || InterpolationManager.toolNames) {\n      const annotations = annotationState.getAnnotations(\n        toolName,\n        annotationGroupSelector\n      ) as InterpolationROIAnnotation[];\n      if (!annotations?.length) {\n        continue;\n      }\n      for (const annotation of annotations) {\n        const { interpolationUID, data, autoGenerated, metadata } = annotation;\n        if (interpolationUID) {\n          annotation.interpolationCompleted = true;\n        }\n        if (!autoGenerated) {\n          continue;\n        }\n        if (segmentIndex && segmentIndex !== data.segmentation.segmentIndex) {\n          continue;\n        }\n        if (\n          sliceIndex !== undefined &&\n          metadata &&\n          sliceIndex !== metadata.sliceIndex\n        ) {\n          continue;\n        }\n        if (\n          segmentationId &&\n          segmentationId !== data.segmentation.segmentationId\n        ) {\n          continue;\n        }\n        addContourSegmentationAnnotation(annotation);\n        annotation.autoGenerated = false;\n      }\n    }\n  }\n\n  /**\n   * When an annotation is completed, if the configuration includes interpolation,\n   * then find matching interpolations and interpolation between this segmentation\n   * and the other segmentations of the same type.\n   */\n  static handleAnnotationCompleted = (evt: AnnotationCompletedEventType) => {\n    const annotation = evt.detail.annotation as InterpolationROIAnnotation;\n    if (!annotation?.metadata) {\n      return;\n    }\n    const { toolName, originalToolName } = annotation.metadata;\n\n    if (\n      !this.toolNames.includes(toolName) &&\n      !this.toolNames.includes(originalToolName)\n    ) {\n      return;\n    }\n\n    const viewport = getViewportForAnnotation(annotation);\n    if (!viewport) {\n      console.warn('Unable to find viewport for', annotation);\n      return;\n    }\n    const sliceData: Types.ImageSliceData = getSliceData(viewport);\n    const viewportData: InterpolationViewportData = {\n      viewport,\n      sliceData,\n      annotation,\n      interpolationUID: annotation.interpolationUID,\n    };\n    const hasInterpolationUID = !!annotation.interpolationUID;\n    // If any update, triggered on an annotation, then it will be treated as non-autogenerated.\n    annotation.autoGenerated = false;\n    if (hasInterpolationUID) {\n      // This has already been configured with matching details, so just run\n      //  the interpolation again.\n      deleteRelatedAnnotations(viewportData);\n      interpolate(viewportData);\n      return;\n    }\n    const filterData = [\n      {\n        key: 'segmentIndex',\n        value: annotation.data.segmentation.segmentIndex,\n        parentKey: (annotation) => annotation.data.segmentation,\n      },\n      {\n        key: 'viewPlaneNormal',\n        value: annotation.metadata.viewPlaneNormal,\n        parentKey: (annotation) => annotation.metadata,\n      },\n      {\n        key: 'viewUp',\n        value: annotation.metadata.viewUp,\n        parentKey: (annotation) => annotation.metadata,\n      },\n    ];\n    let interpolationAnnotations = getInterpolationDataCollection(\n      viewportData,\n      filterData\n    );\n    // Skip other type of annotation interpolationUID's that are co-located\n    const { sliceIndex } = annotation.metadata;\n    const skipUIDs = new Set<string>();\n    interpolationAnnotations.forEach((interpolationAnnotation) => {\n      if (\n        interpolationAnnotation.interpolationCompleted ||\n        interpolationAnnotation.metadata.sliceIndex === sliceIndex\n      ) {\n        const { interpolationUID } = interpolationAnnotation;\n        skipUIDs.add(interpolationUID);\n      }\n    });\n    interpolationAnnotations = interpolationAnnotations.filter(\n      (interpolationAnnotation) =>\n        !skipUIDs.has(interpolationAnnotation.interpolationUID)\n    );\n\n    // Assign a new interpolationUID (this is checked above, so will be empty initially)\n    annotation.interpolationUID =\n      interpolationAnnotations[0]?.interpolationUID || uuidv4();\n    viewportData.interpolationUID = annotation.interpolationUID;\n    interpolate(viewportData);\n  };\n\n  /**\n   * This method gets called when an annotation changes.  It will then trigger\n   * related already interpolated annotations to be updated with the modified data.\n   */\n  static handleAnnotationUpdate = (evt: AnnotationModifiedEventType) => {\n    const annotation = evt.detail.annotation as InterpolationROIAnnotation;\n    const { changeType = ChangeTypes.HandlesUpdated } = evt.detail;\n    if (!annotation?.metadata) {\n      return;\n    }\n    const { toolName, originalToolName } = annotation.metadata;\n\n    if (\n      (!this.toolNames.includes(toolName) &&\n        !this.toolNames.includes(originalToolName)) ||\n      !ChangeTypesForInterpolation.includes(changeType)\n    ) {\n      return;\n    }\n    const viewport = getViewportForAnnotation(annotation);\n    if (!viewport) {\n      console.warn(\n        'Unable to find matching viewport for annotation interpolation',\n        annotation\n      );\n      return;\n    }\n    if (annotation.autoGenerated) {\n      // Dont fire the annotation changed events here, as that leads to recursion,\n      // although this is in fact completing the event, so trigger the segmentation add\n      addContourSegmentationAnnotation(annotation);\n      annotation.autoGenerated = false;\n    }\n\n    const sliceData: Types.ImageSliceData = getSliceData(viewport);\n    const viewportData: InterpolationViewportData = {\n      viewport,\n      sliceData,\n      annotation,\n      interpolationUID: annotation.interpolationUID,\n      isInterpolationUpdate: changeType === ChangeTypes.InterpolationUpdated,\n    };\n    interpolate(viewportData);\n  };\n\n  /**\n   * Delete interpolated annotations when their endpoints are deleted.\n   */\n  static handleAnnotationDelete = (evt: AnnotationRemovedEventType) => {\n    const annotation = evt.detail.annotation as InterpolationROIAnnotation;\n    if (!annotation?.metadata) {\n      return;\n    }\n    const { toolName } = annotation.metadata;\n\n    if (!this.toolNames.includes(toolName) || annotation.autoGenerated) {\n      return;\n    }\n    const viewport = getViewportForAnnotation(annotation);\n\n    if (!viewport) {\n      console.warn(\n        \"No viewport, can't delete interpolated results\",\n        annotation\n      );\n      return;\n    }\n\n    const sliceData: Types.ImageSliceData = getSliceData(viewport);\n    const viewportData: InterpolationViewportData = {\n      viewport,\n      sliceData,\n      annotation,\n      interpolationUID: annotation.interpolationUID,\n    };\n    // If any update, triggered on an annotation, then it will be treated as non-interpolated.\n    annotation.autoGenerated = false;\n    deleteRelatedAnnotations(viewportData);\n  };\n}\n\nfunction getSliceData(viewport): Types.ImageSliceData {\n  const sliceData: Types.ImageSliceData = {\n    numberOfSlices: viewport.getNumberOfSlices(),\n    imageIndex: viewport.getCurrentImageIdIndex(),\n  };\n  return sliceData;\n}\n","import { generateContourSetsFromLabelmap } from '../contours';\nimport SegmentationRepresentations from '../../enums/SegmentationRepresentations';\nimport findLargestBidirectional from './findLargestBidirectional';\n\nconst { Labelmap } = SegmentationRepresentations;\n\n/**\n * Generates a contour object over the segment, and then uses the contouring to\n * find the largest bidirectional object that can be applied within the acquisition\n * plane that is within the segment index, or the contained segment indices.\n *\n * @param segmentation.segments - a list of segments to apply the contour to.\n * @param segmentation.segments.containedSegmentIndices - a set of segment indexes equivalent to the primary segment\n * @param segmentation.segments.label - the label for the segment\n * @param segmentation.segments.color - the color to use for the segment label\n */\nexport default function contourAndFindLargestBidirectional(segmentation) {\n  const contours = generateContourSetsFromLabelmap({\n    segmentations: segmentation,\n  });\n\n  if (!contours?.length || !contours[0].sliceContours.length) {\n    return;\n  }\n\n  const {\n    representationData,\n    segments = [\n      null,\n      { label: 'Unspecified', color: null, containedSegmentIndices: null },\n    ],\n  } = segmentation;\n  const { volumeId: segVolumeId } = representationData[Labelmap];\n\n  const segmentIndex = segments.findIndex((it) => !!it);\n  if (segmentIndex === -1) {\n    return;\n  }\n  segments[segmentIndex].segmentIndex = segmentIndex;\n  return findLargestBidirectional(\n    contours[0],\n    segVolumeId,\n    segments[segmentIndex]\n  );\n}\n","/**\n * Creates a map that associates each imageId with a set of segmentation imageIds.\n * Note that this function assumes that the imageIds and segmentationImageIds arrays\n * are the same length and same order.\n *\n * @param imageIdsArray - An array of imageIds.\n * @param segmentationImageIds - An array of segmentation imageIds.\n * @returns A map that maps each imageId to a set of segmentation imageIds.\n */\nfunction createImageIdReferenceMap(\n  imageIdsArray: string[],\n  segmentationImageIds: string[]\n): Map<string, string> {\n  const imageIdReferenceMap = new Map<string, string>(\n    imageIdsArray.map((imageId, index) => {\n      return [imageId, segmentationImageIds[index]];\n    })\n  );\n\n  return imageIdReferenceMap;\n}\n\nexport { createImageIdReferenceMap };\n","import type {\n  FloodFillResult,\n  FloodFillGetter,\n  FloodFillOptions,\n} from '../../types';\nimport { Types } from '@cornerstonejs/core';\n\n/**\n * floodFill.js - Taken from MIT OSS lib - https://github.com/tuzz/n-dimensional-flood-fill\n * Refactored to ES6.  Fixed the bounds/visits checks to use integer keys, restricting the\n * total search spacing to +/- 32k in each dimension, but resulting in about a hundred time\n * performance gain for larger regions since JavaScript does not have a hash map to allow the\n * map to work on keys.\n *\n * @param getter The getter to the elements of your data structure,\n *                          e.g. getter(x,y) for a 2D interprettation of your structure.\n * @param seed The seed for your fill. The dimensionality is infered\n *                        by the number of dimensions of the seed.\n * @param options.onFlood - An optional callback to execute when each pixel is flooded.\n *                             e.g. onFlood(x,y).\n * @param options.onBoundary - An optional callback to execute whenever a boundary is reached.\n *                                a boundary could be another segmentIndex, or the edge of your\n *                                data structure (i.e. when your getter returns undefined).\n * @param options.equals - An optional equality method for your datastructure.\n *                            Default is simply value1 = value2.\n * @param options.diagonals - Whether you allow flooding through diagonals. Defaults to false.\n *\n * @returns Flood fill results\n */\nfunction floodFill(\n  getter: FloodFillGetter,\n  seed: Types.Point2 | Types.Point3,\n  options: FloodFillOptions = {}\n): FloodFillResult {\n  const onFlood = options.onFlood;\n  const onBoundary = options.onBoundary;\n  const equals = options.equals;\n  const diagonals = options.diagonals || false;\n  const startNode = get(seed);\n  const permutations = prunedPermutations();\n  const stack = [];\n  const flooded = [];\n  const visits = new Set();\n  const bounds = new Map();\n\n  stack.push({ currentArgs: seed });\n\n  while (stack.length > 0) {\n    flood(stack.pop());\n  }\n\n  return {\n    flooded,\n    boundaries: boundaries(),\n  };\n\n  function flood(job) {\n    const getArgs = job.currentArgs;\n    const prevArgs = job.previousArgs;\n\n    if (visited(getArgs)) {\n      return;\n    }\n    markAsVisited(getArgs);\n\n    if (member(getArgs)) {\n      markAsFlooded(getArgs);\n      pushAdjacent(getArgs);\n    } else {\n      markAsBoundary(prevArgs);\n    }\n  }\n\n  /**\n   * Indicates if the key has been visited.\n   * @param key is a 2 or 3 element vector with values -32768...32767\n   */\n  function visited(key) {\n    const [x, y, z = 0] = key;\n    // Use an integer key value for checking visited, since JavaScript does not\n    // provide a generic hash key indexed hash map.\n    const iKey = x + 32768 + 65536 * (y + 32768 + 65536 * (z + 32768));\n    return visits.has(iKey);\n  }\n\n  function markAsVisited(key) {\n    const [x, y, z = 0] = key;\n    const iKey = x + 32768 + 65536 * (y + 32768 + 65536 * (z + 32768));\n    visits.add(iKey);\n  }\n\n  function member(getArgs) {\n    const node = get(getArgs);\n\n    return equals ? equals(node, startNode) : node === startNode;\n  }\n\n  function markAsFlooded(getArgs) {\n    flooded.push(getArgs);\n    if (onFlood) {\n      //@ts-ignore\n      onFlood(...getArgs);\n    }\n  }\n\n  function markAsBoundary(prevArgs) {\n    const [x, y, z = 0] = prevArgs;\n    // Use an integer key value for checking visited, since JavaScript does not\n    // provide a generic hash key indexed hash map.\n    const iKey = x + 32768 + 65536 * (y + 32768 + 65536 * (z + 32768));\n    bounds.set(iKey, prevArgs);\n    if (onBoundary) {\n      //@ts-ignore\n      onBoundary(...prevArgs);\n    }\n  }\n\n  function pushAdjacent(getArgs) {\n    for (let i = 0; i < permutations.length; i += 1) {\n      const perm = permutations[i];\n      const nextArgs = getArgs.slice(0);\n\n      for (let j = 0; j < getArgs.length; j += 1) {\n        nextArgs[j] += perm[j];\n      }\n\n      stack.push({\n        currentArgs: nextArgs,\n        previousArgs: getArgs,\n      });\n    }\n  }\n\n  function get(getArgs) {\n    //@ts-ignore\n    return getter(...getArgs);\n  }\n\n  // This is a significant performance hit - should be done as a wrapper\n  // only when needed.\n  // function safely(f, args) {\n  //   try {\n  //     return f(...args);\n  //   } catch (error) {\n  //     return;\n  //   }\n  // }\n\n  function prunedPermutations() {\n    const permutations = permute(seed.length);\n\n    return permutations.filter(function (perm) {\n      const count = countNonZeroes(perm);\n\n      return count !== 0 && (count === 1 || diagonals);\n    });\n  }\n\n  function permute(length) {\n    const perms = [];\n\n    const permutation = function (string) {\n      return string.split('').map(function (c) {\n        return parseInt(c, 10) - 1;\n      });\n    };\n\n    for (let i = 0; i < Math.pow(3, length); i += 1) {\n      const string = lpad(i.toString(3), '0', length);\n\n      perms.push(permutation(string));\n    }\n\n    return perms;\n  }\n\n  function boundaries() {\n    const array = Array.from(bounds.values());\n    array.reverse();\n    return array;\n  }\n}\n\nfunction defaultEquals(a, b) {\n  return a === b;\n}\n\nfunction countNonZeroes(array) {\n  let count = 0;\n\n  for (let i = 0; i < array.length; i += 1) {\n    if (array[i] !== 0) {\n      count += 1;\n    }\n  }\n\n  return count;\n}\n\nfunction lpad(string, character, length) {\n  const array = new Array(length + 1);\n  const pad = array.join(character);\n\n  return (pad + string).slice(-length);\n}\n\nexport default floodFill;\n","import { getAnnotation } from '../../stateManagement';\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\n\n/**\n * Retrieves the index of the hovered contour segmentation annotation for a given segmentation ID.\n *\n * @param segmentationId - The ID of the segmentation.\n * @returns The index of the hovered contour segmentation annotation, or undefined if none is found.\n */\nexport function getHoveredContourSegmentationAnnotation(segmentationId) {\n  const segmentation = getSegmentation(segmentationId);\n  const { annotationUIDsMap } = segmentation.representationData.CONTOUR;\n\n  for (const [segmentIndex, annotationUIDs] of annotationUIDsMap.entries()) {\n    const highlightedAnnotationUID = Array.from(annotationUIDs).find(\n      (annotationUID) => getAnnotation(annotationUID).highlighted\n    );\n\n    if (highlightedAnnotationUID) {\n      return segmentIndex;\n    }\n  }\n\n  return undefined;\n}\n","import { cache, utilities } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport {\n  getSegmentation,\n  getSegmentationIdRepresentations,\n} from '../../stateManagement/segmentation/segmentationState';\nimport {\n  LabelmapSegmentationDataStack,\n  LabelmapSegmentationDataVolume,\n} from '../../types/LabelmapTypes';\nimport { isVolumeSegmentation } from '../../tools/segmentation/strategies/utils/stackVolumeCheck';\n\ntype Options = {\n  viewport?: Types.IViewport;\n  searchRadius?: number;\n};\n\n/**\n * Retrieves the segment index at the border of a labelmap in a segmentation.\n *\n * @param segmentationId - The ID of the segmentation.\n * @param worldPoint - The world coordinates of the point.\n * @param options - Additional options.\n * @param options.viewport - The viewport to use.\n * @param options.searchRadius - The search radius to use.\n * @returns The segment index at the labelmap border, or undefined if not found.\n */\nexport function getSegmentAtLabelmapBorder(\n  segmentationId: string,\n  worldPoint: Types.Point3,\n  { viewport, searchRadius }: Options\n): number {\n  const segmentation = getSegmentation(segmentationId);\n\n  const labelmapData = segmentation.representationData.LABELMAP;\n\n  if (isVolumeSegmentation(labelmapData)) {\n    const { volumeId } = labelmapData as LabelmapSegmentationDataVolume;\n    const segmentationVolume = cache.getVolume(volumeId);\n\n    if (!segmentationVolume) {\n      return;\n    }\n\n    const imageData = segmentationVolume.imageData;\n\n    const segmentIndex = imageData.getScalarValueFromWorld(worldPoint);\n\n    const canvasPoint = viewport.worldToCanvas(worldPoint);\n\n    const onEdge = isSegmentOnEdgeCanvas(\n      canvasPoint as Types.Point2,\n      segmentIndex,\n      viewport,\n      imageData,\n      searchRadius\n    );\n\n    return onEdge ? segmentIndex : undefined;\n  }\n\n  // stack segmentation case\n  const { imageIdReferenceMap } = labelmapData as LabelmapSegmentationDataStack;\n\n  const currentImageId = (viewport as Types.IStackViewport).getCurrentImageId();\n\n  const segmentationImageId = imageIdReferenceMap.get(currentImageId);\n  const image = cache.getImage(segmentationImageId);\n\n  if (!image) {\n    return;\n  }\n\n  // find the first segmentationRepresentationUID for the segmentationId, since\n  // that is what we use as actorUID in the viewport\n\n  const segmentationRepresentations = getSegmentationIdRepresentations(\n    segmentation.segmentationId\n  );\n\n  const { segmentationRepresentationUID } = segmentationRepresentations[0];\n  const segmentationActor = viewport.getActor(segmentationRepresentationUID);\n  const imageData = segmentationActor?.actor.getMapper().getInputData();\n  const indexIJK = utilities.transformWorldToIndex(imageData, worldPoint);\n\n  const dimensions = imageData.getDimensions();\n  const voxelManager = (imageData.voxelManager ||\n    utilities.VoxelManager.createVolumeVoxelManager(\n      dimensions,\n      imageData.getPointData().getScalars().getData()\n    )) as utilities.VoxelManager<number>;\n\n  const segmentIndex = voxelManager.getAtIJKPoint(indexIJK as Types.Point3);\n\n  const onEdge = isSegmentOnEdgeIJK(\n    indexIJK as Types.Point3,\n    dimensions,\n    voxelManager,\n    segmentIndex\n  );\n\n  return onEdge ? segmentIndex : undefined;\n}\n\n/**\n * Checks if a segment is on the edge of a labelmap.\n * @param getNeighborIndex - A function that returns the neighbor index given the delta values.\n * @param segmentIndex - The index of the segment to check.\n * @param searchRadius - The radius within which to search for neighboring segments. Default is 1.\n * @returns A boolean indicating whether the segment is on the edge.\n */\nfunction isSegmentOnEdge(\n  getNeighborIndex: (\n    deltaI: number,\n    deltaJ: number,\n    deltaK: number\n  ) => number | undefined,\n  segmentIndex: number,\n  searchRadius = 1 // Default search radius\n): boolean {\n  const neighborRange = Array.from(\n    { length: 2 * searchRadius + 1 },\n    (_, i) => i - searchRadius\n  );\n\n  for (const deltaI of neighborRange) {\n    for (const deltaJ of neighborRange) {\n      for (const deltaK of neighborRange) {\n        if (deltaI === 0 && deltaJ === 0 && deltaK === 0) {\n          continue; // Skipping the central point\n        }\n\n        const neighborIndex = getNeighborIndex(deltaI, deltaJ, deltaK);\n\n        if (neighborIndex !== undefined && segmentIndex !== neighborIndex) {\n          return true; // On the edge\n        }\n      }\n    }\n  }\n\n  return false; // No edge neighbors found\n}\n\nfunction isSegmentOnEdgeIJK(\n  indexIJK: Types.Point3,\n  dimensions: Types.Point3,\n  voxelManager: any,\n  segmentIndex: number,\n  searchRadius?: number\n): boolean {\n  const getNeighborIndex = (deltaI: number, deltaJ: number, deltaK: number) => {\n    const neighborIJK = [\n      indexIJK[0] + deltaI,\n      indexIJK[1] + deltaJ,\n      indexIJK[2] + deltaK,\n    ];\n\n    return voxelManager.getAtIJK(...neighborIJK);\n  };\n\n  return isSegmentOnEdge(getNeighborIndex, segmentIndex, searchRadius);\n}\n\nfunction isSegmentOnEdgeCanvas(\n  canvasPoint: Types.Point2,\n  segmentIndex: number,\n  viewport: Types.IViewport,\n  imageData: any,\n  searchRadius?: number\n): boolean {\n  const getNeighborIndex = (deltaI: number, deltaJ: number) => {\n    const neighborCanvas = [canvasPoint[0] + deltaI, canvasPoint[1] + deltaJ];\n\n    const worldPoint = viewport.canvasToWorld(neighborCanvas as Types.Point2);\n    return imageData.getScalarValueFromWorld(worldPoint);\n  };\n\n  return isSegmentOnEdge(getNeighborIndex, segmentIndex, searchRadius);\n}\n","import { cache, utilities } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { SegmentationRepresentations } from '../../enums';\nimport {\n  getSegmentation,\n  getSegmentationIdRepresentations,\n} from '../../stateManagement/segmentation/segmentationState';\nimport {\n  LabelmapSegmentationDataStack,\n  LabelmapSegmentationDataVolume,\n} from '../../types/LabelmapTypes';\nimport { isVolumeSegmentation } from '../../tools/segmentation/strategies/utils/stackVolumeCheck';\nimport { ContourSegmentationAnnotation, Segmentation } from '../../types';\nimport { getAnnotation } from '../../stateManagement';\nimport { isPointInsidePolyline3D } from '../math/polyline';\n\ntype Options = {\n  representationType?: SegmentationRepresentations;\n  viewport?: Types.IViewport;\n};\n\n/**\n * Get the segment at the specified world point in the viewport.\n * @param segmentationId - The ID of the segmentation to get the segment for.\n * @param worldPoint - The world point to get the segment for.\n *\n * @returns The index of the segment at the world point, or undefined if not found.\n */\nexport function getSegmentAtWorldPoint(\n  segmentationId: string,\n  worldPoint: Types.Point3,\n  options = {} as Options\n): number {\n  const segmentation = getSegmentation(segmentationId);\n\n  const representationData = segmentation.representationData;\n\n  // if representationType is not provided, we will use the first representation\n  const desiredRepresentation =\n    options?.representationType ?? Object.keys(representationData)[0];\n\n  if (!desiredRepresentation) {\n    throw new Error(\n      `Segmentation ${segmentationId} does not have any representations`\n    );\n  }\n\n  switch (desiredRepresentation) {\n    case SegmentationRepresentations.Labelmap:\n      return getSegmentAtWorldForLabelmap(segmentation, worldPoint, options);\n    case SegmentationRepresentations.Contour:\n      return getSegmentAtWorldForContour(segmentation, worldPoint, options);\n    default:\n      return;\n  }\n}\n\n/**\n * Retrieves the segment index at a given world point for a labelmap.\n *\n * @param labelmapData - The labelmap segmentation data.\n * @param worldPoint - The world point to retrieve the segment at.\n *\n * @returns The segment index at the given world point, or undefined if not found.\n */\nexport function getSegmentAtWorldForLabelmap(\n  segmentation: Segmentation,\n  worldPoint: Types.Point3,\n  { viewport }: Options\n): number | undefined {\n  const labelmapData = segmentation.representationData.LABELMAP;\n\n  if (isVolumeSegmentation(labelmapData)) {\n    const { volumeId } = labelmapData as LabelmapSegmentationDataVolume;\n    const segmentationVolume = cache.getVolume(volumeId);\n\n    if (!segmentationVolume) {\n      return;\n    }\n\n    const segmentIndex =\n      segmentationVolume.imageData.getScalarValueFromWorld(worldPoint);\n\n    return segmentIndex;\n  }\n\n  // stack segmentation case\n  const { imageIdReferenceMap } = labelmapData as LabelmapSegmentationDataStack;\n\n  const currentImageId = (viewport as Types.IStackViewport).getCurrentImageId();\n\n  const segmentationImageId = imageIdReferenceMap.get(currentImageId);\n  const image = cache.getImage(segmentationImageId);\n\n  if (!image) {\n    return;\n  }\n\n  // find the first segmentationRepresentationUID for the segmentationId, since\n  // that is what we use as actorUID in the viewport\n\n  const segmentationRepresentations = getSegmentationIdRepresentations(\n    segmentation.segmentationId\n  );\n\n  const { segmentationRepresentationUID } = segmentationRepresentations[0];\n\n  const segmentationActor = viewport.getActor(segmentationRepresentationUID);\n  const imageData = segmentationActor?.actor.getMapper().getInputData();\n  const indexIJK = utilities.transformWorldToIndex(imageData, worldPoint);\n\n  const dimensions = imageData.getDimensions();\n  const voxelManager = (imageData.voxelManager ||\n    utilities.VoxelManager.createVolumeVoxelManager(\n      dimensions,\n      imageData.getPointData().getScalars().getData()\n    )) as utilities.VoxelManager<number>;\n\n  const segmentIndex = voxelManager.getAtIJKPoint(indexIJK as Types.Point3);\n\n  return segmentIndex;\n}\n\n/**\n * Retrieves the segment index at a given world point for contour segmentation.\n *\n * @param segmentation - The segmentation data.\n * @param worldPoint - The world point to check.\n * @param options - The options for segmentation.\n * @returns The segment index at the given world point, or undefined if not found.\n */\nexport function getSegmentAtWorldForContour(\n  segmentation: Segmentation,\n  worldPoint: Types.Point3,\n  { viewport }: Options\n): number {\n  const contourData = segmentation.representationData.CONTOUR;\n\n  const segmentIndices = Array.from(contourData.annotationUIDsMap.keys());\n  const { viewPlaneNormal } = viewport.getCamera();\n\n  for (const segmentIndex of segmentIndices) {\n    const annotationsSet = contourData.annotationUIDsMap.get(segmentIndex);\n\n    if (!annotationsSet) {\n      continue;\n    }\n\n    for (const annotationUID of annotationsSet) {\n      const annotation = getAnnotation(\n        annotationUID\n      ) as ContourSegmentationAnnotation;\n\n      if (!annotation) {\n        continue;\n      }\n\n      const { polyline } = annotation.data.contour;\n\n      if (\n        !utilities.isEqual(viewPlaneNormal, annotation.metadata.viewPlaneNormal)\n      ) {\n        continue;\n      }\n\n      // This function checks whether we are inside the contour. It does not\n      // check if we are exactly on the contour, which is highly unlikely given\n      // the canvas pixel resolution of 1 decimal place we have by design.\n      if (isPointInsidePolyline3D(worldPoint, polyline)) {\n        return Number(segmentIndex);\n      }\n    }\n  }\n}\n","import { getToolGroup } from '../../store/ToolGroupManager';\nimport BrushTool from '../../tools/segmentation/BrushTool';\nimport triggerAnnotationRenderForViewportIds from '../triggerAnnotationRenderForViewportIds';\nimport { getRenderingEngine } from '@cornerstonejs/core';\nimport { getBrushToolInstances } from './utilities';\n\n/**\n * Invalidates the brush cursor for a specific tool group.\n * This function triggers the update of the brush being rendered.\n * It also triggers an annotation render for any viewports on the tool group.\n *\n * @param toolGroupId - The ID of the tool group.\n */\nexport function invalidateBrushCursor(toolGroupId: string): void {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    return;\n  }\n\n  const brushBasedToolInstances = getBrushToolInstances(toolGroupId);\n\n  brushBasedToolInstances.forEach((tool: BrushTool) => {\n    // Invalidate the brush being rendered so it can update.\n    tool.invalidateBrushCursor();\n  });\n\n  // Trigger an annotation render for any viewports on the toolgroup\n  const viewportsInfo = toolGroup.getViewportsInfo();\n\n  const viewportsInfoArray = Object.keys(viewportsInfo).map(\n    (key) => viewportsInfo[key]\n  );\n\n  if (!viewportsInfoArray.length) {\n    return;\n  }\n\n  const { renderingEngineId } = viewportsInfoArray[0];\n\n  // Use helper to get array of viewportIds, or we just end up doing this mapping\n  // ourselves here.\n  const viewportIds = toolGroup.getViewportIds();\n\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIds);\n}\n","import { Types } from '@cornerstonejs/core';\nimport { utilities as csUtils } from '@cornerstonejs/core';\nimport { getToolGroup } from '../../store/ToolGroupManager';\nimport BrushTool from '../../tools/segmentation/BrushTool';\nimport { getBoundingBoxAroundShapeIJK } from '../boundingBox/getBoundingBoxAroundShape';\n\nexport type ThresholdInformation = {\n  volume: Types.IImageVolume;\n  lower: number;\n  upper: number;\n};\n\nexport function getBrushToolInstances(toolGroupId: string, toolName?: string) {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    return;\n  }\n\n  const toolInstances = toolGroup._toolInstances;\n\n  if (!Object.keys(toolInstances).length) {\n    return;\n  }\n\n  if (toolName && toolInstances[toolName]) {\n    return [toolInstances[toolName]];\n  }\n\n  // For each tool that has BrushTool as base class, set the brush size.\n  const brushBasedToolInstances = Object.values(toolInstances).filter(\n    (toolInstance) => toolInstance instanceof BrushTool\n  ) as BrushTool[];\n\n  return brushBasedToolInstances;\n}\n\nconst equalsCheck = (a, b) => {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\n/**\n * Given the center of a voxel in world coordinates, calculate the voxel\n * corners in world coords to calculate the voxel overlap in another volume\n */\nexport function getVoxelOverlap(\n  imageData,\n  dimensions,\n  voxelSpacing,\n  voxelCenter\n) {\n  const voxelCornersWorld = [];\n  for (let i = 0; i < 2; i++) {\n    for (let j = 0; j < 2; j++) {\n      for (let k = 0; k < 2; k++) {\n        const point = [...voxelCenter]; // Create a new point from voxelCenter\n        point[0] = point[0] + ((i * 2 - 1) * voxelSpacing[0]) / 2;\n        point[1] = point[1] + ((j * 2 - 1) * voxelSpacing[1]) / 2;\n        point[2] = point[2] + ((k * 2 - 1) * voxelSpacing[2]) / 2;\n        voxelCornersWorld.push(point);\n      }\n    }\n  }\n  const voxelCornersIJK = voxelCornersWorld.map(\n    (world) => csUtils.transformWorldToIndex(imageData, world) as Types.Point3\n  );\n  const overlapBounds = getBoundingBoxAroundShapeIJK(\n    voxelCornersIJK,\n    dimensions\n  );\n\n  return overlapBounds;\n}\n\n/**\n * Prepare a list of volume information objects for callback functions\n */\nexport function processVolumes(\n  segmentationVolume: Types.IImageVolume,\n  thresholdVolumeInformation: ThresholdInformation[]\n) {\n  const { spacing: segmentationSpacing } = segmentationVolume;\n  const scalarData = segmentationVolume.getScalarData();\n\n  // prepare a list of volume information objects for callback functions\n  const volumeInfoList = [];\n  let baseVolumeIdx = 0;\n  for (let i = 0; i < thresholdVolumeInformation.length; i++) {\n    const { imageData, spacing, dimensions } =\n      thresholdVolumeInformation[i].volume;\n\n    const volumeSize =\n      thresholdVolumeInformation[i].volume.getScalarData().length;\n    // discover the index of the volume the segmentation data is based on\n    if (\n      volumeSize === scalarData.length &&\n      equalsCheck(spacing, segmentationSpacing)\n    ) {\n      baseVolumeIdx = i;\n    }\n\n    // prepare information used in callback functions\n    const referenceValues = imageData.getPointData().getScalars().getData();\n    const lower = thresholdVolumeInformation[i].lower;\n    const upper = thresholdVolumeInformation[i].upper;\n\n    volumeInfoList.push({\n      imageData,\n      referenceValues,\n      lower,\n      upper,\n      spacing,\n      dimensions,\n      volumeSize,\n    });\n  }\n\n  return {\n    volumeInfoList,\n    baseVolumeIdx,\n  };\n}\n","import debounce from './debounce';\nimport isObject from './isObject';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds (or once per browser frame). The throttled function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `throttle` and `debounce`.\n *\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0]\n *  The number of milliseconds to throttle invocations to; if omitted,\n *  `requestAnimationFrame` is used (if available).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', throttle(updatePosition, 100))\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * const throttled = throttle(renewToken, 300000, { 'trailing': false })\n * jQuery(element).on('click', throttled)\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel)\n */\nfunction throttle(func, wait, options) {\n  let leading = true;\n  let trailing = true;\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? Boolean(options.leading) : leading;\n    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;\n  }\n\n  return debounce(func, wait, {\n    leading,\n    trailing,\n    maxWait: wait,\n  });\n}\n\nexport default throttle;\n","import { IDistance, IPoints, ITouchPoints } from '../../types';\nimport { Types } from '@cornerstonejs/core';\n\n/**\n * Returns the difference between multiple `IPoints` instances.\n * @param currentPoints - The current points.\n * @param lastPoints - The last points, to be subtracted from the `currentPoints`.\n *\n * @returns The difference in IPoints format\n */\nfunction getDeltaPoints(\n  currentPoints: IPoints[],\n  lastPoints: IPoints[]\n): IPoints {\n  const curr = getMeanPoints(currentPoints);\n  const last = getMeanPoints(lastPoints);\n  return {\n    page: _subtractPoints2D(curr.page, last.page),\n    client: _subtractPoints2D(curr.client, last.client),\n    canvas: _subtractPoints2D(curr.canvas, last.canvas),\n    world: _subtractPoints3D(curr.world, last.world),\n  };\n}\n\n/**\n * Returns the distance between multiple `IPoints` instances.\n * @param currentPoints - The current points.\n * @param lastPoints - The last points, to be subtracted from the `currentPoints`.\n *\n * @returns The distance difference in IDistance format\n */\nfunction getDeltaDistance(\n  currentPoints: IPoints[],\n  lastPoints: IPoints[]\n): IDistance {\n  const curr = getMeanPoints(currentPoints);\n  const last = getMeanPoints(lastPoints);\n  return {\n    page: _getDistance2D(curr.page, last.page),\n    client: _getDistance2D(curr.client, last.client),\n    canvas: _getDistance2D(curr.canvas, last.canvas),\n    world: _getDistance3D(curr.world, last.world),\n  };\n}\n\nfunction getDeltaRotation(\n  currentPoints: ITouchPoints[],\n  lastPoints: ITouchPoints[]\n) {\n  // TODO\n}\n\n/**\n * Returns the distance difference between multiple `IPoints` instances.\n * @param currentPoints - The current points.\n * @param lastPoints -- The last points.\n *\n * @returns The difference in IPoints format\n */\nfunction getDeltaDistanceBetweenIPoints(\n  currentPoints: IPoints[],\n  lastPoints: IPoints[]\n): IDistance {\n  const currentDistance = _getMeanDistanceBetweenAllIPoints(currentPoints);\n  const lastDistance = _getMeanDistanceBetweenAllIPoints(lastPoints);\n  const deltaDistance = {\n    page: currentDistance.page - lastDistance.page,\n    client: currentDistance.client - lastDistance.client,\n    canvas: currentDistance.canvas - lastDistance.canvas,\n    world: currentDistance.world - lastDistance.world,\n  };\n  return deltaDistance;\n}\n\n/**\n * Copies a set of points.\n * @param points - The `IPoints` instance to copy.\n *\n * @returns A copy of the points.\n */\nfunction copyPointsList(points: ITouchPoints[]): ITouchPoints[] {\n  return JSON.parse(JSON.stringify(points));\n}\n\nfunction copyPoints(points: ITouchPoints): ITouchPoints {\n  return JSON.parse(JSON.stringify(points));\n}\n\nfunction getMeanPoints(points: IPoints[]): IPoints {\n  return points.reduce(\n    (prev, curr) => {\n      return {\n        page: [\n          prev.page[0] + curr.page[0] / points.length,\n          prev.page[1] + curr.page[1] / points.length,\n        ],\n        client: [\n          prev.client[0] + curr.client[0] / points.length,\n          prev.client[1] + curr.client[1] / points.length,\n        ],\n        canvas: [\n          prev.canvas[0] + curr.canvas[0] / points.length,\n          prev.canvas[1] + curr.canvas[1] / points.length,\n        ],\n        world: [\n          prev.world[0] + curr.world[0] / points.length,\n          prev.world[1] + curr.world[1] / points.length,\n          prev.world[2] + curr.world[2] / points.length,\n        ],\n      };\n    },\n    {\n      page: [0, 0],\n      client: [0, 0],\n      canvas: [0, 0],\n      world: [0, 0, 0],\n    }\n  );\n}\n\nfunction getMeanTouchPoints(points: ITouchPoints[]): ITouchPoints {\n  return points.reduce(\n    (prev, curr) => {\n      return {\n        page: [\n          prev.page[0] + curr.page[0] / points.length,\n          prev.page[1] + curr.page[1] / points.length,\n        ],\n        client: [\n          prev.client[0] + curr.client[0] / points.length,\n          prev.client[1] + curr.client[1] / points.length,\n        ],\n        canvas: [\n          prev.canvas[0] + curr.canvas[0] / points.length,\n          prev.canvas[1] + curr.canvas[1] / points.length,\n        ],\n        world: [\n          prev.world[0] + curr.world[0] / points.length,\n          prev.world[1] + curr.world[1] / points.length,\n          prev.world[2] + curr.world[2] / points.length,\n        ],\n        touch: {\n          identifier: null,\n          radiusX: prev.touch.radiusX + curr.touch.radiusX / points.length,\n          radiusY: prev.touch.radiusY + curr.touch.radiusY / points.length,\n          force: prev.touch.force + curr.touch.force / points.length,\n          rotationAngle:\n            prev.touch.rotationAngle + curr.touch.rotationAngle / points.length,\n        },\n      };\n    },\n    {\n      page: [0, 0],\n      client: [0, 0],\n      canvas: [0, 0],\n      world: [0, 0, 0],\n      touch: {\n        identifier: null,\n        radiusX: 0,\n        radiusY: 0,\n        force: 0,\n        rotationAngle: 0,\n      },\n    }\n  );\n}\n/**\n * _subtractPoints - Subtracts `point1` from `point0`.\n * @param point0 - The first point.\n * @param point1 - The second point to subtract from the first.\n *\n * @returns The difference.\n */\nfunction _subtractPoints2D(\n  point0: Types.Point2,\n  point1: Types.Point2\n): Types.Point2 {\n  return [point0[0] - point1[0], point0[1] - point1[1]];\n}\n\nfunction _subtractPoints3D(\n  point0: Types.Point3,\n  point1: Types.Point3\n): Types.Point3 {\n  return [point0[0] - point1[0], point0[1] - point1[1], point0[2] - point1[2]];\n}\n\nfunction _getMeanDistanceBetweenAllIPoints(points: IPoints[]): IDistance {\n  // get mean distance between all unordered pairs of points\n  const pairedDistance: IDistance[] = [];\n  for (let i = 0; i < points.length; i++) {\n    for (let j = 0; j < points.length; j++) {\n      if (i < j) {\n        pairedDistance.push({\n          page: _getDistance2D(points[i].page, points[j].page),\n          client: _getDistance2D(points[i].client, points[j].client),\n          canvas: _getDistance2D(points[i].canvas, points[j].canvas),\n          world: _getDistance3D(points[i].world, points[j].world),\n        });\n      }\n    }\n  }\n\n  // take the average distance\n  return pairedDistance.reduce(\n    (prev, curr) => {\n      return {\n        page: prev.page + curr.page / pairedDistance.length,\n        client: prev.client + curr.client / pairedDistance.length,\n        canvas: prev.canvas + curr.canvas / pairedDistance.length,\n        world: prev.world + curr.world / pairedDistance.length,\n      };\n    },\n    {\n      page: 0,\n      client: 0,\n      canvas: 0,\n      world: 0,\n    }\n  );\n}\n\nfunction _getDistance2D(point0: Types.Point2, point1: Types.Point2): number {\n  return Math.sqrt(\n    Math.pow(point0[0] - point1[0], 2) + Math.pow(point0[1] - point1[1], 2)\n  );\n}\n\nfunction _getDistance3D(point0: Types.Point3, point1: Types.Point3): number {\n  return Math.sqrt(\n    Math.pow(point0[0] - point1[0], 2) +\n      Math.pow(point0[1] - point1[1], 2) +\n      Math.pow(point0[2] - point1[2], 2)\n  );\n}\n\nexport {\n  getMeanPoints,\n  getMeanTouchPoints,\n  copyPoints,\n  copyPointsList,\n  getDeltaDistanceBetweenIPoints,\n  getDeltaPoints,\n  getDeltaDistance,\n  getDeltaRotation,\n};\n","import { getRenderingEngine, type Types } from '@cornerstonejs/core';\nimport triggerAnnotationRender from './triggerAnnotationRender';\nimport { getToolGroup } from '../store/ToolGroupManager';\n\n/**\n * Triggers annotation rendering for the specified tool group IDs.\n *\n * @param toolGroupIds - An array of tool group IDs.\n */\nexport function triggerAnnotationRenderForToolGroupIds(\n  toolGroupIds: string[]\n): void {\n  toolGroupIds.forEach((toolGroupId) => {\n    const toolGroup = getToolGroup(toolGroupId);\n\n    if (!toolGroup) {\n      console.warn(`ToolGroup not available for ${toolGroupId}`);\n      return;\n    }\n\n    const viewportsInfo = toolGroup.getViewportsInfo();\n\n    viewportsInfo.forEach((viewportInfo) => {\n      const { renderingEngineId, viewportId } = viewportInfo;\n\n      const renderingEngine = getRenderingEngine(renderingEngineId);\n      if (!renderingEngine) {\n        console.warn(`RenderingEngine not available for ${renderingEngineId}`);\n        return;\n      }\n\n      const viewport = renderingEngine.getViewport(viewportId);\n      triggerAnnotationRender(viewport.element);\n    });\n  });\n}\n\nexport default triggerAnnotationRenderForToolGroupIds;\n","import type { Types } from '@cornerstonejs/core';\nimport type { IToolGroup } from '../../types';\nimport { ToolGroupManager } from '../../store';\nimport { ToolModes } from '../../enums';\n\nconst { Active, Passive, Enabled } = ToolModes;\n\n/**\n * Given an array of viewports, returns a list of viewports that have the the specified tool enabled.\n *\n * @param viewports - An array of viewports.\n * @param toolName - The name of the tool to filter on.\n *\n * @returns A filtered array of viewports.\n */\nexport default function filterViewportsWithToolEnabled(\n  viewports: Array<Types.IViewport>,\n  toolName: string\n): Array<Types.IStackViewport | Types.IVolumeViewport> {\n  const numViewports = viewports.length;\n\n  const viewportsWithToolEnabled = [];\n\n  for (let vp = 0; vp < numViewports; vp++) {\n    const viewport = viewports[vp];\n\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(\n      viewport.id,\n      viewport.renderingEngineId\n    );\n\n    if (!toolGroup) {\n      continue;\n    }\n\n    const hasTool = _toolGroupHasActiveEnabledOrPassiveTool(\n      toolGroup,\n      toolName\n    );\n\n    if (hasTool) {\n      viewportsWithToolEnabled.push(viewport);\n    }\n  }\n\n  return viewportsWithToolEnabled;\n}\n\n/**\n * Given a toolGroup, return true if it contains the tool with the given `toolName` and it is\n * active, passive or enabled.\n *\n * @param toolGroup - The `toolGroup` to check.\n * @param toolName - The name of the tool.\n *\n * @returns True if the tool is enabled, passive or active in the `toolGroup`.\n */\nfunction _toolGroupHasActiveEnabledOrPassiveTool(\n  toolGroup: IToolGroup,\n  toolName: string\n) {\n  const { toolOptions } = toolGroup;\n  const tool = toolOptions[toolName];\n\n  if (!tool) {\n    return false;\n  }\n\n  const toolMode = tool.mode;\n\n  return toolMode === Active || toolMode === Passive || toolMode === Enabled;\n}\n","import { vec3 } from 'gl-matrix';\n\n/**\n * It filters the viewports that are looking in the same view as the camera\n * It basically checks if the viewPlaneNormal is parallel to the camera viewPlaneNormal\n * @param viewports - Array of viewports to filter\n * @param camera - Camera to compare against\n * @returns - Array of viewports with the same view\n */\nexport function filterViewportsWithParallelNormals(\n  viewports,\n  camera,\n  EPS = 0.999\n) {\n  return viewports.filter((viewport) => {\n    const vpCamera = viewport.getCamera();\n\n    const isParallel =\n      Math.abs(vec3.dot(vpCamera.viewPlaneNormal, camera.viewPlaneNormal)) >\n      EPS;\n\n    return isParallel;\n  });\n}\n\nexport default filterViewportsWithParallelNormals;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport filterViewportsWithFrameOfReferenceUID from './filterViewportsWithFrameOfReferenceUID';\nimport filterViewportsWithToolEnabled from './filterViewportsWithToolEnabled';\nimport filterViewportsWithParallelNormals from './filterViewportsWithParallelNormals';\n\n/**\n * Given a cornerstone3D enabled `element`, and a `toolName`, find all viewportIds\n * looking at the same Frame Of Reference that have the tool with the given `toolName`\n * active, passive or enabled.\n *\n * @param element - The target cornerstone3D enabled element.\n * @param toolName - The string toolName.\n * @param requireParallelNormals - If true, only return viewports that have parallel normals.\n *\n * @returns An array of viewportIds.\n */\nexport default function getViewportIdsWithToolToRender(\n  element: HTMLDivElement,\n  toolName: string,\n  requireParallelNormals = true\n): string[] {\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngine, FrameOfReferenceUID } = enabledElement;\n\n  let viewports = renderingEngine.getViewports();\n\n  viewports = filterViewportsWithFrameOfReferenceUID(\n    viewports,\n    FrameOfReferenceUID\n  );\n  viewports = filterViewportsWithToolEnabled(viewports, toolName);\n\n  const viewport = renderingEngine.getViewport(enabledElement.viewportId);\n\n  if (requireParallelNormals) {\n    viewports = filterViewportsWithParallelNormals(\n      viewports,\n      viewport.getCamera()\n    );\n  }\n\n  const viewportIds = viewports.map((vp) => vp.id);\n\n  return viewportIds;\n}\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Given an array of viewports, returns a list of viewports that are viewing a\n * world space with the given `FrameOfReferenceUID`.\n *\n * @param viewports - An array of viewports.\n * @param FrameOfReferenceUID - The UID defining a particular world space/Frame Of Reference.\n *\n * @returns A filtered array of viewports.\n */\nexport default function filterViewportsWithFrameOfReferenceUID(\n  viewports: Array<Types.IViewport>,\n  FrameOfReferenceUID: string\n): Array<Types.IStackViewport | Types.IVolumeViewport> {\n  const numViewports = viewports.length;\n  const viewportsWithFrameOfReferenceUID = [];\n\n  for (let vp = 0; vp < numViewports; vp++) {\n    const viewport = viewports[vp];\n\n    if (viewport.getFrameOfReferenceUID() === FrameOfReferenceUID) {\n      viewportsWithFrameOfReferenceUID.push(viewport);\n    }\n  }\n\n  return viewportsWithFrameOfReferenceUID;\n}\n","import {\n  cache,\n  StackViewport,\n  Types,\n  BaseVolumeViewport,\n  utilities,\n} from '@cornerstonejs/core';\n\nfunction isViewportPreScaled(\n  viewport: Types.IStackViewport | Types.IVolumeViewport,\n  targetId: string\n): boolean {\n  if (viewport instanceof BaseVolumeViewport) {\n    const volumeId = utilities.getVolumeId(targetId);\n    const volume = cache.getVolume(volumeId);\n    return !!volume?.scaling && Object.keys(volume.scaling).length > 0;\n  } else if (viewport instanceof StackViewport) {\n    const { preScale } = viewport.getImageData() || {};\n    return !!preScale?.scaled;\n  } else {\n    return false;\n  }\n}\n\nexport { isViewportPreScaled };\n","import { VolumeViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { vec3 } from 'gl-matrix';\n\n// Todo: merge this utility functionality with Crosshair _jump\n/**\n * Uses the viewport's current camera to jump to a specific world coordinate\n * @param enabledElement - enabled element\n * @param jumpWorld - location in the world to jump to\n * @returns True if successful\n */\nexport default function jumpToWorld(\n  viewport: Types.IVolumeViewport,\n  jumpWorld: Types.Point3\n): true | undefined {\n  // if not instance of volumeViewport, return\n  if (!(viewport instanceof VolumeViewport)) {\n    return;\n  }\n\n  const { focalPoint } = viewport.getCamera();\n\n  const delta: Types.Point3 = [0, 0, 0];\n  vec3.sub(delta, jumpWorld, focalPoint);\n\n  _applyShift(viewport, delta);\n\n  return true;\n}\n\nfunction _applyShift(viewport, delta) {\n  const camera = viewport.getCamera();\n  const normal = camera.viewPlaneNormal;\n\n  const dotProd = vec3.dot(delta, normal);\n  const projectedDelta = vec3.fromValues(normal[0], normal[1], normal[2]);\n\n  vec3.scale(projectedDelta, projectedDelta, dotProd);\n\n  if (\n    Math.abs(projectedDelta[0]) > 1e-3 ||\n    Math.abs(projectedDelta[1]) > 1e-3 ||\n    Math.abs(projectedDelta[2]) > 1e-3\n  ) {\n    const newFocalPoint: Types.Point3 = [0, 0, 0];\n    const newPosition: Types.Point3 = [0, 0, 0];\n\n    vec3.add(newFocalPoint, camera.focalPoint, projectedDelta);\n    vec3.add(newPosition, camera.position, projectedDelta);\n\n    viewport.setCamera({\n      focalPoint: newFocalPoint,\n      position: newPosition,\n    });\n    viewport.render();\n  }\n}\n","/**\n * Linear interpolation between two vec3.\n * Can be used, for example, to interpolate between two RGB colors.\n * @param a - First vec3\n * @param b - Second vec3\n * @param t - Time \"t\".\n *   - Vector A is returned for values smaller than or equel to 0.\n *   - Vector B is returned for values greater than or equal to 1.\n *   - An interpolation between vectors A and B is returned otherwise.\n * @returns\n */\nconst interpolateVec3 = (a, b, t) => {\n  return [\n    a[0] * (1 - t) + b[0] * t,\n    a[1] * (1 - t) + b[1] * t,\n    a[2] * (1 - t) + b[2] * t,\n  ];\n};\n\nexport { interpolateVec3 as default, interpolateVec3 };\n","import { IColorMapPreset } from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\nimport { utilities } from '@cornerstonejs/core';\nimport interpolateVec3 from '../../math/vec3/interpolateVec3';\nimport { ColorbarCanvasProps } from './types/ColorbarCanvasProps';\nimport type { ColorbarImageRange, ColorbarVOIRange } from './types';\nimport type { ColorbarSize } from './types/ColorbarSize';\nimport {\n  isRangeValid,\n  areColorbarRangesEqual,\n  isColorbarSizeValid,\n  areColorbarSizesEqual,\n} from './common';\n\nconst { clamp } = utilities;\n\n/**\n * Canvas referenced by the color bar where the colormap is rendered. It may\n * show the full image range or only the VOI range.\n */\nclass ColorbarCanvas {\n  private _canvas: HTMLCanvasElement;\n  private _imageRange: ColorbarImageRange;\n  private _voiRange: ColorbarVOIRange;\n  private _colormap: IColorMapPreset;\n  private _showFullImageRange: boolean;\n\n  constructor(props: ColorbarCanvasProps) {\n    ColorbarCanvas.validateProps(props);\n\n    const {\n      colormap,\n      size = { width: 20, height: 100 },\n      imageRange = { lower: 0, upper: 1 },\n      voiRange = { lower: 0, upper: 1 },\n      container,\n      showFullPixelValueRange = false,\n    } = props;\n\n    this._colormap = colormap;\n    this._imageRange = imageRange;\n    this._voiRange = voiRange;\n    this._showFullImageRange = showFullPixelValueRange;\n    this._canvas = this._createRootElement(size);\n\n    if (container) {\n      this.appendTo(container);\n    }\n  }\n\n  public get colormap(): IColorMapPreset {\n    return this._colormap;\n  }\n\n  public set colormap(colormap: IColorMapPreset) {\n    this._colormap = colormap;\n    this.render();\n  }\n\n  public get size(): ColorbarSize {\n    const { width, height } = this._canvas;\n    return { width, height };\n  }\n\n  public set size(size: ColorbarSize) {\n    const { _canvas: canvas } = this;\n\n    if (!isColorbarSizeValid(size) || areColorbarSizesEqual(canvas, size)) {\n      return;\n    }\n\n    this._setCanvasSize(canvas, size);\n    this.render();\n  }\n\n  public get imageRange(): ColorbarImageRange {\n    return { ...this._imageRange };\n  }\n\n  public set imageRange(imageRange: ColorbarImageRange) {\n    if (\n      !isRangeValid(imageRange) ||\n      areColorbarRangesEqual(imageRange, this._imageRange)\n    ) {\n      return;\n    }\n\n    this._imageRange = imageRange;\n    this.render();\n  }\n\n  public get voiRange(): ColorbarVOIRange {\n    return { ...this._voiRange };\n  }\n\n  public set voiRange(voiRange: ColorbarVOIRange) {\n    if (\n      !isRangeValid(voiRange) ||\n      areColorbarRangesEqual(voiRange, this._voiRange)\n    ) {\n      return;\n    }\n\n    this._voiRange = voiRange;\n    this.render();\n  }\n\n  public get showFullImageRange(): boolean {\n    return this._showFullImageRange;\n  }\n\n  public set showFullImageRange(showFullImageRange: boolean) {\n    if (showFullImageRange === this._showFullImageRange) {\n      return;\n    }\n\n    this._showFullImageRange = showFullImageRange;\n    this.render();\n  }\n\n  public appendTo(container: HTMLElement) {\n    container.appendChild(this._canvas);\n    this.render();\n  }\n\n  public dispose() {\n    const { _canvas: canvas } = this;\n    const { parentElement } = canvas;\n\n    parentElement?.removeChild(canvas);\n  }\n\n  private static validateProps(props: ColorbarCanvasProps) {\n    const { size, imageRange, voiRange } = props;\n\n    if (size && !isColorbarSizeValid(size)) {\n      throw new Error('Invalid \"size\"');\n    }\n\n    if (imageRange && !isRangeValid(imageRange)) {\n      throw new Error('Invalid \"imageRange\"');\n    }\n\n    if (voiRange && !isRangeValid(voiRange)) {\n      throw new Error('Invalid \"voiRange\"');\n    }\n  }\n\n  private _setCanvasSize(canvas: HTMLCanvasElement, size: ColorbarSize) {\n    const { width, height } = size;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    Object.assign(canvas.style, {\n      width: `${width}px`,\n      height: `${height}px`,\n    });\n  }\n\n  private _createRootElement(size: ColorbarSize) {\n    const canvas = document.createElement('canvas');\n\n    Object.assign(canvas.style, {\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      pointerEvents: 'none',\n      boxSizing: 'border-box',\n    });\n\n    this._setCanvasSize(canvas, size);\n\n    return canvas;\n  }\n\n  private render(): void {\n    if (!this._canvas.isConnected) {\n      return;\n    }\n\n    const { _colormap: colormap } = this;\n    const { RGBPoints: rgbPoints } = colormap;\n    const colorsCount = rgbPoints.length / 4;\n\n    // Returns a color point from rgbPoints. Each point has position, red,\n    // green and blue components which means each point has an offset equal\n    // to `4 * index`\n    const getColorPoint = (index) => {\n      const offset = 4 * index;\n\n      // It can get out of bounds when `voiRange.upper` is smaller than\n      // `imageRange.upper`. It's also checking if is smaller than zero\n      // for safety only because that should never happens.\n      if (index < 0 || index >= colorsCount) {\n        return;\n      }\n\n      return {\n        index,\n        position: rgbPoints[offset],\n        color: [\n          rgbPoints[offset + 1],\n          rgbPoints[offset + 2],\n          rgbPoints[offset + 3],\n        ],\n      };\n    };\n\n    const { width, height } = this._canvas;\n    const canvasContext = this._canvas.getContext('2d');\n    const isHorizontal = width > height;\n    const maxValue = isHorizontal ? width : height;\n    const { _voiRange: voiRange } = this;\n    const range = this._showFullImageRange ? this._imageRange : { ...voiRange };\n\n    const { windowWidth } = utilities.windowLevel.toWindowLevel(\n      voiRange.lower,\n      voiRange.upper\n    );\n\n    let previousColorPoint = undefined;\n    let currentColorPoint = getColorPoint(0);\n\n    // Starts from `range.lower` incrementing by incRawPixelValue on each iteration\n    const incRawPixelValue = (range.upper - range.lower) / (maxValue - 1);\n    let rawPixelValue = range.lower;\n\n    for (let i = 0; i < maxValue; i++) {\n      const tVoiRange = (rawPixelValue - voiRange.lower) / windowWidth;\n\n      // Find the color in a linear way (O(n) complexity).\n      // currentColorPoint shall move to the next color until tVoiRange is smaller\n      // than or equal to next color position.\n      if (currentColorPoint) {\n        for (let i = currentColorPoint.index; i < colorsCount; i++) {\n          if (tVoiRange <= currentColorPoint.position) {\n            break;\n          }\n\n          previousColorPoint = currentColorPoint;\n          currentColorPoint = getColorPoint(i + 1);\n        }\n      }\n\n      let normColor;\n\n      // For:\n      //   - firstColorPoint = getColorPoint(0)\n      //   - secondColorPoint = getColorPoint(1)\n      //   - lastColorPoint = getColorPoint(colorsCount - 1)\n      // Then\n      //   - previousColorPoint shall be undefined when tVoiRange < firstColorPoint.position\n      //   - currentColorPoint shall be undefined when tVoiRange > lastColorPoint.position\n      //   - previousColorPoint and currentColorPoint will be defined when\n      //     currentColorPoint.position is between secondColorPoint.position and\n      //     lastColorPoint.position.\n      if (!previousColorPoint) {\n        normColor = [...currentColorPoint.color];\n      } else if (!currentColorPoint) {\n        normColor = [...previousColorPoint.color];\n      } else {\n        const tColorRange =\n          (tVoiRange - previousColorPoint.position) /\n          (currentColorPoint.position - previousColorPoint.position);\n\n        normColor = interpolateVec3(\n          previousColorPoint.color,\n          currentColorPoint.color,\n          tColorRange\n        );\n      }\n\n      const color = normColor.map((color) =>\n        clamp(Math.round(color * 255), 0, 255)\n      );\n\n      canvasContext.fillStyle = `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\n\n      if (isHorizontal) {\n        canvasContext.fillRect(i, 0, 1, height);\n      } else {\n        canvasContext.fillRect(0, height - i - 1, width, 1);\n      }\n\n      rawPixelValue += incRawPixelValue;\n    }\n  }\n}\n\nexport { ColorbarCanvas as default, ColorbarCanvas };\n","import { IColorMapPreset } from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\nimport { vec2 } from 'gl-matrix';\nimport { utilities as csUtils, Types } from '@cornerstonejs/core';\nimport type { ColorbarProps, ColorbarVOIRange } from './types';\nimport { isRangeValid, areColorbarRangesEqual } from './common';\nimport { ColorbarRangeTextPosition } from './enums/ColorbarRangeTextPosition';\nimport { ColorbarCanvas } from './ColorbarCanvas';\nimport { ColorbarTicks } from './ColorbarTicks';\nimport isRangeTextPositionValid from './common/isRangeTextPositionValid';\nimport Widget from '../../../widgets/Widget';\n\nconst DEFAULTS = {\n  MULTIPLIER: 1,\n  RANGE_TEXT_POSITION: ColorbarRangeTextPosition.Right,\n  TICKS_BAR_SIZE: 50,\n};\n\ntype ColorbarPoints = {\n  page: Types.Point2;\n  client: Types.Point2;\n  local: Types.Point2;\n};\n\n/**\n * A base colorbar class that is not associated with any viewport. It is\n * possible to click and drag to change the VOI range, shows the ticks during\n * interaction and it can show full image range or VOI range.\n */\nclass Colorbar extends Widget {\n  private _colormaps: Map<string, IColorMapPreset>;\n  private _activeColormapName: string;\n  private _eventListenersManager: csUtils.eventListener.MultiTargetEventListenerManager;\n  private _canvas: ColorbarCanvas;\n  private _ticksBar: ColorbarTicks;\n  private _rangeTextPosition: ColorbarRangeTextPosition;\n\n  private _isMouseOver = false;\n  private _isInteracting = false;\n\n  constructor(props: ColorbarProps) {\n    super(props);\n\n    this._eventListenersManager =\n      new csUtils.eventListener.MultiTargetEventListenerManager();\n    this._colormaps = Colorbar.getColormapsMap(props);\n    this._activeColormapName = Colorbar.getInitialColormapName(props);\n    this._canvas = this._createCanvas(props);\n    this._ticksBar = this._createTicksBar(props);\n    this._rangeTextPosition =\n      props.ticks?.position ?? DEFAULTS.RANGE_TEXT_POSITION;\n\n    this._canvas.appendTo(this.rootElement);\n    this._ticksBar.appendTo(this.rootElement);\n\n    this._addRootElementEventListeners();\n  }\n\n  /**\n   * Returns the active LUT name\n   */\n  public get activeColormapName() {\n    return this._activeColormapName;\n  }\n\n  /**\n   * Set the current active LUT name and re-renders the color bar\n   */\n  public set activeColormapName(colormapName: string) {\n    if (colormapName === this._activeColormapName) {\n      return;\n    }\n\n    const colormap = this._colormaps.get(colormapName);\n\n    if (!colormap) {\n      console.warn(`Invalid colormap name (${colormapName})`);\n      return;\n    }\n\n    this._activeColormapName = colormapName;\n    this._canvas.colormap = colormap;\n  }\n\n  public get imageRange() {\n    return this._canvas.imageRange;\n  }\n\n  public set imageRange(imageRange: ColorbarVOIRange) {\n    this._canvas.imageRange = imageRange;\n    this._ticksBar.imageRange = imageRange;\n  }\n\n  public get voiRange() {\n    return this._canvas.voiRange;\n  }\n\n  public set voiRange(voiRange: ColorbarVOIRange) {\n    const { voiRange: currentVoiRange } = this._canvas;\n\n    if (\n      !isRangeValid(voiRange) ||\n      areColorbarRangesEqual(voiRange, currentVoiRange)\n    ) {\n      return;\n    }\n\n    this._canvas.voiRange = voiRange;\n    this._ticksBar.voiRange = voiRange;\n    this.onVoiChange(voiRange);\n  }\n\n  public get showFullImageRange() {\n    return this._canvas.showFullImageRange;\n  }\n\n  public set showFullImageRange(value: boolean) {\n    this._canvas.showFullImageRange = value;\n    this._ticksBar.showFullPixelValueRange = value;\n  }\n\n  public destroy() {\n    super.destroy();\n    this._eventListenersManager.reset();\n  }\n\n  protected createRootElement(): HTMLElement {\n    const rootElement = document.createElement('div');\n\n    Object.assign(rootElement.style, {\n      position: 'relative',\n      fontSize: '0',\n      width: '100%',\n      height: '100%',\n    });\n\n    return rootElement;\n  }\n\n  protected onContainerResize() {\n    super.onContainerResize();\n    this.updateTicksBar();\n    this._canvas.size = this.containerSize;\n  }\n\n  protected getVOIMultipliers(): [number, number] {\n    return [DEFAULTS.MULTIPLIER, DEFAULTS.MULTIPLIER];\n  }\n\n  protected onVoiChange(voiRange: ColorbarVOIRange) {\n    // no-op\n  }\n\n  protected showTicks() {\n    this.updateTicksBar();\n    this._ticksBar.visible = true;\n  }\n\n  protected hideTicks() {\n    if (this._isInteracting || this._isMouseOver) {\n      return;\n    }\n\n    this._ticksBar.visible = false;\n  }\n\n  private static getColormapsMap(props: ColorbarProps) {\n    const { colormaps } = props;\n\n    return colormaps.reduce(\n      (items, item) => items.set(item.Name, item),\n      new Map<string, IColorMapPreset>()\n    );\n  }\n\n  private static getInitialColormapName(props: ColorbarProps) {\n    const { activeColormapName, colormaps } = props;\n    const colormapExists =\n      !!activeColormapName &&\n      colormaps.some((cm) => cm.Name === activeColormapName);\n\n    return colormapExists ? activeColormapName : colormaps[0].Name;\n  }\n\n  private _createCanvas(props: ColorbarProps) {\n    const { imageRange, voiRange, showFullPixelValueRange } = props;\n    const colormap = this._colormaps.get(this._activeColormapName);\n\n    return new ColorbarCanvas({\n      colormap,\n      imageRange,\n      voiRange: voiRange,\n      showFullPixelValueRange,\n    });\n  }\n\n  public _createTicksBar(props: ColorbarProps): ColorbarTicks {\n    const ticksProps = props.ticks;\n\n    return new ColorbarTicks({\n      imageRange: props.imageRange,\n      voiRange: props.voiRange,\n      ticks: ticksProps,\n      showFullPixelValueRange: props.showFullPixelValueRange,\n    });\n  }\n\n  private _getPointsFromMouseEvent(evt: MouseEvent): ColorbarPoints {\n    const { rootElement: element } = this;\n    const clientPoint: Types.Point2 = [evt.clientX, evt.clientY];\n    const pagePoint: Types.Point2 = [evt.pageX, evt.pageY];\n    const rect = element.getBoundingClientRect();\n    const localPoints: Types.Point2 = [\n      pagePoint[0] - rect.left - window.pageXOffset,\n      pagePoint[1] - rect.top - window.pageYOffset,\n    ];\n\n    return { client: clientPoint, page: pagePoint, local: localPoints };\n  }\n\n  private updateTicksBar() {\n    const { width: containerWidth, height: containerHeight } =\n      this.containerSize;\n\n    // ResizeObserver have not triggered any event when this happen\n    if (containerWidth === 0 && containerHeight === 0) {\n      return;\n    }\n\n    const { _ticksBar: ticksBar, _rangeTextPosition: rangeTextPosition } = this;\n    const isHorizontal = containerWidth >= containerHeight;\n    const width = isHorizontal ? containerWidth : DEFAULTS.TICKS_BAR_SIZE;\n    const height = isHorizontal ? DEFAULTS.TICKS_BAR_SIZE : containerHeight;\n\n    if (\n      !isRangeTextPositionValid(\n        containerWidth,\n        containerHeight,\n        rangeTextPosition\n      )\n    ) {\n      throw new Error(\n        'Invalid rangeTextPosition value for the current colobar orientation'\n      );\n    }\n\n    let ticksBarTop;\n    let ticksBarLeft;\n\n    ticksBar.size = { width, height };\n\n    if (isHorizontal) {\n      ticksBarLeft = 0;\n      ticksBarTop =\n        rangeTextPosition === ColorbarRangeTextPosition.Top\n          ? -height\n          : containerHeight;\n    } else {\n      ticksBarTop = 0;\n      ticksBarLeft =\n        rangeTextPosition === ColorbarRangeTextPosition.Left\n          ? -width\n          : containerWidth;\n    }\n\n    ticksBar.top = ticksBarTop;\n    ticksBar.left = ticksBarLeft;\n  }\n\n  private _mouseOverCallback = (evt) => {\n    this._isMouseOver = true;\n    this.showTicks();\n    evt.stopPropagation();\n  };\n\n  private _mouseOutCallback = (evt) => {\n    this._isMouseOver = false;\n    this.hideTicks();\n    evt.stopPropagation();\n  };\n\n  private _mouseDownCallback = (evt: MouseEvent) => {\n    this._isInteracting = true;\n    this.showTicks();\n    this._addVOIEventListeners(evt);\n    evt.stopPropagation();\n  };\n\n  private _mouseDragCallback = (evt, initialState) => {\n    const multipliers = this.getVOIMultipliers();\n    const currentPoints = this._getPointsFromMouseEvent(evt);\n    const { points: startPoints, voiRange: startVOIRange } = initialState;\n    const canvasDelta = vec2.sub(\n      vec2.create(),\n      currentPoints.local,\n      startPoints.local\n    );\n\n    const wwDelta = canvasDelta[0] * multipliers[0];\n    const wcDelta = canvasDelta[1] * multipliers[1];\n\n    if (!wwDelta && !wcDelta) {\n      return;\n    }\n\n    const { lower: voiLower, upper: voiUpper } = startVOIRange;\n    let { windowWidth, windowCenter } = csUtils.windowLevel.toWindowLevel(\n      voiLower,\n      voiUpper\n    );\n\n    windowWidth = Math.max(windowWidth + wwDelta, 1);\n    windowCenter += wcDelta;\n\n    const newVoiRange = csUtils.windowLevel.toLowHighRange(\n      windowWidth,\n      windowCenter\n    );\n\n    this.voiRange = newVoiRange;\n    evt.stopPropagation();\n    evt.preventDefault();\n  };\n\n  private _mouseUpCallback = (evt) => {\n    this._isInteracting = false;\n    this.hideTicks();\n    this._removeVOIEventListeners();\n    evt.stopPropagation();\n  };\n\n  private _addRootElementEventListeners() {\n    const { _eventListenersManager: manager } = this;\n    const { rootElement: element } = this;\n\n    manager.addEventListener(element, 'mouseover', this._mouseOverCallback);\n    manager.addEventListener(element, 'mouseout', this._mouseOutCallback);\n    manager.addEventListener(\n      element,\n      'mousedown',\n      this._mouseDownCallback as EventListener\n    );\n  }\n\n  private _addVOIEventListeners(evt: MouseEvent) {\n    const { _eventListenersManager: manager } = this;\n    const points = this._getPointsFromMouseEvent(evt);\n    const voiRange = { ...this._canvas.voiRange };\n    const initialDragState = { points, voiRange };\n\n    this._removeVOIEventListeners();\n\n    manager.addEventListener(document, 'voi.mouseup', this._mouseUpCallback);\n    manager.addEventListener(document, 'voi.mousemove', (evt) =>\n      this._mouseDragCallback(evt, initialDragState)\n    );\n  }\n\n  private _removeVOIEventListeners() {\n    const { _eventListenersManager: manager } = this;\n\n    manager.removeEventListener(document, 'voi.mouseup');\n    manager.removeEventListener(document, 'voi.mousemove');\n  }\n}\n\nexport { Colorbar as default, Colorbar };\n","import {\n  eventTarget,\n  VolumeViewport,\n  StackViewport,\n  Types,\n  Enums,\n  utilities,\n  getEnabledElement,\n} from '@cornerstonejs/core';\nimport { Colorbar } from './Colorbar';\nimport type { ViewportColorbarProps, ColorbarVOIRange } from './types';\nimport { getVOIMultipliers } from '../../getVOIMultipliers';\n\nconst { Events } = Enums;\nconst defaultImageRange = { lower: -1000, upper: 1000 };\n/**\n * A colorbar associated with a viewport that updates automatically when the\n * viewport VOI changes or when the stack/volume are updated..\n */\nclass ViewportColorbar extends Colorbar {\n  private _element: HTMLDivElement;\n  private _volumeId: string;\n\n  private _hideTicksTime: number;\n  private _hideTicksTimeoutId: number;\n\n  constructor(props: ViewportColorbarProps) {\n    const { element, volumeId } = props;\n    const imageRange = ViewportColorbar._getImageRange(element, volumeId);\n    const voiRange = ViewportColorbar._getVOIRange(element, volumeId);\n\n    super({ ...props, imageRange, voiRange });\n\n    this._element = element;\n    this._volumeId = volumeId;\n\n    this._addCornerstoneEventListener();\n  }\n\n  public get element() {\n    return this._element;\n  }\n\n  public get enabledElement() {\n    return getEnabledElement(this._element);\n  }\n\n  protected getVOIMultipliers(): [number, number] {\n    const { viewport } = this.enabledElement;\n    return getVOIMultipliers(viewport, this._volumeId);\n  }\n\n  protected onVoiChange(voiRange: ColorbarVOIRange) {\n    super.onVoiChange(voiRange);\n\n    const { viewport } = this.enabledElement;\n\n    if (viewport instanceof StackViewport) {\n      viewport.setProperties({\n        voiRange: voiRange,\n      });\n      viewport.render();\n    } else if (viewport instanceof VolumeViewport) {\n      const { _volumeId: volumeId } = this;\n      const viewportsContainingVolumeUID = utilities.getViewportsWithVolumeId(\n        volumeId,\n        viewport.renderingEngineId\n      );\n\n      viewport.setProperties({ voiRange }, volumeId);\n      viewportsContainingVolumeUID.forEach((vp) => vp.render());\n    }\n  }\n\n  private static _getImageRange(element, volumeId?) {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const actor = volumeId\n      ? viewport.getActor(volumeId)\n      : viewport.getDefaultActor();\n\n    if (!actor) {\n      return defaultImageRange;\n    }\n\n    const imageData = actor.actor.getMapper().getInputData();\n    const imageRange = imageData.getPointData().getScalars().getRange();\n\n    return imageRange[0] === 0 && imageRange[1] === 0\n      ? defaultImageRange\n      : { lower: imageRange[0], upper: imageRange[1] };\n  }\n\n  private static _getVOIRange(element, volumeId) {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const volumeActor = volumeId\n      ? viewport.getActor(volumeId)\n      : viewport.getDefaultActor();\n\n    if (!volumeActor || !utilities.isImageActor(volumeActor)) {\n      return defaultImageRange;\n    }\n\n    const voiRange = (volumeActor.actor as Types.ImageActor)\n      .getProperty()\n      .getRGBTransferFunction(0)\n      .getRange();\n\n    return voiRange[0] === 0 && voiRange[1] === 0\n      ? defaultImageRange\n      : { lower: voiRange[0], upper: voiRange[1] };\n  }\n\n  private autoHideTicks = () => {\n    // Avoiding calling setTimeout multiple times when manipulating the VOI\n    // via WindowLevel tool for better performance\n    if (this._hideTicksTimeoutId) {\n      return;\n    }\n\n    const timeLeft = this._hideTicksTime - Date.now();\n\n    if (timeLeft <= 0) {\n      this.hideTicks();\n    } else {\n      this._hideTicksTimeoutId = window.setTimeout(() => {\n        // Recursive call until there is no more time left\n        this._hideTicksTimeoutId = 0;\n        this.autoHideTicks();\n      }, timeLeft);\n    }\n  };\n\n  private showAndAutoHideTicks(interval = 1000) {\n    this._hideTicksTime = Date.now() + interval;\n    this.showTicks();\n    this.autoHideTicks();\n  }\n\n  private _stackNewImageCallback = () => {\n    this.imageRange = ViewportColorbar._getImageRange(this._element);\n  };\n\n  private _imageVolumeModifiedCallback = (\n    evt: Types.EventTypes.ImageVolumeModifiedEvent\n  ) => {\n    const { volumeId } = evt.detail.imageVolume;\n\n    if (volumeId !== this._volumeId) {\n      return;\n    }\n\n    const { _element: element } = this;\n    this.imageRange = ViewportColorbar._getImageRange(element, volumeId);\n  };\n\n  private _viewportVOIModifiedCallback = (\n    evt: Types.EventTypes.VoiModifiedEvent\n  ) => {\n    const { viewportId, volumeId, range: voiRange, colormap } = evt.detail;\n    const { viewport } = this.enabledElement;\n    if (viewportId !== viewport.id || volumeId !== this._volumeId) {\n      return;\n    }\n\n    this.voiRange = voiRange;\n\n    if (colormap) {\n      this.activeColormapName = colormap.name;\n    }\n    this.showAndAutoHideTicks();\n  };\n\n  private _viewportColormapModifiedCallback = (\n    evt: Types.EventTypes.ColormapModifiedEvent\n  ) => {\n    const { viewportId, colormap, volumeId } = evt.detail;\n    const { viewport } = this.enabledElement;\n\n    if (viewportId !== viewport.id || volumeId !== this._volumeId) {\n      return;\n    }\n\n    this.activeColormapName = colormap.name;\n  };\n\n  private _addCornerstoneEventListener() {\n    const { _element: element } = this;\n\n    eventTarget.addEventListener(\n      Events.IMAGE_VOLUME_MODIFIED,\n      this._imageVolumeModifiedCallback\n    );\n\n    element.addEventListener(\n      Events.STACK_NEW_IMAGE,\n      this._stackNewImageCallback\n    );\n\n    element.addEventListener(\n      Events.VOI_MODIFIED,\n      this._viewportVOIModifiedCallback as EventListener\n    );\n\n    element.addEventListener(\n      Events.COLORMAP_MODIFIED,\n      this._viewportColormapModifiedCallback as EventListener\n    );\n  }\n}\n\nexport { ViewportColorbar as default, ViewportColorbar };\n","/**\n * Specify the position of the text/ticks.\n * Left/Right are the valid options for a vertical colorbars and Top/Bottom\n * for the horizontal ones.\n */\nexport enum ColorbarRangeTextPosition {\n  Top = 'top',\n  Left = 'left',\n  Bottom = 'bottom',\n  Right = 'right',\n}\n","/**\n * Extracts the luminance values from a specified region of an image.\n *\n * @param {Object} imageData - The image data object containing pixel information.\n * @param {Uint8Array} imageData.scalarData - The pixel data array.\n * @param {boolean} imageData.color - A flag indicating if the image is in color (true) or grayscale (false).\n * @param {number} imageData.columns - The number of columns (width) in the image.\n * @param {number} x - The x-coordinate of the top-left corner of the region.\n * @param {number} y - The y-coordinate of the top-left corner of the region.\n * @param {number} width - The width of the region.\n * @param {number} height - The height of the region.\n * @returns {number[]} An array containing the luminance values of the specified region.\n */\nfunction getLuminanceFromRegion(imageData, x, y, width, height) {\n  const luminance = [];\n  let index = 0;\n  const pixelData = imageData.scalarData;\n  let spIndex, row, column;\n\n  if (imageData.color) {\n    for (row = 0; row < height; row++) {\n      for (column = 0; column < width; column++) {\n        spIndex = ((row + y) * imageData.columns + (column + x)) * 4;\n        const red = pixelData[spIndex];\n        const green = pixelData[spIndex + 1];\n        const blue = pixelData[spIndex + 2];\n\n        luminance[index++] = 0.2126 * red + 0.7152 * green + 0.0722 * blue;\n      }\n    }\n  } else {\n    for (row = 0; row < height; row++) {\n      for (column = 0; column < width; column++) {\n        spIndex = (row + y) * imageData.columns + (column + x);\n        luminance[index++] = pixelData[spIndex];\n      }\n    }\n  }\n\n  return luminance;\n}\n\nexport { getLuminanceFromRegion };\n","function calculateMinMaxMean(pixelLuminance, globalMin, globalMax) {\n  const numPixels = pixelLuminance.length;\n  let min = globalMax;\n  let max = globalMin;\n  let sum = 0;\n\n  if (numPixels < 2) {\n    return {\n      min,\n      max,\n      mean: (globalMin + globalMax) / 2,\n    };\n  }\n\n  for (let index = 0; index < numPixels; index++) {\n    const spv = pixelLuminance[index];\n\n    min = Math.min(min, spv);\n    max = Math.max(max, spv);\n    sum += spv;\n  }\n\n  return {\n    min,\n    max,\n    mean: sum / numPixels,\n  };\n}\n\nexport { calculateMinMaxMean };\n","import {\n  VolumeViewport,\n  utilities as csUtils,\n  cache,\n  StackViewport,\n} from '@cornerstonejs/core';\n\nfunction extractWindowLevelRegionToolData(viewport) {\n  if (viewport instanceof VolumeViewport) {\n    return extractImageDataVolume(viewport);\n  }\n  if (viewport instanceof StackViewport) {\n    return extractImageDataStack(viewport);\n  }\n\n  throw new Error('Viewport not supported');\n}\n\nfunction extractImageDataVolume(viewport) {\n  const { scalarData, width, height } =\n    csUtils.getCurrentVolumeViewportSlice(viewport);\n  const { min: minPixelValue, max: maxPixelValue } =\n    csUtils.getMinMax(scalarData);\n  const volumeId = viewport.getVolumeId();\n  const volume = cache.getVolume(volumeId);\n  // @ts-ignore\n  const { metadata, cornerstoneImageMetaData } = volume;\n  const { Rows: rows, Columns: columns } = metadata;\n  const { color } = cornerstoneImageMetaData;\n  return {\n    scalarData,\n    width,\n    height,\n    minPixelValue,\n    maxPixelValue,\n    rows,\n    columns,\n    color,\n  };\n}\n\nfunction extractImageDataStack(viewport) {\n  const imageData = viewport.getImageData();\n  const { scalarData } = imageData;\n  const { min: minPixelValue, max: maxPixelValue } =\n    csUtils.getMinMax(scalarData);\n  const width = imageData.dimensions[0];\n  const height = imageData.dimensions[1];\n  const { rows, columns, color } = viewport.getCornerstoneImage();\n\n  return {\n    scalarData,\n    width,\n    height,\n    minPixelValue,\n    maxPixelValue,\n    rows,\n    columns,\n    color,\n  };\n}\n\nexport { extractWindowLevelRegionToolData };\n","\nvar ICRPolySegApp = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(ICRPolySegApp) {\n  ICRPolySegApp = ICRPolySegApp || {};\n\nvar Module=typeof ICRPolySegApp!=\"undefined\"?ICRPolySegApp:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"ICRPolySeg.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"Q\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"T\"];addOnInit(Module[\"asm\"][\"R\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var ASM_CONSTS={638383:$0=>{if(Module.updateProgress){Module.updateProgress($0)}}};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function ___syscall_getcwd(buf,size){}function ___syscall_getdents64(fd,dirp,count){}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs}function ___syscall_readlinkat(dirfd,path,buf,bufsize){}function ___syscall_stat64(path,buf){}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>{return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"')}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_as(handle,returnType,destructorsRef){handle=Emval.toValue(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=Emval.toHandle(destructors);HEAPU32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol}var emval_methodCallers=[];function __emval_call_void_method(caller,handle,methodName,args){caller=emval_methodCallers[caller];handle=Emval.toValue(handle);methodName=getStringOrSymbol(methodName);caller(handle,methodName,null,args)}function emval_get_global(){if(typeof globalThis==\"object\"){return globalThis}return function(){return Function}()(\"return this\")()}function __emval_get_global(name){if(name===0){return Emval.toHandle(emval_get_global())}else{name=getStringOrSymbol(name);return Emval.toHandle(emval_get_global()[name])}}function emval_addMethodCaller(caller){var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id}function emval_lookupTypes(argCount,argTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAPU32[argTypes+i*POINTER_SIZE>>2],\"parameter \"+i)}return a}var emval_registeredMethods=[];function __emval_get_method_caller(argCount,argTypes){var types=emval_lookupTypes(argCount,argTypes);var retType=types[0];var signatureName=retType.name+\"_$\"+types.slice(1).map(function(t){return t.name}).join(\"_\")+\"$\";var returnId=emval_registeredMethods[signatureName];if(returnId!==undefined){return returnId}var params=[\"retType\"];var args=[retType];var argsList=\"\";for(var i=0;i<argCount-1;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;params.push(\"argType\"+i);args.push(types[1+i])}var functionName=makeLegalFunctionName(\"methodCaller_\"+signatureName);var functionBody=\"return function \"+functionName+\"(handle, name, destructors, args) {\\n\";var offset=0;for(var i=0;i<argCount-1;++i){functionBody+=\"    var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args\"+(offset?\"+\"+offset:\"\")+\");\\n\";offset+=types[i+1][\"argPackAdvance\"]}functionBody+=\"    var rv = handle[name](\"+argsList+\");\\n\";for(var i=0;i<argCount-1;++i){if(types[i+1][\"deleteObject\"]){functionBody+=\"    argType\"+i+\".deleteObject(arg\"+i+\");\\n\"}}if(!retType.isVoid){functionBody+=\"    return retType.toWireType(destructors, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=new_(Function,params).apply(null,args);returnId=emval_addMethodCaller(invokerFunction);emval_registeredMethods[signatureName]=returnId;return returnId}function __emval_get_property(handle,key){handle=Emval.toValue(handle);key=Emval.toValue(key);return Emval.toHandle(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function craftEmvalAllocator(argCount){var argsList=\"\";for(var i=0;i<argCount;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i}var getMemory=()=>HEAPU32;var functionBody=\"return function emval_allocator_\"+argCount+\"(constructor, argTypes, args) {\\n\"+\"  var HEAPU32 = getMemory();\\n\";for(var i=0;i<argCount;++i){functionBody+=\"var argType\"+i+\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \"+i+\"');\\n\"+\"var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args);\\n\"+\"args += argType\"+i+\"['argPackAdvance'];\\n\"+\"argTypes += 4;\\n\"}functionBody+=\"var obj = new constructor(\"+argsList+\");\\n\"+\"return valueToHandle(obj);\\n\"+\"}\\n\";return new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",functionBody)(requireRegisteredType,Module,Emval.toHandle,getMemory)}var emval_newers={};function __emval_new(handle,argCount,argTypes,args){handle=Emval.toValue(handle);var newer=emval_newers[argCount];if(!newer){newer=craftEmvalAllocator(argCount);emval_newers[argCount]=newer}return newer(handle,argTypes,args)}function __emval_new_cstring(v){return Emval.toHandle(getStringOrSymbol(v))}function __emval_run_destructors(handle){var destructors=Emval.toValue(handle);runDestructors(destructors);__emval_decref(handle)}function __emval_take_value(type,arg){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}function _abort(){abort(\"\")}var readEmAsmArgsArray=[];function readEmAsmArgs(sigPtr,buf){readEmAsmArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){buf+=ch!=105&buf;readEmAsmArgsArray.push(ch==105?HEAP32[buf]:HEAPF64[buf++>>1]);++buf}return readEmAsmArgsArray}function runEmAsmFunction(code,sigPtr,argbuf){var args=readEmAsmArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}function _emscripten_asm_const_int(code,sigPtr,argbuf){return runEmAsmFunction(code,sigPtr,argbuf)}function getHeapMax(){return 2147483648}function _emscripten_get_heap_max(){return getHeapMax()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){return 52}function _fd_read(fd,iov,iovcnt,pnum){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":function(date){var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&__isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!__isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s,maxsize,format,tm)}function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;_proc_exit(status)}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_emval();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");var asmLibraryArg={\"b\":___cxa_throw,\"J\":___syscall_getcwd,\"F\":___syscall_getdents64,\"L\":___syscall_openat,\"E\":___syscall_readlinkat,\"G\":___syscall_stat64,\"x\":__embind_finalize_value_object,\"A\":__embind_register_bigint,\"O\":__embind_register_bool,\"N\":__embind_register_emval,\"v\":__embind_register_float,\"g\":__embind_register_function,\"d\":__embind_register_integer,\"c\":__embind_register_memory_view,\"u\":__embind_register_std_string,\"m\":__embind_register_std_wstring,\"y\":__embind_register_value_object,\"e\":__embind_register_value_object_field,\"P\":__embind_register_void,\"r\":__emval_as,\"i\":__emval_call_void_method,\"a\":__emval_decref,\"p\":__emval_get_global,\"j\":__emval_get_method_caller,\"s\":__emval_get_property,\"f\":__emval_incref,\"o\":__emval_new,\"w\":__emval_new_cstring,\"q\":__emval_run_destructors,\"k\":__emval_take_value,\"n\":_abort,\"h\":_emscripten_asm_const_int,\"D\":_emscripten_get_heap_max,\"M\":_emscripten_memcpy_big,\"C\":_emscripten_resize_heap,\"H\":_environ_get,\"I\":_environ_sizes_get,\"l\":_fd_close,\"K\":_fd_read,\"z\":_fd_seek,\"t\":_fd_write,\"B\":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _main=Module[\"_main\"]=function(){return(_main=Module[\"_main\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=function(){return(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=function(){return(___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var dynCall_viij=Module[\"dynCall_viij\"]=function(){return(dynCall_viij=Module[\"dynCall_viij\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var dynCall_vij=Module[\"dynCall_vij\"]=function(){return(dynCall_vij=Module[\"dynCall_vij\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var dynCall_iij=Module[\"dynCall_iij\"]=function(){return(dynCall_iij=Module[\"dynCall_iij\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var dynCall_viji=Module[\"dynCall_viji\"]=function(){return(dynCall_viji=Module[\"dynCall_viji\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var dynCall_viijii=Module[\"dynCall_viijii\"]=function(){return(dynCall_viijii=Module[\"dynCall_viijii\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=function(){return(dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=function(){return(dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=function(){return(dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var ___start_em_js=Module[\"___start_em_js\"]=638316;var ___stop_em_js=Module[\"___stop_em_js\"]=638383;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(args){var entryFunction=Module[\"_main\"];var argc=0;var argv=0;try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(shouldRunNow)callMain(args);postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"])shouldRunNow=false;run();\n\n\n  return ICRPolySegApp.ready\n}\n);\n})();\nexport default ICRPolySegApp;","import launcher from './ICRPolySeg.js';\r\nimport wasm from './ICRPolySeg.wasm';\r\n\r\nexport default class ICRPolySeg {\r\n  constructor() {\r\n    this._instance;\r\n  }\r\n\r\n  get instance() {\r\n    if (this._instance) {\r\n      return this._instance;\r\n    }\r\n\r\n    throw new Error('ICRPolySeg is not initialized.');\r\n  }\r\n\r\n  async initialize(params = {}) {\r\n    this._instance = await launcher({\r\n      locateFile: (f) => {\r\n        if (f.endsWith('.wasm')) {\r\n          return wasm;\r\n        }\r\n        return f;\r\n      },\r\n      ...params\r\n    });\r\n  }\r\n}\r\n","import { m as macro } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\n\nconst Dir = {\n  Forward: 1,\n  Backward: -1\n};\nconst visited = new Set();\nfunction vtkContourLoopExtraction(publicAPI, model) {\n  publicAPI.requestData = (inData, outData) => {\n    const [input] = inData;\n    if (!outData[0]) {\n      outData[0] = vtkPolyData.newInstance();\n    }\n    const [output] = outData;\n    publicAPI.extractContours(input, output);\n    output.modified();\n  };\n  publicAPI.traverseLoop = (pd, dir, startLineId, startPtId, loopPoints) => {\n    let lineId = startLineId;\n    let lastPtId = startPtId;\n    let terminated = false;\n    let numInserted = 0;\n    while (!terminated) {\n      const {\n        cellPointIds\n      } = pd.getCellPoints(lineId);\n      if (!cellPointIds) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      lastPtId = cellPointIds[0] !== lastPtId ? cellPointIds[0] : cellPointIds[1];\n      numInserted++;\n\n      // parametric point value\n      const t = dir * numInserted;\n      loopPoints.push({\n        t,\n        ptId: lastPtId\n      });\n      const lineCell = pd.getPointCells(lastPtId);\n      if (lineCell.length !== 2 || lastPtId === startPtId) {\n        // looped\n        return lastPtId;\n      }\n      if (lineCell.length === 2) {\n        // continue along loop\n        lineId = lineCell[0] !== lineId ? lineCell[0] : lineCell[1];\n        visited.add(lineId);\n      } else {\n        // empty or invalid cell\n        terminated = true;\n      }\n    }\n    return lastPtId;\n  };\n  publicAPI.extractContours = (input, output) => {\n    const loops = [];\n    visited.clear();\n    const inLines = input.getLines();\n    output.getPoints().setData(Float32Array.from(input.getPoints().getData()));\n\n    // TODO skip if cached input mtime hasn't changed.\n    // iterate over input lines\n    for (let li = 0; li < inLines.getNumberOfCells(); li++) {\n      if (visited.has(li)) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      const {\n        cellPointIds\n      } = input.getCellPoints(li);\n      if (!cellPointIds) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      visited.add(li);\n      const startPtId = cellPointIds[0];\n      const loopPoints = [];\n      loopPoints.push({\n        t: 0,\n        ptId: startPtId\n      });\n      const endPtId = publicAPI.traverseLoop(input, Dir.Forward, li, startPtId, loopPoints);\n      if (startPtId !== endPtId) {\n        // didn't find a loop. Go other direction to see where we end up\n        publicAPI.traverseLoop(input, Dir.Backward, li, startPtId, loopPoints);\n        loopPoints.sort((a, b) => a.t < b.t ? -1 : 1);\n        // make closed contour\n        if (loopPoints.length && loopPoints[0].ptId !== loopPoints[loopPoints.length - 1]?.ptId) {\n          loopPoints.push({\n            ...loopPoints[loopPoints.length - 1]\n          });\n        }\n      }\n      if (loopPoints.length) {\n        loops.push(loopPoints);\n      }\n    }\n\n    // clear output lines\n    const outLines = output.getLines();\n    outLines.resize(0);\n    loops.forEach(loop => {\n      outLines.insertNextCell(loop.map(pt => pt.ptId));\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 1);\n  vtkContourLoopExtraction(publicAPI);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkContourLoopExtraction');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\nexport { index as default, extend, newInstance };\n","import { expose } from 'comlink';\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport ICRPolySeg from '@icr/polyseg-wasm';\nimport { utilities } from '@cornerstonejs/core';\nimport vtkPlane from '@kitware/vtk.js/Common/DataModel/Plane';\nimport vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData';\nimport vtkContourLoopExtraction from '@kitware/vtk.js/Filters/General/ContourLoopExtraction';\nimport vtkCutter from '@kitware/vtk.js/Filters/Core/Cutter';\n\nimport { getBoundingBoxAroundShapeWorld } from '../utilities/boundingBox';\nimport { pointInShapeCallback } from '../utilities';\nimport {\n  containsPoint,\n  getAABB,\n  projectTo2D,\n} from '../utilities/math/polyline';\nimport { isPlaneIntersectingAABB } from '../utilities/planar';\n\n/**\n * Object containing methods for converting between different representations of\n * segmentations (e.g., contour, labelmap, surface, etc.) These logics\n * are used in a webworker to avoid blocking the main thread. You can\n * search for workerManager.executeTask('polySeg', ...) to see\n * how these methods are used.\n *\n * See also the webworker docs at packages/docs/docs/concepts/cornerstone-core/web-worker.md\n * to learn more about how to use webworkers in the context of Cornerstone.\n */\nconst polySegConverters = {\n  /**\n   * The polySeg instance that is used to convert between different representations\n   */\n  polySeg: null,\n  /**\n   * Utilities to keep track of the initialization state of the polySeg instance\n   * and avoid initializing it multiple times\n   */\n  polySegInitializing: false,\n  polySegInitializingPromise: null,\n  /**\n   * This method initializes the polySeg instance and sets it to this.polySeg\n   */\n  async initializePolySeg(progressCallback) {\n    if (this.polySegInitializing) {\n      await this.polySegInitializingPromise;\n      return;\n    }\n\n    if (this.polySeg?.instance) {\n      return;\n    }\n\n    this.polySegInitializing = true;\n    this.polySegInitializingPromise = new Promise((resolve) => {\n      this.polySeg = new ICRPolySeg();\n      this.polySeg\n        .initialize({\n          updateProgress: progressCallback,\n        })\n        .then(() => {\n          this.polySegInitializing = false;\n          resolve();\n        });\n    });\n\n    await this.polySegInitializingPromise;\n  },\n  /**\n   * Converts a contour to a surface using the PolySeg library.\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Array} args.polylines - The polylines representing the contour.\n   * @param {Array} args.numPointsArray - The number of points in each polyline.\n   * @param {...Function} callbacks - Optional callback functions.\n   * @returns {Promise} - A promise that resolves to the converted surface.\n   */\n  async convertContourToSurface(args, ...callbacks) {\n    const { polylines, numPointsArray } = args;\n    const [progressCallback] = callbacks;\n    await this.initializePolySeg(progressCallback);\n    const results = await this.polySeg.instance.convertContourRoiToSurface(\n      polylines,\n      numPointsArray\n    );\n\n    return results;\n  },\n  /**\n   * Converts a labelmap to a surface using the specified arguments.\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Array} args.scalarData - The scalar data of the labelmap.\n   * @param {Array} args.dimensions - The dimensions of the labelmap.\n   * @param {Array} args.spacing - The spacing of the labelmap.\n   * @param {Array} args.direction - The direction of the labelmap.\n   * @param {Array} args.origin - The origin of the labelmap.\n   * @param {number} args.segmentIndex - The segment index of the labelmap.\n   * @param {Function} progressCallback - The callback function for progress updates.\n   * @returns {Promise} - A promise that resolves with the converted surface results.\n   */\n  async convertLabelmapToSurface(args, ...callbacks) {\n    const [progressCallback] = callbacks;\n    await this.initializePolySeg(progressCallback);\n\n    const results = this.polySeg.instance.convertLabelmapToSurface(\n      args.scalarData,\n      args.dimensions,\n      args.spacing,\n      args.direction,\n      args.origin,\n      [args.segmentIndex]\n    );\n    return results;\n  },\n  /**\n   * Converts a contour to a volume labelmap.\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Array} args.segmentIndices - The indices of the segments.\n   * @param {Array} args.scalarData - The scalar data.\n   * @param {Map} args.annotationUIDsInSegmentMap - The map of annotation UIDs in segment.\n   * @param {Array} args.dimensions - The dimensions of the image data.\n   * @param {Array} args.origin - The origin of the image data.\n   * @param {Array} args.direction - The direction of the image data.\n   * @param {Array} args.spacing - The spacing of the image data.\n   * @param {...Function} callbacks - Optional callbacks.\n   * @param {Function} callbacks[0] - The progress callback.\n   * @returns {Array} - The scalar data of the segmentation voxel manager.\n   */\n  async convertContourToVolumeLabelmap(args, ...callbacks) {\n    const [progressCallback] = callbacks;\n    const polySeg = await new ICRPolySeg();\n    await polySeg.initialize({\n      updateProgress: progressCallback,\n    });\n\n    const {\n      segmentIndices,\n      scalarData,\n      annotationUIDsInSegmentMap,\n      dimensions,\n      origin,\n      direction,\n      spacing,\n    } = args;\n\n    const segmentationVoxelManager =\n      utilities.VoxelManager.createVolumeVoxelManager(dimensions, scalarData);\n\n    const imageData = vtkImageData.newInstance();\n    imageData.setDimensions(dimensions);\n    imageData.setOrigin(origin);\n    imageData.setDirection(direction);\n    imageData.setSpacing(spacing);\n\n    const scalarArray = vtkDataArray.newInstance({\n      name: 'Pixels',\n      numberOfComponents: 1,\n      values: scalarData,\n    });\n\n    imageData.getPointData().setScalars(scalarArray);\n\n    imageData.modified();\n\n    for (const index of segmentIndices) {\n      const annotations = annotationUIDsInSegmentMap.get(index);\n\n      for (const annotation of annotations) {\n        if (!annotation.polyline) {\n          continue;\n        }\n\n        const { polyline, holesPolyline } = annotation;\n        const bounds = getBoundingBoxAroundShapeWorld(polyline);\n\n        const [iMin, jMin, kMin] = utilities.transformWorldToIndex(imageData, [\n          bounds[0][0],\n          bounds[1][0],\n          bounds[2][0],\n        ]);\n\n        const [iMax, jMax, kMax] = utilities.transformWorldToIndex(imageData, [\n          bounds[0][1],\n          bounds[1][1],\n          bounds[2][1],\n        ]);\n\n        const { projectedPolyline, sharedDimensionIndex } =\n          projectTo2D(polyline);\n\n        const holes = holesPolyline?.map((hole) => {\n          const { projectedPolyline: projectedHole } = projectTo2D(hole);\n          return projectedHole;\n        });\n\n        const firstDim = (sharedDimensionIndex + 1) % 3;\n        const secondDim = (sharedDimensionIndex + 2) % 3;\n\n        // Run the pointInShapeCallback for the combined bounding box\n        pointInShapeCallback(\n          imageData,\n          (pointLPS) => {\n            const point2D = [pointLPS[firstDim], pointLPS[secondDim]];\n\n            // Check if the point is inside any of the polylines for this segment\n            const isInside = containsPoint(projectedPolyline, point2D, {\n              holes,\n            });\n\n            return isInside;\n          },\n          ({ pointIJK }) => {\n            segmentationVoxelManager.setAtIJKPoint(pointIJK, index);\n          },\n          [\n            [iMin, iMax],\n            [jMin, jMax],\n            [kMin, kMax],\n          ]\n        );\n      }\n    }\n\n    return segmentationVoxelManager.scalarData;\n  },\n  /**\n   * Converts a contour to a stack labelmap.\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Array} callbacks - Optional callbacks for progress updates.\n   * @returns {Promise<Object>} - The converted segmentations information.\n   */\n  async convertContourToStackLabelmap(args, ...callbacks) {\n    const [progressCallback] = callbacks;\n    const polySeg = await new ICRPolySeg();\n    await polySeg.initialize({\n      updateProgress: progressCallback,\n    });\n\n    const { segmentationsInfo, annotationUIDsInSegmentMap, segmentIndices } =\n      args;\n\n    const segmentationVoxelManagers = new Map();\n\n    segmentationsInfo.forEach((segmentationInfo, referencedImageId) => {\n      const { dimensions, scalarData, direction, spacing, origin } =\n        segmentationInfo;\n      const manager = utilities.VoxelManager.createVolumeVoxelManager(\n        dimensions,\n        scalarData\n      );\n\n      const imageData = vtkImageData.newInstance();\n      imageData.setDimensions(dimensions);\n      imageData.setOrigin(origin);\n      imageData.setDirection(direction);\n      imageData.setSpacing(spacing);\n\n      const scalarArray = vtkDataArray.newInstance({\n        name: 'Pixels',\n        numberOfComponents: 1,\n        values: scalarData,\n      });\n\n      imageData.getPointData().setScalars(scalarArray);\n\n      imageData.modified();\n\n      segmentationVoxelManagers.set(referencedImageId, { manager, imageData });\n    });\n\n    for (const index of segmentIndices) {\n      const annotations = annotationUIDsInSegmentMap.get(index);\n\n      for (const annotation of annotations) {\n        if (!annotation.polyline) {\n          continue;\n        }\n\n        const { polyline, holesPolyline, referencedImageId } = annotation;\n        const bounds = getBoundingBoxAroundShapeWorld(polyline);\n\n        const { manager: segmentationVoxelManager, imageData } =\n          segmentationVoxelManagers.get(referencedImageId);\n\n        const [iMin, jMin, kMin] = utilities.transformWorldToIndex(imageData, [\n          bounds[0][0],\n          bounds[1][0],\n          bounds[2][0],\n        ]);\n\n        const [iMax, jMax, kMax] = utilities.transformWorldToIndex(imageData, [\n          bounds[0][1],\n          bounds[1][1],\n          bounds[2][1],\n        ]);\n\n        const { projectedPolyline, sharedDimensionIndex } =\n          projectTo2D(polyline);\n\n        const holes = holesPolyline?.map((hole) => {\n          const { projectedPolyline: projectedHole } = projectTo2D(hole);\n          return projectedHole;\n        });\n\n        const firstDim = (sharedDimensionIndex + 1) % 3;\n        const secondDim = (sharedDimensionIndex + 2) % 3;\n\n        // Run the pointInShapeCallback for the combined bounding box\n        pointInShapeCallback(\n          imageData,\n          (pointLPS) => {\n            const point2D = [pointLPS[firstDim], pointLPS[secondDim]];\n\n            // Check if the point is inside any of the polylines for this segment\n            const isInside = containsPoint(projectedPolyline, point2D, {\n              holes,\n            });\n\n            return isInside;\n          },\n          ({ pointIJK }) => {\n            segmentationVoxelManager.setAtIJKPoint(pointIJK, index);\n          },\n          [\n            [iMin, iMax],\n            [jMin, jMax],\n            [kMin, kMax],\n          ]\n        );\n      }\n    }\n\n    segmentationsInfo.forEach((segmentationInfo, referencedImageId) => {\n      const { manager: segmentationVoxelManager } =\n        segmentationVoxelManagers.get(referencedImageId);\n\n      segmentationInfo.scalarData = segmentationVoxelManager.scalarData;\n    });\n    return segmentationsInfo;\n  },\n  /**\n   * Converts a surface to a volume labelmap.\n   *\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Array} args.points - The points defining the surface.\n   * @param {Array} args.polys - The polygons defining the surface.\n   * @param {Array} args.dimensions - The dimensions of the volume.\n   * @param {Array} args.spacing - The spacing between voxels in the volume.\n   * @param {Array} args.direction - The direction of the volume.\n   * @param {Array} args.origin - The origin of the volume.\n   * @param {Function} progressCallback - The callback function for reporting progress.\n   * @returns {Promise} - A promise that resolves with the converted labelmap.\n   */\n  async convertSurfaceToVolumeLabelmap(args, ...callbacks) {\n    const [progressCallback] = callbacks;\n    await this.initializePolySeg(progressCallback);\n\n    const results = this.polySeg.instance.convertSurfaceToLabelmap(\n      args.points,\n      args.polys,\n      args.dimensions,\n      args.spacing,\n      args.direction,\n      args.origin\n    );\n\n    return results;\n  },\n  /**\n   * Converts surfaces to a volume labelmap.\n   * @param {Object} args - The arguments for the conversion.\n   * @param {Map} args.segmentsInfo - A map containing information about the segments.\n   * @param {Function} progressCallback - A callback function for reporting progress.\n   * @returns {Uint8Array} - The resulting volume labelmap.\n   */\n  async convertSurfacesToVolumeLabelmap(args, ...callbacks) {\n    const [progressCallback] = callbacks;\n    await this.initializePolySeg(progressCallback);\n\n    const { segmentsInfo } = args;\n\n    const promises = Array.from(segmentsInfo.keys()).map((segmentIndex) => {\n      const { points, polys } = segmentsInfo.get(segmentIndex);\n      const result = this.polySeg.instance.convertSurfaceToLabelmap(\n        points,\n        polys,\n        args.dimensions,\n        args.spacing,\n        args.direction,\n        args.origin\n      );\n\n      return {\n        ...result,\n        segmentIndex,\n      };\n    });\n\n    const results = await Promise.all(promises);\n\n    const targetImageData = vtkImageData.newInstance();\n    targetImageData.setDimensions(args.dimensions);\n    targetImageData.setOrigin(args.origin);\n    targetImageData.setSpacing(args.spacing);\n    targetImageData.setDirection(args.direction);\n\n    const totalSize =\n      args.dimensions[0] * args.dimensions[1] * args.dimensions[2];\n\n    const scalarArray = vtkDataArray.newInstance({\n      name: 'Pixels',\n      numberOfComponents: 1,\n      values: new Uint8Array(totalSize),\n    });\n\n    targetImageData.getPointData().setScalars(scalarArray);\n    targetImageData.modified();\n\n    // we need to then consolidate the results into a single volume\n    // by looping into each voxel with pointInShapeCallback\n    // and check if the voxel is inside any of the reconstructed\n    // labelmaps\n\n    const segmentationVoxelManager =\n      utilities.VoxelManager.createVolumeVoxelManager(\n        args.dimensions,\n        targetImageData.getPointData().getScalars().getData()\n      );\n\n    const outputVolumesInfo = results.map((result) => {\n      const { data, dimensions, direction, origin, spacing } = result;\n      const volume = vtkImageData.newInstance();\n      volume.setDimensions(dimensions);\n      volume.setOrigin(origin);\n      volume.setSpacing(spacing);\n      volume.setDirection(direction);\n\n      const scalarArray = vtkDataArray.newInstance({\n        name: 'Pixels',\n        numberOfComponents: 1,\n        values: data,\n      });\n\n      volume.getPointData().setScalars(scalarArray);\n\n      volume.modified();\n\n      const voxelManager = utilities.VoxelManager.createVolumeVoxelManager(\n        dimensions,\n        data\n      );\n\n      const extent = volume.getExtent(); // e.g., [0, 176, 0, 268, 0, 337] for dimensions of [177, 269, 338]\n\n      return {\n        volume,\n        voxelManager,\n        extent,\n        scalarData: data,\n        segmentIndex: result.segmentIndex,\n      };\n    });\n\n    pointInShapeCallback(\n      targetImageData,\n      () => true, // we want to loop into all voxels\n      ({ pointIJK, pointLPS }) => {\n        // Check if the point is inside any of the reconstructed labelmaps\n        // Todo: we can optimize this by returning early if the bounding box\n        // of the point is outside the bounding box of the labelmap\n\n        try {\n          for (const volumeInfo of outputVolumesInfo) {\n            const { volume, extent, voxelManager, segmentIndex } = volumeInfo;\n\n            const index = volume.worldToIndex(pointLPS);\n\n            // check if the ijk point is inside the volume\n            if (\n              index[0] < extent[0] ||\n              index[0] > extent[1] ||\n              index[1] < extent[2] ||\n              index[1] > extent[3] ||\n              index[2] < extent[4] ||\n              index[2] > extent[5]\n            ) {\n              continue;\n            }\n\n            const roundedIndex = index.map(Math.round);\n            const value = voxelManager.getAtIJK(...roundedIndex);\n            if (value > 0) {\n              segmentationVoxelManager.setAtIJKPoint(pointIJK, segmentIndex);\n              break;\n            }\n          }\n        } catch (error) {\n          // right now there is weird error if the point is outside the volume\n        }\n      }\n    );\n\n    return segmentationVoxelManager.scalarData;\n  },\n  getSurfacesAABBs({ surfacesInfo }) {\n    const aabbs = new Map();\n    for (const { points, id } of surfacesInfo) {\n      const aabb = getAABB(points, { numDimensions: 3 });\n      aabbs.set(id, aabb);\n    }\n    return aabbs;\n  },\n  /**\n   * Cuts the surfaces into planes.\n   *\n   * @param {Object} options - The options object.\n   * @param {Array} options.planesInfo - The information about the planes.\n   * @param {Array} options.surfacesInfo - The information about the surfaces.\n   * @param {Function} progressCallback - The callback function for progress updates.\n   * @param {Function} updateCacheCallback - The callback function for updating the cache.\n   */\n  cutSurfacesIntoPlanes(\n    { planesInfo, surfacesInfo, surfacesAABB = new Map() },\n    progressCallback,\n    updateCacheCallback\n  ) {\n    const numberOfPlanes = planesInfo.length;\n    const cutter = vtkCutter.newInstance();\n\n    const plane1 = vtkPlane.newInstance();\n\n    cutter.setCutFunction(plane1);\n\n    const surfacePolyData = vtkPolyData.newInstance();\n\n    try {\n      for (const [index, planeInfo] of planesInfo.entries()) {\n        const { sliceIndex, planes } = planeInfo;\n\n        const polyDataResults = new Map();\n        for (const polyDataInfo of surfacesInfo) {\n          const { points, polys, id } = polyDataInfo;\n\n          const aabb3 =\n            surfacesAABB.get(id) || getAABB(points, { numDimensions: 3 });\n\n          if (!surfacesAABB.has(id)) {\n            surfacesAABB.set(id, aabb3);\n          }\n\n          const { minX, minY, minZ, maxX, maxY, maxZ } = aabb3;\n\n          const { origin, normal } = planes[0];\n\n          // Check if the plane intersects the AABB\n          if (\n            !isPlaneIntersectingAABB(\n              origin,\n              normal,\n              minX,\n              minY,\n              minZ,\n              maxX,\n              maxY,\n              maxZ\n            )\n          ) {\n            continue;\n          }\n\n          surfacePolyData.getPoints().setData(points, 3);\n          surfacePolyData.getPolys().setData(polys, 3);\n          surfacePolyData.modified();\n\n          cutter.setInputData(surfacePolyData);\n          plane1.setOrigin(origin);\n          plane1.setNormal(normal);\n\n          try {\n            cutter.update();\n          } catch (e) {\n            console.warn('Error during clipping', e);\n            continue;\n          }\n\n          const polyData = cutter.getOutputData();\n\n          const cutterOutput = polyData;\n          cutterOutput.buildLinks();\n          const loopExtraction = vtkContourLoopExtraction.newInstance();\n          loopExtraction.setInputData(cutterOutput);\n\n          const loopOutput = loopExtraction.getOutputData();\n          if (polyData) {\n            polyDataResults.set(id, {\n              points: loopOutput.getPoints().getData(),\n              lines: loopOutput.getLines().getData(),\n              numberOfCells: loopOutput.getLines().getNumberOfCells(),\n            });\n          }\n        }\n\n        progressCallback({ progress: (index + 1) / numberOfPlanes });\n\n        updateCacheCallback({ sliceIndex, polyDataResults });\n      }\n    } catch (e) {\n      console.warn('Error during processing', e);\n    } finally {\n      // Cleanup on completion\n      surfacesInfo = null;\n      plane1.delete();\n    }\n  },\n};\n\nexpose(polySegConverters);\n","import { m as macro } from '../../macros2.js';\nimport { b as roundVector, c as clampVector } from '../Core/Math/index.js';\nimport vtkBoundingBox from './BoundingBox.js';\nimport vtkDataSet from './DataSet.js';\nimport vtkStructuredData from './StructuredData.js';\nimport { StructuredType } from './StructuredData/Constants.js';\nimport { mat3, mat4, vec3 } from 'gl-matrix';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageData');\n  publicAPI.setExtent = function () {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return false;\n    }\n    for (var _len = arguments.length, inExtent = new Array(_len), _key = 0; _key < _len; _key++) {\n      inExtent[_key] = arguments[_key];\n    }\n    const extentArray = inExtent.length === 1 ? inExtent[0] : inExtent;\n    if (extentArray.length !== 6) {\n      return false;\n    }\n    const changeDetected = model.extent.some((item, index) => item !== extentArray[index]);\n    if (changeDetected) {\n      model.extent = extentArray.slice();\n      model.dataDescription = vtkStructuredData.getDataDescriptionFromExtent(model.extent);\n      publicAPI.modified();\n    }\n    return changeDetected;\n  };\n  publicAPI.setDimensions = function () {\n    let i;\n    let j;\n    let k;\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (arguments.length === 1) {\n      const array = arguments.length <= 0 ? undefined : arguments[0];\n      i = array[0];\n      j = array[1];\n      k = array[2];\n    } else if (arguments.length === 3) {\n      i = arguments.length <= 0 ? undefined : arguments[0];\n      j = arguments.length <= 1 ? undefined : arguments[1];\n      k = arguments.length <= 2 ? undefined : arguments[2];\n    } else {\n      vtkErrorMacro('Bad dimension specification');\n      return;\n    }\n    publicAPI.setExtent(0, i - 1, 0, j - 1, 0, k - 1);\n  };\n  publicAPI.getDimensions = () => [model.extent[1] - model.extent[0] + 1, model.extent[3] - model.extent[2] + 1, model.extent[5] - model.extent[4] + 1];\n  publicAPI.getNumberOfCells = () => {\n    const dims = publicAPI.getDimensions();\n    let nCells = 1;\n    for (let i = 0; i < 3; i++) {\n      if (dims[i] === 0) {\n        return 0;\n      }\n      if (dims[i] > 1) {\n        nCells *= dims[i] - 1;\n      }\n    }\n    return nCells;\n  };\n  publicAPI.getNumberOfPoints = () => {\n    const dims = publicAPI.getDimensions();\n    return dims[0] * dims[1] * dims[2];\n  };\n  publicAPI.getPoint = index => {\n    const dims = publicAPI.getDimensions();\n    if (dims[0] === 0 || dims[1] === 0 || dims[2] === 0) {\n      vtkErrorMacro('Requesting a point from an empty image.');\n      return null;\n    }\n    const ijk = new Float64Array(3);\n    switch (model.dataDescription) {\n      case StructuredType.EMPTY:\n        return null;\n      case StructuredType.SINGLE_POINT:\n        break;\n      case StructuredType.X_LINE:\n        ijk[0] = index;\n        break;\n      case StructuredType.Y_LINE:\n        ijk[1] = index;\n        break;\n      case StructuredType.Z_LINE:\n        ijk[2] = index;\n        break;\n      case StructuredType.XY_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0];\n        break;\n      case StructuredType.YZ_PLANE:\n        ijk[1] = index % dims[1];\n        ijk[2] = index / dims[1];\n        break;\n      case StructuredType.XZ_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[2] = index / dims[0];\n        break;\n      case StructuredType.XYZ_GRID:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0] % dims[1];\n        ijk[2] = index / (dims[0] * dims[1]);\n        break;\n      default:\n        vtkErrorMacro('Invalid dataDescription');\n        break;\n    }\n    const coords = [0, 0, 0];\n    publicAPI.indexToWorld(ijk, coords);\n    return coords;\n  };\n\n  // vtkCell *GetCell(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCell(vtkIdType cellId, vtkGenericCell *cell) VTK_OVERRIDE;\n  // void GetCellBounds(vtkIdType cellId, double bounds[6]) VTK_OVERRIDE;\n  // virtual vtkIdType FindPoint(double x, double y, double z)\n  // {\n  //   return this->vtkDataSet::FindPoint(x, y, z);\n  // }\n  // vtkIdType FindPoint(double x[3]) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkIdType cellId, double tol2,\n  //   int& subId, double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkGenericCell *gencell,\n  //   vtkIdType cellId, double tol2, int& subId,\n  //   double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkCell *FindAndGetCell(double x[3], vtkCell *cell, vtkIdType cellId,\n  //                                 double tol2, int& subId, double pcoords[3],\n  //                                 double *weights) VTK_OVERRIDE;\n  // int GetCellType(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCellPoints(vtkIdType cellId, vtkIdList *ptIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetCellPoints(cellId,ptIds,this->DataDescription,\n  //                                     this->GetDimensions());}\n  // void GetPointCells(vtkIdType ptId, vtkIdList *cellIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetPointCells(ptId,cellIds,this->GetDimensions());}\n  // void ComputeBounds() VTK_OVERRIDE;\n  // int GetMaxCellSize() VTK_OVERRIDE {return 8;}; //voxel is the largest\n\n  publicAPI.getBounds = () => publicAPI.extentToBounds(publicAPI.getSpatialExtent());\n  publicAPI.extentToBounds = ex => vtkBoundingBox.transformBounds(ex, model.indexToWorld);\n  publicAPI.getSpatialExtent = () => vtkBoundingBox.inflate([...model.extent], 0.5);\n\n  // Internal, shouldn't need to call this manually.\n  publicAPI.computeTransforms = () => {\n    mat4.fromTranslation(model.indexToWorld, model.origin);\n    model.indexToWorld[0] = model.direction[0];\n    model.indexToWorld[1] = model.direction[1];\n    model.indexToWorld[2] = model.direction[2];\n    model.indexToWorld[4] = model.direction[3];\n    model.indexToWorld[5] = model.direction[4];\n    model.indexToWorld[6] = model.direction[5];\n    model.indexToWorld[8] = model.direction[6];\n    model.indexToWorld[9] = model.direction[7];\n    model.indexToWorld[10] = model.direction[8];\n    mat4.scale(model.indexToWorld, model.indexToWorld, model.spacing);\n    mat4.invert(model.worldToIndex, model.indexToWorld);\n  };\n  publicAPI.indexToWorld = function (ain) {\n    let aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    vec3.transformMat4(aout, ain, model.indexToWorld);\n    return aout;\n  };\n  publicAPI.indexToWorldVec3 = publicAPI.indexToWorld;\n  publicAPI.worldToIndex = function (ain) {\n    let aout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    vec3.transformMat4(aout, ain, model.worldToIndex);\n    return aout;\n  };\n  publicAPI.worldToIndexVec3 = publicAPI.worldToIndex;\n  publicAPI.indexToWorldBounds = function (bin) {\n    let bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return vtkBoundingBox.transformBounds(bin, model.indexToWorld, bout);\n  };\n  publicAPI.worldToIndexBounds = function (bin) {\n    let bout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return vtkBoundingBox.transformBounds(bin, model.worldToIndex, bout);\n  };\n\n  // Make sure the transform is correct\n  publicAPI.onModified(publicAPI.computeTransforms);\n  publicAPI.computeTransforms();\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(publicAPI.getBounds());\n  publicAPI.computeHistogram = function (worldBounds) {\n    let voxelFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const bounds = [0, 0, 0, 0, 0, 0];\n    publicAPI.worldToIndexBounds(worldBounds, bounds);\n    const point1 = [0, 0, 0];\n    const point2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(bounds, point1, point2);\n    roundVector(point1, point1);\n    roundVector(point2, point2);\n    const dimensions = publicAPI.getDimensions();\n    clampVector(point1, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point1);\n    clampVector(point2, [0, 0, 0], [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1], point2);\n    const yStride = dimensions[0];\n    const zStride = dimensions[0] * dimensions[1];\n    const pixels = publicAPI.getPointData().getScalars().getData();\n    let maximum = -Infinity;\n    let minimum = Infinity;\n    let sumOfSquares = 0;\n    let isum = 0;\n    let inum = 0;\n    for (let z = point1[2]; z <= point2[2]; z++) {\n      for (let y = point1[1]; y <= point2[1]; y++) {\n        let index = point1[0] + y * yStride + z * zStride;\n        for (let x = point1[0]; x <= point2[0]; x++) {\n          if (!voxelFunc || voxelFunc([x, y, z], bounds)) {\n            const pixel = pixels[index];\n            if (pixel > maximum) maximum = pixel;\n            if (pixel < minimum) minimum = pixel;\n            sumOfSquares += pixel * pixel;\n            isum += pixel;\n            inum += 1;\n          }\n          ++index;\n        }\n      }\n    }\n    const average = inum > 0 ? isum / inum : 0;\n    const variance = inum ? Math.abs(sumOfSquares / inum - average * average) : 0;\n    const sigma = Math.sqrt(variance);\n    return {\n      minimum,\n      maximum,\n      average,\n      variance,\n      sigma,\n      count: inum\n    };\n  };\n\n  // TODO: use the unimplemented `vtkDataSetAttributes` for scalar length, that is currently also a TODO (GetNumberOfComponents).\n  // Scalar data could be tuples for color information?\n  publicAPI.computeIncrements = function (extent) {\n    let numberOfComponents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    const increments = [];\n    let incr = numberOfComponents;\n\n    // Calculate array increment offsets\n    // similar to c++ vtkImageData::ComputeIncrements\n    for (let idx = 0; idx < 3; ++idx) {\n      increments[idx] = incr;\n      incr *= extent[idx * 2 + 1] - extent[idx * 2] + 1;\n    }\n    return increments;\n  };\n\n  /**\n   * @param {Number[]} index the localized `[i,j,k]` pixel array position. Float values will be rounded.\n   * @return {Number} the corresponding flattened index in the scalar array\n   */\n  publicAPI.computeOffsetIndex = _ref => {\n    let [i, j, k] = _ref;\n    const extent = publicAPI.getExtent();\n    const numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\n    const increments = publicAPI.computeIncrements(extent, numberOfComponents);\n    // Use the array increments to find the pixel index\n    // similar to c++ vtkImageData::GetArrayPointer\n    // Math.floor to catch \"practically 0\" e^-15 scenarios.\n    return Math.floor((Math.round(i) - extent[0]) * increments[0] + (Math.round(j) - extent[2]) * increments[1] + (Math.round(k) - extent[4]) * increments[2]);\n  };\n\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @return {Number|NaN} the corresponding pixel's index in the scalar array\n   */\n  publicAPI.getOffsetIndexFromWorld = xyz => {\n    const extent = publicAPI.getExtent();\n    const index = publicAPI.worldToIndex(xyz);\n\n    // Confirm indexed i,j,k coords are within the bounds of the volume\n    for (let idx = 0; idx < 3; ++idx) {\n      if (index[idx] < extent[idx * 2] || index[idx] > extent[idx * 2 + 1]) {\n        vtkErrorMacro(`GetScalarPointer: Pixel ${index} is not in memory. Current extent = ${extent}`);\n        return NaN;\n      }\n    }\n\n    // Assumed the index here is within 0 <-> scalarData.length, but doesn't hurt to check upstream\n    return publicAPI.computeOffsetIndex(index);\n  };\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @param {Number?} comp the scalar component index for multi-component scalars\n   * @return {Number|NaN} the corresponding pixel's scalar value\n   */\n  publicAPI.getScalarValueFromWorld = function (xyz) {\n    let comp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const numberOfComponents = publicAPI.getPointData().getScalars().getNumberOfComponents();\n    if (comp < 0 || comp >= numberOfComponents) {\n      vtkErrorMacro(`GetScalarPointer: Scalar Component ${comp} is not within bounds. Current Scalar numberOfComponents: ${numberOfComponents}`);\n      return NaN;\n    }\n    const offsetIndex = publicAPI.getOffsetIndexFromWorld(xyz);\n    if (Number.isNaN(offsetIndex)) {\n      // VTK Error Macro will have been tripped already, no need to do it again,\n      return offsetIndex;\n    }\n    return publicAPI.getPointData().getScalars().getComponent(offsetIndex, comp);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  direction: null,\n  // a mat3\n  indexToWorld: null,\n  // a mat4\n  worldToIndex: null,\n  // a mat4\n  spacing: [1.0, 1.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n  extent: [0, -1, 0, -1, 0, -1],\n  dataDescription: StructuredType.EMPTY\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  if (!model.direction) {\n    model.direction = mat3.identity(new Float64Array(9));\n  } else if (Array.isArray(model.direction)) {\n    model.direction = new Float64Array(model.direction.slice(0, 9));\n  }\n  model.indexToWorld = new Float64Array(16);\n  model.worldToIndex = new Float64Array(16);\n\n  // Set/Get methods\n  macro.get(publicAPI, model, ['indexToWorld', 'worldToIndex']);\n  macro.setGetArray(publicAPI, model, ['origin', 'spacing'], 3);\n  macro.setGetArray(publicAPI, model, ['direction'], 9);\n  macro.getArray(publicAPI, model, ['extent'], 6);\n\n  // Object specific methods\n  vtkImageData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageData');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageData$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageData$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkPiecewiseFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPiecewiseFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPiecewiseFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  // Return the type of function stored in object:\n  // Function Types:\n  //    0 : Constant        (No change in slope between end points)\n  //    1 : NonDecreasing   (Always increasing or zero slope)\n  //    2 : NonIncreasing   (Always decreasing or zero slope)\n  //    3 : Varied          (Contains both decreasing and increasing slopes)\n  //    4 : Unknown         (Error condition)\n  //\n  publicAPI.getType = () => {\n    let value;\n    let prevValue = 0.0;\n    let functionType = 0;\n    if (model.nodes.length > 0) {\n      prevValue = model.nodes[0].y;\n    }\n    for (let i = 1; i < model.nodes.length; i++) {\n      value = model.nodes[i].y;\n\n      // Do not change the function type if equal\n      if (value !== prevValue) {\n        if (value > prevValue) {\n          switch (functionType) {\n            case 0:\n            case 1:\n              // NonDecreasing\n              functionType = 1;\n              break;\n            case 2:\n            default:\n              // Varied\n              functionType = 3;\n              break;\n          }\n        } else {\n          // value < prev_value\n          switch (functionType) {\n            case 0:\n            case 2:\n              // NonIncreasing\n              functionType = 2;\n              break;\n            case 1:\n            default:\n              // Varied\n              functionType = 3;\n              break;\n          }\n        }\n      }\n      prevValue = value;\n\n      // Exit loop if we find a Varied function\n      if (functionType === 3) {\n        break;\n      }\n    }\n    switch (functionType) {\n      case 0:\n        return 'Constant';\n      case 1:\n        return 'NonDecreasing';\n      case 2:\n        return 'NonIncreasing';\n      case 3:\n      default:\n        return 'Varied';\n    }\n  };\n\n  // Since we no longer store the data in an array, we must\n  // copy out of the vector into an array. No modified check -\n  // could be added if performance is a problem\n  publicAPI.getDataPointer = () => {\n    const size = model.nodes.length;\n    model.function = null;\n    if (size > 0) {\n      model.function = [];\n      for (let i = 0; i < size; i++) {\n        model.function[2 * i] = model.nodes[i].x;\n        model.function[2 * i + 1] = model.nodes[i].y;\n      }\n    }\n    return model.function;\n  };\n\n  // Returns the first point location which starts a non-zero segment of the\n  // function. Note that the value at this point may be zero.\n  publicAPI.getFirstNonZeroValue = () => {\n    // Check if no points specified\n    if (model.nodes.length === 0) {\n      return 0;\n    }\n    let allZero = 1;\n    let x = 0.0;\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].y !== 0.0) {\n        allZero = 0;\n        break;\n      }\n    }\n\n    // If every specified point has a zero value then return\n    // a large value\n    if (allZero) {\n      x = Number.MAX_VALUE;\n    } else if (i > 0) {\n      // A point was found with a non-zero value\n      // Return the value of the point that precedes this one\n      x = model.nodes[i - 1].x;\n    } else if (model.clamping) {\n      // If this is the first point in the function, return its\n      // value is clamping is off, otherwise VTK_DOUBLE_MIN if\n      // clamping is on.\n      x = -Number.MAX_VALUE;\n    } else {\n      x = model.nodes[0].x;\n    }\n    return x;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    const size = model.nodes.length;\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].y;\n    val[2] = model.nodes[index].midpoint;\n    val[3] = model.nodes[index].sharpness;\n    return 1;\n  };\n\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    const size = model.nodes.length;\n    if (index < 0 || index >= size) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].y = val[1];\n    model.nodes[index].midpoint = val[2];\n    model.nodes[index].sharpness = val[3];\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n    return 1;\n  };\n\n  // Adds a point to the function. If a duplicate point is inserted\n  // then the function value at that location is set to the new value.\n  // This is the legacy version that assumes midpoint = 0.5 and\n  // sharpness = 0.0\n  publicAPI.addPoint = (x, y) => publicAPI.addPointLong(x, y, 0.5, 0.0);\n\n  // Adds a point to the function and returns the array index of the point.\n  publicAPI.addPointLong = (x, y, midpoint, sharpness) => {\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = {\n      x,\n      y,\n      midpoint,\n      sharpness\n    };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // Now find this node so we can return the index\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n    return -1;\n  };\n  publicAPI.setNodes = nodes => {\n    if (model.nodes !== nodes) {\n      model.nodes = nodes;\n      publicAPI.sortAndUpdateRange();\n    }\n  };\n\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    model.nodes.sort((a, b) => a.x - b.x);\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = model.range.slice();\n    const size = model.nodes.length;\n    if (size) {\n      model.range[0] = model.nodes[0].x;\n      model.range[1] = model.nodes[size - 1].x;\n    } else {\n      model.range[0] = 0;\n      model.range[1] = 0;\n    }\n    // If the rage is the same, then no need to call Modified()\n    if (oldRange[0] === model.range[0] && oldRange[1] === model.range[1]) {\n      return false;\n    }\n    publicAPI.modified();\n    return true;\n  };\n\n  // Removes a point from the function. If no point is found then function\n  // remains the same.\n  publicAPI.removePoint = x => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i;\n    for (i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n    const retVal = i;\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n    return retVal;\n  };\n\n  // Removes all points from the function.\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  // Add in end points of line and remove any points between them\n  // Legacy method with no way to specify midpoint and sharpness\n  publicAPI.addSegment = (x1, y1, x2, y2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addPoint(x1, y1, 0.5, 0.0);\n    publicAPI.addPoint(x2, y2, 0.5, 0.0);\n  };\n\n  // Return the value of the function at a position\n  publicAPI.getValue = x => {\n    const table = [];\n    publicAPI.getTable(x, x, 1, table);\n    return table[0];\n  };\n\n  // Remove all points outside the range, and make sure a point\n  // exists at each end of the range. Used as a convenience method\n  // for transfer function editors\n  publicAPI.adjustRange = range => {\n    if (range.length < 2) {\n      return 0;\n    }\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    if (functionRange[0] < range[0]) {\n      publicAPI.addPoint(range[0], publicAPI.getValue(range[0]));\n    } else {\n      publicAPI.addPoint(range[0], publicAPI.getValue(functionRange[0]));\n    }\n    if (functionRange[1] > range[1]) {\n      publicAPI.addPoint(range[1], publicAPI.getValue(range[1]));\n    } else {\n      publicAPI.addPoint(range[1], publicAPI.getValue(functionRange[1]));\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n    publicAPI.sortAndUpdateRange();\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    const size = model.nodes.length;\n    if (size < 2) {\n      return -1.0;\n    }\n    let distance = model.nodes[1].x - model.nodes[0].x;\n    for (let i = 0; i < size - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n    return distance;\n  };\n\n  // Returns a table of function values evaluated at regular intervals\n  /* eslint-disable prefer-destructuring */\n  /* eslint-disable no-continue */\n  publicAPI.getTable = function (xStart, xEnd, size, table) {\n    let stride = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    let i;\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastValue = 0.0;\n    if (numNodes !== 0) {\n      lastValue = model.nodes[numNodes - 1].y;\n    }\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    let y1 = 0.0;\n    let y2 = 0.0;\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n\n    // For each table entry\n    for (i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = stride * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        x = xStart + i / (size - 1.0) * (xEnd - xStart);\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          y1 = model.nodes[idx - 1].y;\n          y2 = model.nodes[idx].y;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at the end? If so, just use the last value\n      if (idx >= numNodes) {\n        table[tidx] = model.clamping ? lastValue : 0.0;\n      } else if (idx === 0) {\n        // Are we before the first node? If so, duplicate this nodes values\n        table[tidx] = model.clamping ? model.nodes[0].y : 0.0;\n      } else {\n        // Otherwise, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = (x - x1) / (x2 - x1);\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = 0.5 * s / midpoint;\n        } else {\n          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = y1;\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = y2;\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          table[tidx] = (1 - s) * y1 + s * y2;\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2) ** (1.0 + 10 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n        const h1 = 2 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n\n        // Use one slope for both end points\n        const slope = y2 - y1;\n        const t = (1.0 - sharpness) * slope;\n\n        // Compute the value\n        table[tidx] = h1 * y1 + h2 * y2 + h3 * t + h4 * t;\n\n        // Final error check to make sure we don't go outside\n        // the Y range\n        const min = y1 < y2 ? y1 : y2;\n        const max = y1 > y2 ? y1 : y2;\n        table[tidx] = table[tidx] < min ? min : table[tidx];\n        table[tidx] = table[tidx] > max ? max : table[tidx];\n      }\n    }\n  };\n}\n/* eslint-enable prefer-destructuring */\n/* eslint-enable no-continue */\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // model.function = NULL;\n  range: [0, 0],\n  clamping: true,\n  allowDuplicateScalars: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  macro.obj(publicAPI, model);\n\n  // Internal objects initialization\n  model.nodes = [];\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['allowDuplicateScalars', 'clamping']);\n  macro.setArray(publicAPI, model, ['range'], 2);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['range']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkPiecewiseFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPiecewiseFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPiecewiseFunction$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkPiecewiseFunction$1 as default, extend, newInstance };\n","import { s as subtract, d as dot, j as cross, k as add } from '../Core/Math/index.js';\nimport { m as macro } from '../../macros2.js';\n\nconst PLANE_TOLERANCE = 1.0e-6;\nconst COINCIDE = 'coincide';\nconst DISJOINT = 'disjoint';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction evaluate(normal, origin, x) {\n  return normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n}\nfunction distanceToPlane(x, origin, normal) {\n  const distance = normal[0] * (x[0] - origin[0]) + normal[1] * (x[1] - origin[1]) + normal[2] * (x[2] - origin[2]);\n  return Math.abs(distance);\n}\nfunction projectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  subtract(x, origin, xo);\n  const t = dot(normal, xo);\n  xproj[0] = x[0] - t * normal[0];\n  xproj[1] = x[1] - t * normal[1];\n  xproj[2] = x[2] - t * normal[2];\n}\nfunction projectVector(v, normal, vproj) {\n  const t = dot(v, normal);\n  let n2 = dot(normal, normal);\n  if (n2 === 0) {\n    n2 = 1.0;\n  }\n  vproj[0] = v[0] - t * normal[0] / n2;\n  vproj[1] = v[1] - t * normal[1] / n2;\n  vproj[2] = v[2] - t * normal[2] / n2;\n  return vproj;\n}\nfunction generalizedProjectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  subtract(x, origin, xo);\n  const t = dot(normal, xo);\n  const n2 = dot(normal, normal);\n  if (n2 !== 0) {\n    xproj[0] = x[0] - t * normal[0] / n2;\n    xproj[1] = x[1] - t * normal[1] / n2;\n    xproj[2] = x[2] - t * normal[2] / n2;\n  } else {\n    xproj[0] = x[0];\n    xproj[1] = x[1];\n    xproj[2] = x[2];\n  }\n}\nfunction intersectWithLine(p1, p2, origin, normal) {\n  const outObj = {\n    intersection: false,\n    betweenPoints: false,\n    t: Number.MAX_VALUE,\n    x: []\n  };\n  const p21 = [];\n  const p1Origin = [];\n  // Compute line vector\n  subtract(p2, p1, p21);\n  subtract(origin, p1, p1Origin);\n\n  // Compute denominator.  If ~0, line and plane are parallel.\n  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);\n  const num = dot(normal, p1Origin);\n  const den = dot(normal, p21);\n\n  // If denominator with respect to numerator is \"zero\", then the line and\n  // plane are considered parallel.\n  let fabsden;\n  let fabstolerance;\n\n  // Trying to avoid an expensive call to fabs()\n  if (den < 0.0) {\n    fabsden = -den;\n  } else {\n    fabsden = den;\n  }\n  if (num < 0.0) {\n    fabstolerance = -num * PLANE_TOLERANCE;\n  } else {\n    fabstolerance = num * PLANE_TOLERANCE;\n  }\n  if (fabsden <= fabstolerance) {\n    return outObj;\n  }\n\n  // Where on the line between p1 and p2 is the intersection\n  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2\n  outObj.t = num / den;\n  outObj.x[0] = p1[0] + outObj.t * p21[0];\n  outObj.x[1] = p1[1] + outObj.t * p21[1];\n  outObj.x[2] = p1[2] + outObj.t * p21[2];\n  outObj.intersection = true;\n  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;\n  return outObj;\n}\nfunction intersectWithPlane(plane1Origin, plane1Normal, plane2Origin, plane2Normal) {\n  const outObj = {\n    intersection: false,\n    l0: [],\n    l1: [],\n    error: null\n  };\n  const cross$1 = [];\n  cross(plane1Normal, plane2Normal, cross$1);\n  const absCross = cross$1.map(n => Math.abs(n));\n\n  // test if the two planes are parallel\n  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {\n    // test if disjoint or coincide\n    const v = [];\n    subtract(plane1Origin, plane2Origin, v);\n    if (dot(plane1Normal, v) === 0) {\n      outObj.error = COINCIDE;\n    } else {\n      outObj.error = DISJOINT;\n    }\n    return outObj;\n  }\n\n  // Plane1 and Plane2 intersect in a line\n  // first determine max abs coordinate of the cross product\n  let maxc;\n  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {\n    maxc = 'x';\n  } else if (absCross[1] > absCross[2]) {\n    maxc = 'y';\n  } else {\n    maxc = 'z';\n  }\n\n  // To get a point on the intersect line, zero the max coord, and solve for the other two\n  const iP = []; // intersectionPoint\n  // the constants in the 2 plane equations\n  const d1 = -dot(plane1Normal, plane1Origin);\n  const d2 = -dot(plane2Normal, plane2Origin);\n\n  // eslint-disable-next-line default-case\n  switch (maxc) {\n    case 'x':\n      // intersect with x=0\n      iP[0] = 0;\n      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross$1[0];\n      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross$1[0];\n      break;\n    case 'y':\n      // intersect with y=0\n      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross$1[1];\n      iP[1] = 0;\n      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross$1[1];\n      break;\n    case 'z':\n      // intersect with z=0\n      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross$1[2];\n      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross$1[2];\n      iP[2] = 0;\n      break;\n  }\n  outObj.l0 = iP;\n  add(iP, cross$1, outObj.l1);\n  outObj.intersection = true;\n  return outObj;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst STATIC = {\n  evaluate,\n  distanceToPlane,\n  projectPoint,\n  projectVector,\n  generalizedProjectPoint,\n  intersectWithLine,\n  intersectWithPlane,\n  DISJOINT,\n  COINCIDE\n};\n\n// ----------------------------------------------------------------------------\n// vtkPlane methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPlane(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlane');\n  publicAPI.distanceToPlane = x => distanceToPlane(x, model.origin, model.normal);\n  publicAPI.projectPoint = (x, xproj) => {\n    projectPoint(x, model.origin, model.normal, xproj);\n  };\n  publicAPI.projectVector = (v, vproj) => projectVector(v, model.normal, vproj);\n  publicAPI.push = distance => {\n    if (distance === 0.0) {\n      return;\n    }\n    for (let i = 0; i < 3; i++) {\n      model.origin[i] += distance * model.normal[i];\n    }\n  };\n  publicAPI.generalizedProjectPoint = (x, xproj) => {\n    generalizedProjectPoint(x, model.origin, model.normal, xproj);\n  };\n  publicAPI.evaluateFunction = (x, y, z) => {\n    if (!Array.isArray(x)) {\n      return model.normal[0] * (x - model.origin[0]) + model.normal[1] * (y - model.origin[1]) + model.normal[2] * (z - model.origin[2]);\n    }\n    return model.normal[0] * (x[0] - model.origin[0]) + model.normal[1] * (x[1] - model.origin[1]) + model.normal[2] * (x[2] - model.origin[2]);\n  };\n  publicAPI.evaluateGradient = xyz => {\n    const retVal = [model.normal[0], model.normal[1], model.normal[2]];\n    return retVal;\n  };\n  publicAPI.intersectWithLine = (p1, p2) => intersectWithLine(p1, p2, model.origin, model.normal);\n  publicAPI.intersectWithPlane = (planeOrigin, planeNormal) => intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  normal: [0.0, 0.0, 1.0],\n  origin: [0.0, 0.0, 0.0]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGetArray(publicAPI, model, ['normal', 'origin'], 3);\n  vtkPlane(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkPlane');\n\n// ----------------------------------------------------------------------------\n\nvar vtkPlane$1 = {\n  newInstance,\n  extend,\n  ...STATIC\n};\n\nexport { STATIC, vtkPlane$1 as default, extend, newInstance, vtkPlane };\n","import { m as macro } from '../../macros2.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkEdgeLocator from '../../Common/DataModel/EdgeLocator.js';\nimport vtkCaseTable from './ImageMarchingSquares/caseTable.js';\n\nconst {\n  vtkErrorMacro,\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageMarchingSquares methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageMarchingSquares(publicAPI, model) {\n  /**\n   * Get the X,Y kernels based on the set slicing mode.\n   * @returns {[number, number]}\n   */\n  function getKernels() {\n    let kernelX = 0; // default K slicing mode\n    let kernelY = 1;\n    if (model.slicingMode === 1) {\n      kernelX = 0;\n      kernelY = 2;\n    } else if (model.slicingMode === 0) {\n      kernelX = 1;\n      kernelY = 2;\n    }\n    return [kernelX, kernelY];\n  }\n\n  // Set our className\n  model.classHierarchy.push('vtkImageMarchingSquares');\n\n  /**\n   * Get the list of contour values.\n   * @returns {number[]}\n   */\n  publicAPI.getContourValues = () => model.contourValues;\n\n  /**\n   * Set the list contour values.\n   * @param {number[]} cValues\n   */\n  publicAPI.setContourValues = cValues => {\n    model.contourValues = cValues;\n    publicAPI.modified();\n  };\n  const ids = [];\n  const pixelScalars = [];\n  const pixelPts = [];\n  const edgeLocator = vtkEdgeLocator.newInstance();\n\n  /**\n   * Retrieve scalars and pixel coordinates.\n   * @param {Vector3} ijk origin of the pixel\n   * @param {Vector3} dims dimensions of the image\n   * @param {TypedArray} scalars list of scalar values\n   * @param {Vector3} increments IJK slice increments\n   * @param {number} kernelX index of the X element\n   * @param {number} kernelY index of the Y element\n   */\n  publicAPI.getPixelScalars = (ijk, dims, scalars, increments, kernelX, kernelY) => {\n    const [i, j, k] = ijk;\n\n    // First get the indices for the pixel\n    ids[0] = k * dims[1] * dims[0] + j * dims[0] + i; // i, j, k\n    ids[1] = ids[0] + increments[kernelX]; // i+1, j, k\n    ids[2] = ids[0] + increments[kernelY]; // i, j+1, k\n    ids[3] = ids[2] + increments[kernelX]; // i+1, j+1, k\n\n    // Now retrieve the scalars\n    for (let ii = 0; ii < 4; ++ii) {\n      pixelScalars[ii] = scalars[ids[ii]];\n    }\n  };\n\n  /**\n   * Retrieve pixel coordinates.\n   * @param {Vector3} ijk origin of the pixel\n   * @param {Vector3} origin origin of the image\n   * @param {Vector3} spacing spacing of the image\n   * @param {number} kernelX index of the X element\n   * @param {number} kernelY index of the Y element\n   */\n  publicAPI.getPixelPoints = (ijk, origin, spacing, kernelX, kernelY) => {\n    const i = ijk[kernelX];\n    const j = ijk[kernelY];\n\n    // (i,i+1),(j,j+1),(k,k+1) - i varies fastest; then j; then k\n    pixelPts[0] = origin[kernelX] + i * spacing[kernelX]; // 0\n    pixelPts[1] = origin[kernelY] + j * spacing[kernelY];\n    pixelPts[2] = pixelPts[0] + spacing[kernelX]; // 1\n    pixelPts[3] = pixelPts[1];\n    pixelPts[4] = pixelPts[0]; // 2\n    pixelPts[5] = pixelPts[1] + spacing[kernelY];\n    pixelPts[6] = pixelPts[2]; // 3\n    pixelPts[7] = pixelPts[5];\n  };\n\n  /**\n   * Produce points and lines for the polydata.\n   * @param {number[]} cVal list of contour values\n   * @param {Vector3} ijk origin of the pixel\n   * @param {Vector3} dims dimensions of the image\n   * @param {Vector3} origin origin of the image\n   * @param {Vector3} spacing sapcing of the image\n   * @param {TypedArray} scalars list of scalar values\n   * @param {number[]} points list of points\n   * @param {number[]} lines list of lines\n   * @param {Vector3} increments IJK slice increments\n   * @param {number} kernelX index of the X element\n   * @param {number} kernelY index of the Y element\n   */\n  publicAPI.produceLines = (cVal, ijk, dims, origin, spacing, scalars, points, lines, increments, kernelX, kernelY) => {\n    const k = ijk[model.slicingMode];\n    const CASE_MASK = [1, 2, 8, 4]; // case table is actually for quad\n    const xyz = [];\n    let pId;\n    publicAPI.getPixelScalars(ijk, dims, scalars, increments, kernelX, kernelY);\n    let index = 0;\n    for (let idx = 0; idx < 4; idx++) {\n      if (pixelScalars[idx] >= cVal) {\n        index |= CASE_MASK[idx]; // eslint-disable-line no-bitwise\n      }\n    }\n\n    const pixelLines = vtkCaseTable.getCase(index);\n    if (pixelLines[0] < 0) {\n      return; // don't get the pixel coordinates, nothing to do\n    }\n\n    publicAPI.getPixelPoints(ijk, origin, spacing, kernelX, kernelY);\n    const z = origin[model.slicingMode] + k * spacing[model.slicingMode];\n    for (let idx = 0; pixelLines[idx] >= 0; idx += 2) {\n      lines.push(2);\n      for (let eid = 0; eid < 2; eid++) {\n        const edgeVerts = vtkCaseTable.getEdge(pixelLines[idx + eid]);\n        pId = undefined;\n        if (model.mergePoints) {\n          pId = edgeLocator.isInsertedEdge(ids[edgeVerts[0]], ids[edgeVerts[1]])?.value;\n        }\n        if (pId === undefined) {\n          const t = (cVal - pixelScalars[edgeVerts[0]]) / (pixelScalars[edgeVerts[1]] - pixelScalars[edgeVerts[0]]);\n          const x0 = pixelPts.slice(edgeVerts[0] * 2, (edgeVerts[0] + 1) * 2);\n          const x1 = pixelPts.slice(edgeVerts[1] * 2, (edgeVerts[1] + 1) * 2);\n          xyz[kernelX] = x0[0] + t * (x1[0] - x0[0]);\n          xyz[kernelY] = x0[1] + t * (x1[1] - x0[1]);\n          xyz[model.slicingMode] = z;\n          pId = points.length / 3;\n          points.push(xyz[0], xyz[1], xyz[2]);\n          if (model.mergePoints) {\n            edgeLocator.insertEdge(ids[edgeVerts[0]], ids[edgeVerts[1]], pId);\n          }\n        }\n        lines.push(pId);\n      }\n    }\n  };\n  publicAPI.requestData = (inData, outData) => {\n    // implement requestData\n    const input = inData[0];\n    if (!input) {\n      vtkErrorMacro('Invalid or missing input');\n      return;\n    }\n    if (model.slicingMode == null || model.slicingMode < 0 || model.slicingMode > 2) {\n      vtkErrorMacro('Invalid or missing slicing mode');\n      return;\n    }\n    console.time('msquares');\n\n    // Retrieve output and volume data\n    const origin = input.getOrigin();\n    const spacing = input.getSpacing();\n    const dims = input.getDimensions();\n    const extent = input.getExtent();\n    const increments = input.computeIncrements(extent);\n    const scalars = input.getPointData().getScalars().getData();\n    const [kernelX, kernelY] = getKernels();\n\n    // Points - dynamic array\n    const points = [];\n\n    // Cells - dynamic array\n    const lines = [];\n\n    // Ensure slice is valid\n    let k = Math.round(model.slice);\n    if (k >= dims[model.slicingMode]) {\n      k = 0;\n    }\n\n    // Loop over all contour values, and then pixels, determine case and process\n    const ijk = [0, 0, 0];\n    ijk[model.slicingMode] = k;\n    for (let cv = 0; cv < model.contourValues.length; ++cv) {\n      for (let j = 0; j < dims[kernelY] - 1; ++j) {\n        ijk[kernelY] = j;\n        for (let i = 0; i < dims[kernelX] - 1; ++i) {\n          ijk[kernelX] = i;\n          publicAPI.produceLines(model.contourValues[cv], ijk, dims, origin, spacing, scalars, points, lines, increments, kernelX, kernelY);\n        }\n      }\n      edgeLocator.initialize();\n    }\n\n    // Update output\n    const polydata = vtkPolyData.newInstance();\n    polydata.getPoints().setData(new Float32Array(points), 3);\n    polydata.getLines().setData(new Uint32Array(lines));\n    outData[0] = polydata;\n    vtkDebugMacro('Produced output');\n    console.timeEnd('msquares');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  contourValues: [],\n  slicingMode: 2,\n  slice: 0,\n  mergePoints: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Make this a VTK object\n  macro.obj(publicAPI, model);\n\n  // Also make it an algorithm with one input and one output\n  macro.algo(publicAPI, model, 1, 1);\n  macro.setGet(publicAPI, model, ['slicingMode', 'slice', 'mergePoints']);\n\n  // Object specific methods\n  macro.algo(publicAPI, model, 1, 1);\n  vtkImageMarchingSquares(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageMarchingSquares');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageMarchingSquares$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageMarchingSquares$1 as default, extend, newInstance };\n","import { mat4, vec4, vec3, quat } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport { r as radiansFromDegrees, k as add, j as cross } from '../../Common/Core/Math/index.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n/* eslint-disable new-cap */\n\n/*\n * Convenience function to access elements of a gl-matrix.  If it turns\n * out I have rows and columns swapped everywhere, then I'll just change\n * the order of 'row' and 'col' parameters in this function\n */\n// function getMatrixElement(matrix, row, col) {\n//   const idx = (row * 4) + col;\n//   return matrix[idx];\n// }\n\n// ----------------------------------------------------------------------------\n// vtkCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCamera');\n\n  // Set up private variables and methods\n  const origin = new Float64Array(3);\n  const dopbasis = new Float64Array([0.0, 0.0, -1.0]);\n  const upbasis = new Float64Array([0.0, 1.0, 0.0]);\n  const tmpMatrix = mat4.identity(new Float64Array(16));\n  const tmpMatrix2 = mat4.identity(new Float64Array(16));\n  const tmpvec1 = new Float64Array(3);\n  const tmpvec2 = new Float64Array(3);\n  const tmpvec3 = new Float64Array(3);\n  const rotateMatrix = mat4.identity(new Float64Array(16));\n  const trans = mat4.identity(new Float64Array(16));\n  const newPosition = new Float64Array(3);\n  const newFocalPoint = new Float64Array(3);\n\n  // Internal Functions that don't need to be public\n  function computeViewPlaneNormal() {\n    // VPN is -DOP\n    model.viewPlaneNormal[0] = -model.directionOfProjection[0];\n    model.viewPlaneNormal[1] = -model.directionOfProjection[1];\n    model.viewPlaneNormal[2] = -model.directionOfProjection[2];\n  }\n  publicAPI.orthogonalizeViewUp = () => {\n    const vt = publicAPI.getViewMatrix();\n    model.viewUp[0] = vt[4];\n    model.viewUp[1] = vt[5];\n    model.viewUp[2] = vt[6];\n    publicAPI.modified();\n  };\n  publicAPI.setPosition = (x, y, z) => {\n    if (x === model.position[0] && y === model.position[1] && z === model.position[2]) {\n      return;\n    }\n    model.position[0] = x;\n    model.position[1] = y;\n    model.position[2] = z;\n\n    // recompute the focal distance\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.setFocalPoint = (x, y, z) => {\n    if (x === model.focalPoint[0] && y === model.focalPoint[1] && z === model.focalPoint[2]) {\n      return;\n    }\n    model.focalPoint[0] = x;\n    model.focalPoint[1] = y;\n    model.focalPoint[2] = z;\n\n    // recompute the focal distance\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.setDistance = d => {\n    if (model.distance === d) {\n      return;\n    }\n    model.distance = d;\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n    }\n\n    // we want to keep the camera pointing in the same direction\n    const vec = model.directionOfProjection;\n\n    // recalculate FocalPoint\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // This method must be called when the focal point or camera position changes\n  publicAPI.computeDistance = () => {\n    const dx = model.focalPoint[0] - model.position[0];\n    const dy = model.focalPoint[1] - model.position[1];\n    const dz = model.focalPoint[2] - model.position[2];\n    model.distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n      const vec = model.directionOfProjection;\n\n      // recalculate FocalPoint\n      model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n      model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n      model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    }\n    model.directionOfProjection[0] = dx / model.distance;\n    model.directionOfProjection[1] = dy / model.distance;\n    model.directionOfProjection[2] = dz / model.distance;\n    computeViewPlaneNormal();\n  };\n\n  //----------------------------------------------------------------------------\n  // Move the position of the camera along the view plane normal. Moving\n  // towards the focal point (e.g., > 1) is a dolly-in, moving away\n  // from the focal point (e.g., < 1) is a dolly-out.\n  publicAPI.dolly = amount => {\n    if (amount <= 0.0) {\n      return;\n    }\n\n    // dolly moves the camera towards the focus\n    const d = model.distance / amount;\n    publicAPI.setPosition(model.focalPoint[0] - d * model.directionOfProjection[0], model.focalPoint[1] - d * model.directionOfProjection[1], model.focalPoint[2] - d * model.directionOfProjection[2]);\n  };\n  publicAPI.roll = angle => {\n    const eye = model.position;\n    const at = model.focalPoint;\n    const up = model.viewUp;\n    const viewUpVec4 = new Float64Array([up[0], up[1], up[2], 0.0]);\n    mat4.identity(rotateMatrix);\n    const viewDir = new Float64Array([at[0] - eye[0], at[1] - eye[1], at[2] - eye[2]]);\n    mat4.rotate(rotateMatrix, rotateMatrix, radiansFromDegrees(angle), viewDir);\n    vec4.transformMat4(viewUpVec4, viewUpVec4, rotateMatrix);\n    model.viewUp[0] = viewUpVec4[0];\n    model.viewUp[1] = viewUpVec4[1];\n    model.viewUp[2] = viewUpVec4[2];\n    publicAPI.modified();\n  };\n  publicAPI.azimuth = angle => {\n    const fp = model.focalPoint;\n    mat4.identity(trans);\n\n    // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n  publicAPI.yaw = angle => {\n    const position = model.position;\n    mat4.identity(trans);\n\n    // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint(newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]);\n  };\n  publicAPI.elevation = angle => {\n    const fp = model.focalPoint;\n\n    // get the eye / camera position from the viewMatrix\n    const vt = publicAPI.getViewMatrix();\n    const axis = [-vt[0], -vt[1], -vt[2]];\n    mat4.identity(trans);\n\n    // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]);\n\n    // apply the transform to the position\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n  publicAPI.pitch = angle => {\n    const position = model.position;\n    const vt = publicAPI.getViewMatrix();\n    const axis = [vt[0], vt[1], vt[2]];\n    mat4.identity(trans);\n\n    // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]);\n\n    // apply the transform to the focal point\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint(...newFocalPoint);\n  };\n  publicAPI.zoom = factor => {\n    if (factor <= 0) {\n      return;\n    }\n    if (model.parallelProjection) {\n      model.parallelScale /= factor;\n    } else {\n      model.viewAngle /= factor;\n    }\n    publicAPI.modified();\n  };\n  publicAPI.translate = (x, y, z) => {\n    const offset = [x, y, z];\n    add(model.position, offset, model.position);\n    add(model.focalPoint, offset, model.focalPoint);\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n  publicAPI.applyTransform = transformMat4 => {\n    const vuOld = [...model.viewUp, 1.0];\n    const posNew = [];\n    const fpNew = [];\n    const vuNew = [];\n    vuOld[0] += model.position[0];\n    vuOld[1] += model.position[1];\n    vuOld[2] += model.position[2];\n    vec4.transformMat4(posNew, [...model.position, 1.0], transformMat4);\n    vec4.transformMat4(fpNew, [...model.focalPoint, 1.0], transformMat4);\n    vec4.transformMat4(vuNew, vuOld, transformMat4);\n    vuNew[0] -= posNew[0];\n    vuNew[1] -= posNew[1];\n    vuNew[2] -= posNew[2];\n    publicAPI.setPosition(...posNew.slice(0, 3));\n    publicAPI.setFocalPoint(...fpNew.slice(0, 3));\n    publicAPI.setViewUp(...vuNew.slice(0, 3));\n  };\n  publicAPI.getThickness = () => model.clippingRange[1] - model.clippingRange[0];\n  publicAPI.setThickness = thickness => {\n    let t = thickness;\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n    publicAPI.setClippingRange(model.clippingRange[0], model.clippingRange[0] + t);\n  };\n  publicAPI.setThicknessFromFocalPoint = thickness => {\n    let t = thickness;\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n    publicAPI.setClippingRange(model.distance - t / 2, model.distance + t / 2);\n  };\n\n  // Unimplemented functions\n  publicAPI.setRoll = angle => {}; // dependency on GetOrientation() and a model.ViewTransform object, see https://github.com/Kitware/VTK/blob/master/Common/Transforms/vtkTransform.cxx and https://vtk.org/doc/nightly/html/classvtkTransform.html\n  publicAPI.getRoll = () => {};\n  publicAPI.setObliqueAngles = (alpha, beta) => {};\n  publicAPI.getOrientation = () => {};\n  publicAPI.getOrientationWXYZ = () => {};\n  publicAPI.getFrustumPlanes = aspect => {\n    // Return array of 24 params (4 params for each of 6 plane equations)\n  };\n  publicAPI.getCameraLightTransformMatrix = matrix => {\n    mat4.copy(matrix, model.cameraLightTransform);\n    return matrix;\n  };\n  publicAPI.computeCameraLightTransform = () => {\n    // not sure if this is the correct transformation, based on the same funciton in VTK\n    mat4.copy(tmpMatrix, publicAPI.getViewMatrix());\n    mat4.invert(tmpMatrix, tmpMatrix);\n    mat4.fromScaling(tmpMatrix2, [model.distance, model.distance, model.distance]);\n    mat4.multiply(tmpMatrix, tmpMatrix, tmpMatrix2);\n    mat4.identity(model.cameraLightTransform);\n    mat4.translate(model.cameraLightTransform, tmpMatrix, [0.0, 0.0, -1.0]);\n  };\n  publicAPI.deepCopy = sourceCamera => {};\n  publicAPI.physicalOrientationToWorldDirection = ori => {\n    // push the x axis through the orientation quat\n    const oriq = quat.fromValues(ori[0], ori[1], ori[2], ori[3]);\n    const coriq = quat.create();\n    const qdir = quat.fromValues(0.0, 0.0, 1.0, 0.0);\n    quat.conjugate(coriq, oriq);\n\n    // rotate the z axis by the quat\n    quat.multiply(qdir, oriq, qdir);\n    quat.multiply(qdir, qdir, coriq);\n\n    // return the z axis in world coords\n    return [qdir[0], qdir[1], qdir[2]];\n  };\n  publicAPI.getPhysicalToWorldMatrix = result => {\n    publicAPI.getWorldToPhysicalMatrix(result);\n    mat4.invert(result, result);\n  };\n  publicAPI.getWorldToPhysicalMatrix = result => {\n    mat4.identity(result);\n\n    // now the physical to vtk world rotation tform\n    const physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n    result[0] = physVRight[0];\n    result[1] = physVRight[1];\n    result[2] = physVRight[2];\n    result[4] = model.physicalViewUp[0];\n    result[5] = model.physicalViewUp[1];\n    result[6] = model.physicalViewUp[2];\n    result[8] = -model.physicalViewNorth[0];\n    result[9] = -model.physicalViewNorth[1];\n    result[10] = -model.physicalViewNorth[2];\n    mat4.transpose(result, result);\n    vec3.set(tmpvec1, 1 / model.physicalScale, 1 / model.physicalScale, 1 / model.physicalScale);\n    mat4.scale(result, result, tmpvec1);\n    mat4.translate(result, result, model.physicalTranslation);\n  };\n  publicAPI.computeViewParametersFromViewMatrix = vmat => {\n    // invert to get view to world\n    mat4.invert(tmpMatrix, vmat);\n\n    // note with glmatrix operations happen in\n    // the reverse order\n    // mat.scale\n    // mat.translate\n    // will result in the translation then the scale\n    // mat.mult(a,b)\n    // results in perform the B transformation then A\n\n    // then extract the params position, orientation\n    // push 0,0,0 through to get a translation\n    vec3.transformMat4(tmpvec1, origin, tmpMatrix);\n    publicAPI.computeDistance();\n    const oldDist = model.distance;\n    publicAPI.setPosition(tmpvec1[0], tmpvec1[1], tmpvec1[2]);\n\n    // push basis vectors to get orientation\n    vec3.transformMat4(tmpvec2, dopbasis, tmpMatrix);\n    vec3.subtract(tmpvec2, tmpvec2, tmpvec1);\n    vec3.normalize(tmpvec2, tmpvec2);\n    publicAPI.setDirectionOfProjection(tmpvec2[0], tmpvec2[1], tmpvec2[2]);\n    vec3.transformMat4(tmpvec3, upbasis, tmpMatrix);\n    vec3.subtract(tmpvec3, tmpvec3, tmpvec1);\n    vec3.normalize(tmpvec3, tmpvec3);\n    publicAPI.setViewUp(tmpvec3[0], tmpvec3[1], tmpvec3[2]);\n    publicAPI.setDistance(oldDist);\n  };\n\n  // the provided matrix should include\n  // translation and orientation only\n  // mat is physical to view\n  publicAPI.computeViewParametersFromPhysicalMatrix = mat => {\n    // get the WorldToPhysicalMatrix\n    publicAPI.getWorldToPhysicalMatrix(tmpMatrix);\n\n    // first convert the physical -> view matrix to be\n    // world -> view\n    mat4.multiply(tmpMatrix, mat, tmpMatrix);\n    publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n  };\n  publicAPI.setViewMatrix = mat => {\n    model.viewMatrix = mat;\n    if (model.viewMatrix) {\n      mat4.copy(tmpMatrix, model.viewMatrix);\n      publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n      mat4.transpose(model.viewMatrix, model.viewMatrix);\n    }\n  };\n  publicAPI.getViewMatrix = () => {\n    if (model.viewMatrix) {\n      return model.viewMatrix;\n    }\n    mat4.lookAt(tmpMatrix, model.position,\n    // eye\n    model.focalPoint,\n    // at\n    model.viewUp // up\n    );\n\n    mat4.transpose(tmpMatrix, tmpMatrix);\n    const result = new Float64Array(16);\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n  publicAPI.setProjectionMatrix = mat => {\n    model.projectionMatrix = mat;\n  };\n  publicAPI.getProjectionMatrix = (aspect, nearz, farz) => {\n    const result = new Float64Array(16);\n    mat4.identity(result);\n    if (model.projectionMatrix) {\n      const scale = 1 / model.physicalScale;\n      vec3.set(tmpvec1, scale, scale, scale);\n      mat4.copy(result, model.projectionMatrix);\n      mat4.scale(result, result, tmpvec1);\n      mat4.transpose(result, result);\n      return result;\n    }\n    mat4.identity(tmpMatrix);\n\n    // FIXME: Not sure what to do about adjust z buffer here\n    // adjust Z-buffer range\n    // this->ProjectionTransform->AdjustZBuffer( -1, +1, nearz, farz );\n    const cWidth = model.clippingRange[1] - model.clippingRange[0];\n    const cRange = [model.clippingRange[0] + (nearz + 1) * cWidth / 2.0, model.clippingRange[0] + (farz + 1) * cWidth / 2.0];\n    if (model.parallelProjection) {\n      // set up a rectangular parallelipiped\n      const width = model.parallelScale * aspect;\n      const height = model.parallelScale;\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      mat4.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\n      mat4.transpose(tmpMatrix, tmpMatrix);\n    } else if (model.useOffAxisProjection) {\n      throw new Error('Off-Axis projection is not supported at this time');\n    } else {\n      const tmp = Math.tan(radiansFromDegrees(model.viewAngle) / 2.0);\n      let width;\n      let height;\n      if (model.useHorizontalViewAngle === true) {\n        width = model.clippingRange[0] * tmp;\n        height = model.clippingRange[0] * tmp / aspect;\n      } else {\n        width = model.clippingRange[0] * tmp * aspect;\n        height = model.clippingRange[0] * tmp;\n      }\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      const znear = cRange[0];\n      const zfar = cRange[1];\n      tmpMatrix[0] = 2.0 * znear / (xmax - xmin);\n      tmpMatrix[5] = 2.0 * znear / (ymax - ymin);\n      tmpMatrix[2] = (xmin + xmax) / (xmax - xmin);\n      tmpMatrix[6] = (ymin + ymax) / (ymax - ymin);\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\n      tmpMatrix[14] = -1.0;\n      tmpMatrix[11] = -2.0 * znear * zfar / (zfar - znear);\n      tmpMatrix[15] = 0.0;\n    }\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n  publicAPI.getCompositeProjectionMatrix = (aspect, nearz, farz) => {\n    const vMat = publicAPI.getViewMatrix();\n    const pMat = publicAPI.getProjectionMatrix(aspect, nearz, farz);\n    // mats are transposed so the order is A then B\n    // we reuse pMat as it is a copy so we can do what we want with it\n    mat4.multiply(pMat, vMat, pMat);\n    return pMat;\n  };\n  publicAPI.setDirectionOfProjection = (x, y, z) => {\n    if (model.directionOfProjection[0] === x && model.directionOfProjection[1] === y && model.directionOfProjection[2] === z) {\n      return;\n    }\n    model.directionOfProjection[0] = x;\n    model.directionOfProjection[1] = y;\n    model.directionOfProjection[2] = z;\n    const vec = model.directionOfProjection;\n\n    // recalculate FocalPoint\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    computeViewPlaneNormal();\n  };\n\n  // used to handle convert js device orientation angles\n  // when you use this method the camera will adjust to the\n  // device orientation such that the physicalViewUp you set\n  // in world coordinates looks up, and the physicalViewNorth\n  // you set in world coorindates will (maybe) point north\n  //\n  // NOTE WARNING - much of the documentation out there on how\n  // orientation works is seriously wrong. Even worse the Chrome\n  // device orientation simulator is completely wrong and should\n  // never be used. OMG it is so messed up.\n  //\n  // how it seems to work on iOS is that the device orientation\n  // is specified in extrinsic angles with a alpha, beta, gamma\n  // convention with axes of Z, X, Y (the code below substitutes\n  // the physical coordinate system for these axes to get the right\n  // modified coordinate system.\n  publicAPI.setDeviceAngles = (alpha, beta, gamma, screen) => {\n    const physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n\n    // phone to physical coordinates\n    const rotmat = mat4.identity(new Float64Array(16));\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(alpha), model.physicalViewUp);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(beta), physVRight);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(gamma), model.physicalViewNorth);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(-screen), model.physicalViewUp);\n    const dop = new Float64Array([-model.physicalViewUp[0], -model.physicalViewUp[1], -model.physicalViewUp[2]]);\n    const vup = new Float64Array(model.physicalViewNorth);\n    vec3.transformMat4(dop, dop, rotmat);\n    vec3.transformMat4(vup, vup, rotmat);\n    publicAPI.setDirectionOfProjection(dop[0], dop[1], dop[2]);\n    publicAPI.setViewUp(vup[0], vup[1], vup[2]);\n    publicAPI.modified();\n  };\n  publicAPI.setOrientationWXYZ = (degrees, x, y, z) => {\n    const quatMat = mat4.identity(new Float64Array(16));\n    if (degrees !== 0.0 && (x !== 0.0 || y !== 0.0 || z !== 0.0)) {\n      // convert to radians\n      const angle = radiansFromDegrees(degrees);\n      const q = quat.create();\n      quat.setAxisAngle(q, [x, y, z], angle);\n      mat4.fromQuat(quatMat, q);\n    }\n    const newdop = new Float64Array(3);\n    vec3.transformMat4(newdop, [0.0, 0.0, -1.0], quatMat);\n    const newvup = new Float64Array(3);\n    vec3.transformMat4(newvup, [0.0, 1.0, 0.0], quatMat);\n    publicAPI.setDirectionOfProjection(...newdop);\n    publicAPI.setViewUp(...newvup);\n    publicAPI.modified();\n  };\n  publicAPI.computeClippingRange = bounds => {\n    let vn = null;\n    let position = null;\n    vn = model.viewPlaneNormal;\n    position = model.position;\n    const a = -vn[0];\n    const b = -vn[1];\n    const c = -vn[2];\n    const d = -(a * position[0] + b * position[1] + c * position[2]);\n\n    // Set the max near clipping plane and the min far clipping plane\n    const range = [a * bounds[0] + b * bounds[2] + c * bounds[4] + d, 1e-18];\n\n    // Find the closest / farthest bounding box vertex\n    for (let k = 0; k < 2; k++) {\n      for (let j = 0; j < 2; j++) {\n        for (let i = 0; i < 2; i++) {\n          const dist = a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;\n          range[0] = dist < range[0] ? dist : range[0];\n          range[1] = dist > range[1] ? dist : range[1];\n        }\n      }\n    }\n    return range;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  viewUp: [0, 1, 0],\n  directionOfProjection: [0, 0, -1],\n  parallelProjection: false,\n  useHorizontalViewAngle: false,\n  viewAngle: 30,\n  parallelScale: 1,\n  clippingRange: [0.01, 1000.01],\n  windowCenter: [0, 0],\n  viewPlaneNormal: [0, 0, 1],\n  useOffAxisProjection: false,\n  screenBottomLeft: [-0.5, -0.5, -0.5],\n  screenBottomRight: [0.5, -0.5, -0.5],\n  screenTopRight: [0.5, 0.5, -0.5],\n  freezeFocalPoint: false,\n  projectionMatrix: null,\n  viewMatrix: null,\n  cameraLightTransform: mat4.create(),\n  // used for world to physical transformations\n  physicalTranslation: [0, 0, 0],\n  physicalScale: 1.0,\n  physicalViewUp: [0, 1, 0],\n  physicalViewNorth: [0, 0, -1]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['distance']);\n  macro.setGet(publicAPI, model, ['parallelProjection', 'useHorizontalViewAngle', 'viewAngle', 'parallelScale', 'useOffAxisProjection', 'freezeFocalPoint', 'physicalScale']);\n  macro.getArray(publicAPI, model, ['directionOfProjection', 'viewPlaneNormal', 'position', 'focalPoint']);\n  macro.setGetArray(publicAPI, model, ['clippingRange', 'windowCenter'], 2);\n  macro.setGetArray(publicAPI, model, ['viewUp', 'screenBottomLeft', 'screenBottomRight', 'screenTopRight', 'physicalTranslation', 'physicalViewUp', 'physicalViewNorth'], 3);\n\n  // Object methods\n  vtkCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkCamera');\n\n// ----------------------------------------------------------------------------\n\nvar vtkCamera$1 = {\n  newInstance,\n  extend\n};\n\nexport { DEFAULT_VALUES, vtkCamera$1 as default, extend, newInstance };\n","import { m as macro } from '../../macros2.js';\nimport { h as hsv2rgb, i as isNan, J as floor, K as isInf, L as rgb2hsv, M as rgb2lab, N as lab2rgb } from '../../Common/Core/Math/index.js';\nimport vtkScalarsToColors from '../../Common/Core/ScalarsToColors.js';\nimport Constants from './ColorTransferFunction/Constants.js';\n\nconst {\n  ColorSpace,\n  Scale\n} = Constants;\nconst {\n  ScalarMappingTarget\n} = vtkScalarsToColors;\nconst {\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkWarningMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n/* eslint-disable no-continue                                                */\n\n// Convert to and from a special polar version of CIELAB (useful for creating\n// continuous diverging color maps).\nfunction vtkColorTransferFunctionLabToMsh(lab, msh) {\n  const L = lab[0];\n  const a = lab[1];\n  const b = lab[2];\n  const M = Math.sqrt(L * L + a * a + b * b);\n  const s = M > 0.001 ? Math.acos(L / M) : 0.0;\n  const h = s > 0.001 ? Math.atan2(b, a) : 0.0;\n  msh[0] = M;\n  msh[1] = s;\n  msh[2] = h;\n}\nfunction vtkColorTransferFunctionMshToLab(msh, lab) {\n  const M = msh[0];\n  const s = msh[1];\n  const h = msh[2];\n  lab[0] = M * Math.cos(s);\n  lab[1] = M * Math.sin(s) * Math.cos(h);\n  lab[2] = M * Math.sin(s) * Math.sin(h);\n}\n\n// For the case when interpolating from a saturated color to an unsaturated\n// color, find a hue for the unsaturated color that makes sense.\nfunction vtkColorTransferFunctionAdjustHue(msh, unsatM) {\n  if (msh[0] >= unsatM - 0.1) {\n    // The best we can do is hold hue constant.\n    return msh[2];\n  }\n\n  // This equation is designed to make the perceptual change of the\n  // interpolation to be close to constant.\n  const hueSpin = msh[1] * Math.sqrt(unsatM * unsatM - msh[0] * msh[0]) / (msh[0] * Math.sin(msh[1]));\n  // Spin hue away from 0 except in purple hues.\n  if (msh[2] > -0.3 * Math.PI) {\n    return msh[2] + hueSpin;\n  }\n  return msh[2] - hueSpin;\n}\nfunction vtkColorTransferFunctionAngleDiff(a1, a2) {\n  let adiff = a1 - a2;\n  if (adiff < 0.0) {\n    adiff = -adiff;\n  }\n  while (adiff >= 2.0 * Math.PI) {\n    adiff -= 2.0 * Math.PI;\n  }\n  if (adiff > Math.PI) {\n    adiff = 2.0 * Math.PI - adiff;\n  }\n  return adiff;\n}\n\n// Interpolate a diverging color map.\nfunction vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, result) {\n  const lab1 = [];\n  const lab2 = [];\n  rgb2lab(rgb1, lab1);\n  rgb2lab(rgb2, lab2);\n  const msh1 = [];\n  const msh2 = [];\n  vtkColorTransferFunctionLabToMsh(lab1, msh1);\n  vtkColorTransferFunctionLabToMsh(lab2, msh2);\n\n  // If the endpoints are distinct saturated colors, then place white in between\n  // them.\n  let localS = s;\n  if (msh1[1] > 0.05 && msh2[1] > 0.05 && vtkColorTransferFunctionAngleDiff(msh1[2], msh2[2]) > 0.33 * Math.PI) {\n    // Insert the white midpoint by setting one end to white and adjusting the\n    // scalar value.\n    let Mmid = Math.max(msh1[0], msh2[0]);\n    Mmid = Math.max(88.0, Mmid);\n    if (s < 0.5) {\n      msh2[0] = Mmid;\n      msh2[1] = 0.0;\n      msh2[2] = 0.0;\n      localS *= 2.0;\n    } else {\n      msh1[0] = Mmid;\n      msh1[1] = 0.0;\n      msh1[2] = 0.0;\n      localS = 2.0 * localS - 1.0;\n    }\n  }\n\n  // If one color has no saturation, then its hue value is invalid.  In this\n  // case, we want to set it to something logical so that the interpolation of\n  // hue makes sense.\n  if (msh1[1] < 0.05 && msh2[1] > 0.05) {\n    msh1[2] = vtkColorTransferFunctionAdjustHue(msh2, msh1[0]);\n  } else if (msh2[1] < 0.05 && msh1[1] > 0.05) {\n    msh2[2] = vtkColorTransferFunctionAdjustHue(msh1, msh2[0]);\n  }\n  const mshTmp = [];\n  mshTmp[0] = (1 - localS) * msh1[0] + localS * msh2[0];\n  mshTmp[1] = (1 - localS) * msh1[1] + localS * msh2[1];\n  mshTmp[2] = (1 - localS) * msh1[2] + localS * msh2[2];\n\n  // Now convert back to RGB\n  const labTmp = [];\n  vtkColorTransferFunctionMshToLab(mshTmp, labTmp);\n  lab2rgb(labTmp, result);\n}\n\n// ----------------------------------------------------------------------------\n// vtkColorTransferFunction methods\n// ----------------------------------------------------------------------------\n\nfunction vtkColorTransferFunction(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkColorTransferFunction');\n\n  // Return the number of points which specify this function\n  publicAPI.getSize = () => model.nodes.length;\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPoint = (x, r, g, b) => publicAPI.addRGBPointLong(x, r, g, b, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in RGB\n  publicAPI.addRGBPointLong = function (x, r, g, b) {\n    let midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    let sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n    // Error check\n    if (midpoint < 0.0 || midpoint > 1.0) {\n      vtkErrorMacro('Midpoint outside range [0.0, 1.0]');\n      return -1;\n    }\n    if (sharpness < 0.0 || sharpness > 1.0) {\n      vtkErrorMacro('Sharpness outside range [0.0, 1.0]');\n      return -1;\n    }\n\n    // remove any node already at this X location\n    if (!model.allowDuplicateScalars) {\n      publicAPI.removePoint(x);\n    }\n\n    // Create the new node\n    const node = {\n      x,\n      r,\n      g,\n      b,\n      midpoint,\n      sharpness\n    };\n\n    // Add it, then sort to get everything in order\n    model.nodes.push(node);\n    publicAPI.sortAndUpdateRange();\n\n    // We need to find the index of the node we just added in order\n    // to return this value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n\n    // If we didn't find it, something went horribly wrong so\n    // return -1\n    if (i < model.nodes.length) {\n      return i;\n    }\n    return -1;\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPoint = (x, h, s, v) => publicAPI.addHSVPointLong(x, h, s, v, 0.5, 0.0);\n\n  //----------------------------------------------------------------------------\n  // Add a point defined in HSV\n  publicAPI.addHSVPointLong = function (x, h, s, v) {\n    let midpoint = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.5;\n    let sharpness = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.0;\n    const rgb = [];\n    const hsv = [h, s, v];\n    hsv2rgb(hsv, rgb);\n    return publicAPI.addRGBPoint(x, rgb[0], rgb[1], rgb[2], midpoint, sharpness);\n  };\n\n  //----------------------------------------------------------------------------\n  // Set nodes directly\n  publicAPI.setNodes = nodes => {\n    if (model.nodes !== nodes) {\n      const before = JSON.stringify(model.nodes);\n      model.nodes = nodes;\n      const after = JSON.stringify(model.nodes);\n      if (publicAPI.sortAndUpdateRange() || before !== after) {\n        publicAPI.modified();\n        return true;\n      }\n    }\n    return false;\n  };\n\n  //----------------------------------------------------------------------------\n  // Sort the vector in increasing order, then fill in\n  // the Range\n  publicAPI.sortAndUpdateRange = () => {\n    const before = JSON.stringify(model.nodes);\n    model.nodes.sort((a, b) => a.x - b.x);\n    const after = JSON.stringify(model.nodes);\n    const modifiedInvoked = publicAPI.updateRange();\n    // If range is updated, Modified() has been called, don't call it again.\n    if (!modifiedInvoked && before !== after) {\n      publicAPI.modified();\n      return true;\n    }\n    return modifiedInvoked;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.updateRange = () => {\n    const oldRange = [2];\n    oldRange[0] = model.mappingRange[0];\n    oldRange[1] = model.mappingRange[1];\n    const size = model.nodes.length;\n    if (size) {\n      model.mappingRange[0] = model.nodes[0].x;\n      model.mappingRange[1] = model.nodes[size - 1].x;\n    } else {\n      model.mappingRange[0] = 0;\n      model.mappingRange[1] = 0;\n    }\n\n    // If the range is the same, then no need to call Modified()\n    if (oldRange[0] === model.mappingRange[0] && oldRange[1] === model.mappingRange[1]) {\n      return false;\n    }\n    publicAPI.modified();\n    return true;\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove a point\n  publicAPI.removePoint = x => {\n    // First find the node since we need to know its\n    // index as our return value\n    let i = 0;\n    for (; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === x) {\n        break;\n      }\n    }\n    const retVal = i;\n\n    // If the node doesn't exist, we return -1\n    if (i >= model.nodes.length) {\n      return -1;\n    }\n\n    // If the first or last point has been removed, then we update the range\n    // No need to sort here as the order of points hasn't changed.\n    let modifiedInvoked = false;\n    model.nodes.splice(i, 1);\n    if (i === 0 || i === model.nodes.length) {\n      modifiedInvoked = publicAPI.updateRange();\n    }\n    if (!modifiedInvoked) {\n      publicAPI.modified();\n    }\n    return retVal;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.movePoint = (oldX, newX) => {\n    if (oldX === newX) {\n      // Nothing to do.\n      return;\n    }\n    publicAPI.removePoint(newX);\n    for (let i = 0; i < model.nodes.length; i++) {\n      if (model.nodes[i].x === oldX) {\n        model.nodes[i].x = newX;\n        publicAPI.sortAndUpdateRange();\n        break;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  // Remove all points\n  publicAPI.removeAllPoints = () => {\n    model.nodes = [];\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in RGB\n  publicAPI.addRGBSegment = (x1, r1, g1, b1, x2, r2, g2, b2) => {\n    // First, find all points in this range and remove them\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= x1 && model.nodes[i].x <= x2) {\n        model.nodes.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    // Now add the points\n    publicAPI.addRGBPointLong(x1, r1, g1, b1, 0.5, 0.0);\n    publicAPI.addRGBPointLong(x2, r2, g2, b2, 0.5, 0.0);\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  // Add a line defined in HSV\n  publicAPI.addHSVSegment = (x1, h1, s1, v1, x2, h2, s2, v2) => {\n    const hsv1 = [h1, s1, v1];\n    const hsv2 = [h2, s2, v2];\n    const rgb1 = [];\n    const rgb2 = [];\n    hsv2rgb(hsv1, rgb1);\n    hsv2rgb(hsv2, rgb2);\n    publicAPI.addRGBSegment(x1, rgb1[0], rgb1[1], rgb1[2], x2, rgb2[0], rgb2[1], rgb2[2]);\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGBA color evaluated at the specified location\n  publicAPI.mapValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return [Math.floor(255.0 * rgb[0] + 0.5), Math.floor(255.0 * rgb[1] + 0.5), Math.floor(255.0 * rgb[2] + 0.5), 255];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the RGB color evaluated at the specified location\n  publicAPI.getColor = (x, rgb) => {\n    if (model.indexedLookup) {\n      const numNodes = publicAPI.getSize();\n      // todo\n      const idx = publicAPI.getAnnotatedValueIndexInternal(x);\n      if (idx < 0 || numNodes === 0) {\n        const nanColor = publicAPI.getNanColorByReference();\n        rgb[0] = nanColor[0];\n        rgb[1] = nanColor[1];\n        rgb[2] = nanColor[2];\n      } else {\n        const nodeVal = [];\n        publicAPI.getNodeValue(idx % numNodes, nodeVal);\n        // nodeVal[0] is the x value. nodeVal[1...3] is rgb.\n        rgb[0] = nodeVal[1];\n        rgb[1] = nodeVal[2];\n        rgb[2] = nodeVal[3];\n      }\n      return;\n    }\n    publicAPI.getTable(x, x, 1, rgb);\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the red color evaluated at the specified location\n  publicAPI.getRedValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[0];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the green color evaluated at the specified location\n  publicAPI.getGreenValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[1];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns the blue color evaluated at the specified location\n  publicAPI.getBlueValue = x => {\n    const rgb = [];\n    publicAPI.getColor(x, rgb);\n    return rgb[2];\n  };\n\n  //----------------------------------------------------------------------------\n  // Returns a table of RGB colors at regular intervals along the function\n  publicAPI.getTable = (xStart_, xEnd_, size, table) => {\n    // To handle BigInt limitation\n    const xStart = Number(xStart_);\n    const xEnd = Number(xEnd_);\n\n    // Special case: If either the start or end is a NaN, then all any\n    // interpolation done on them is also a NaN.  Therefore, fill the table with\n    // the NaN color.\n    if (isNan(xStart) || isNan(xEnd)) {\n      for (let i = 0; i < size; i++) {\n        table[i * 3 + 0] = model.nanColor[0];\n        table[i * 3 + 1] = model.nanColor[1];\n        table[i * 3 + 2] = model.nanColor[2];\n      }\n      return;\n    }\n    let idx = 0;\n    const numNodes = model.nodes.length;\n\n    // Need to keep track of the last value so that\n    // we can fill in table locations past this with\n    // this value if Clamping is On.\n    let lastR = 0.0;\n    let lastG = 0.0;\n    let lastB = 0.0;\n    if (numNodes !== 0) {\n      lastR = model.nodes[numNodes - 1].r;\n      lastG = model.nodes[numNodes - 1].g;\n      lastB = model.nodes[numNodes - 1].b;\n    }\n    let x = 0.0;\n    let x1 = 0.0;\n    let x2 = 0.0;\n    const rgb1 = [0.0, 0.0, 0.0];\n    const rgb2 = [0.0, 0.0, 0.0];\n    let midpoint = 0.0;\n    let sharpness = 0.0;\n    const tmpVec = [];\n\n    // If the scale is logarithmic, make sure the range is valid.\n    let usingLogScale = model.scale === Scale.LOG10;\n    if (usingLogScale) {\n      // Note: This requires range[0] <= range[1].\n      usingLogScale = model.mappingRange[0] > 0.0;\n    }\n    let logStart = 0.0;\n    let logEnd = 0.0;\n    let logX = 0.0;\n    if (usingLogScale) {\n      logStart = Math.log10(xStart);\n      logEnd = Math.log10(xEnd);\n    }\n\n    // For each table entry\n    for (let i = 0; i < size; i++) {\n      // Find our location in the table\n      const tidx = 3 * i;\n\n      // Find our X location. If we are taking only 1 sample, make\n      // it halfway between start and end (usually start and end will\n      // be the same in this case)\n      if (size > 1) {\n        if (usingLogScale) {\n          logX = logStart + i / (size - 1.0) * (logEnd - logStart);\n          x = 10.0 ** logX;\n        } else {\n          x = xStart + i / (size - 1.0) * (xEnd - xStart);\n        }\n      } else if (usingLogScale) {\n        logX = 0.5 * (logStart + logEnd);\n        x = 10.0 ** logX;\n      } else {\n        x = 0.5 * (xStart + xEnd);\n      }\n\n      // Linearly map x from mappingRange to [0, numberOfValues-1],\n      // discretize (round down to the closest integer),\n      // then map back to mappingRange\n      if (model.discretize) {\n        const range = model.mappingRange;\n        if (x >= range[0] && x <= range[1]) {\n          const numberOfValues = model.numberOfValues;\n          const deltaRange = range[1] - range[0];\n          if (numberOfValues <= 1) {\n            x = range[0] + deltaRange / 2.0;\n          } else {\n            // normalize x\n            const xn = (x - range[0]) / deltaRange;\n            // discretize\n            const discretizeIndex = floor(numberOfValues * xn);\n            // get discretized x\n            x = range[0] + discretizeIndex / (numberOfValues - 1) * deltaRange;\n          }\n        }\n      }\n\n      // Do we need to move to the next node?\n      while (idx < numNodes && x > model.nodes[idx].x) {\n        idx++;\n        // If we are at a valid point index, fill in\n        // the value at this node, and the one before (the\n        // two that surround our current sample location)\n        // idx cannot be 0 since we just incremented it.\n        if (idx < numNodes) {\n          x1 = model.nodes[idx - 1].x;\n          x2 = model.nodes[idx].x;\n          if (usingLogScale) {\n            x1 = Math.log10(x1);\n            x2 = Math.log10(x2);\n          }\n          rgb1[0] = model.nodes[idx - 1].r;\n          rgb2[0] = model.nodes[idx].r;\n          rgb1[1] = model.nodes[idx - 1].g;\n          rgb2[1] = model.nodes[idx].g;\n          rgb1[2] = model.nodes[idx - 1].b;\n          rgb2[2] = model.nodes[idx].b;\n\n          // We only need the previous midpoint and sharpness\n          // since these control this region\n          midpoint = model.nodes[idx - 1].midpoint;\n          sharpness = model.nodes[idx - 1].sharpness;\n\n          // Move midpoint away from extreme ends of range to avoid\n          // degenerate math\n          if (midpoint < 0.00001) {\n            midpoint = 0.00001;\n          }\n          if (midpoint > 0.99999) {\n            midpoint = 0.99999;\n          }\n        }\n      }\n\n      // Are we at or past the end? If so, just use the last value\n      if (x > model.mappingRange[1]) {\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseAboveRangeColor()) {\n            table[tidx] = model.aboveRangeColor[0];\n            table[tidx + 1] = model.aboveRangeColor[1];\n            table[tidx + 2] = model.aboveRangeColor[2];\n          } else {\n            table[tidx] = lastR;\n            table[tidx + 1] = lastG;\n            table[tidx + 2] = lastB;\n          }\n        }\n      } else if (x < model.mappingRange[0] || isInf(x) && x < 0) {\n        // we are before the first node? If so, duplicate this node's values.\n        // We have to deal with -inf here\n        table[tidx] = 0.0;\n        table[tidx + 1] = 0.0;\n        table[tidx + 2] = 0.0;\n        if (model.clamping) {\n          if (publicAPI.getUseBelowRangeColor()) {\n            table[tidx] = model.belowRangeColor[0];\n            table[tidx + 1] = model.belowRangeColor[1];\n            table[tidx + 2] = model.belowRangeColor[2];\n          } else if (numNodes > 0) {\n            table[tidx] = model.nodes[0].r;\n            table[tidx + 1] = model.nodes[0].g;\n            table[tidx + 2] = model.nodes[0].b;\n          }\n        }\n      } else if (idx === 0 && (Math.abs(x - xStart) < 1e-6 || model.discretize)) {\n        if (numNodes > 0) {\n          table[tidx] = model.nodes[0].r;\n          table[tidx + 1] = model.nodes[0].g;\n          table[tidx + 2] = model.nodes[0].b;\n        } else {\n          table[tidx] = 0.0;\n          table[tidx + 1] = 0.0;\n          table[tidx + 2] = 0.0;\n        }\n      } else {\n        // OK, we are between two nodes - interpolate\n        // Our first attempt at a normalized location [0,1] -\n        // we will be modifying this based on midpoint and\n        // sharpness to get the curve shape we want and to have\n        // it pass through (y1+y2)/2 at the midpoint.\n        let s = 0.0;\n        if (usingLogScale) {\n          s = (logX - x1) / (x2 - x1);\n        } else {\n          s = (x - x1) / (x2 - x1);\n        }\n\n        // Readjust based on the midpoint - linear adjustment\n        if (s < midpoint) {\n          s = 0.5 * s / midpoint;\n        } else {\n          s = 0.5 + 0.5 * (s - midpoint) / (1.0 - midpoint);\n        }\n\n        // override for sharpness > 0.99\n        // In this case we just want piecewise constant\n        if (sharpness > 0.99) {\n          // Use the first value since we are below the midpoint\n          if (s < 0.5) {\n            table[tidx] = rgb1[0];\n            table[tidx + 1] = rgb1[1];\n            table[tidx + 2] = rgb1[2];\n            continue;\n          } else {\n            // Use the second value at or above the midpoint\n            table[tidx] = rgb2[0];\n            table[tidx + 1] = rgb2[1];\n            table[tidx + 2] = rgb2[2];\n            continue;\n          }\n        }\n\n        // Override for sharpness < 0.01\n        // In this case we want piecewise linear\n        if (sharpness < 0.01) {\n          // Simple linear interpolation\n          if (model.colorSpace === ColorSpace.RGB) {\n            table[tidx] = (1 - s) * rgb1[0] + s * rgb2[0];\n            table[tidx + 1] = (1 - s) * rgb1[1] + s * rgb2[1];\n            table[tidx + 2] = (1 - s) * rgb1[2] + s * rgb2[2];\n          } else if (model.colorSpace === ColorSpace.HSV) {\n            const hsv1 = [];\n            const hsv2 = [];\n            rgb2hsv(rgb1, hsv1);\n            rgb2hsv(rgb2, hsv2);\n            if (model.hSVWrap && (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)) {\n              if (hsv1[0] > hsv2[0]) {\n                hsv1[0] -= 1.0;\n              } else {\n                hsv2[0] -= 1.0;\n              }\n            }\n            const hsvTmp = [];\n            hsvTmp[0] = (1.0 - s) * hsv1[0] + s * hsv2[0];\n            if (hsvTmp[0] < 0.0) {\n              hsvTmp[0] += 1.0;\n            }\n            hsvTmp[1] = (1.0 - s) * hsv1[1] + s * hsv2[1];\n            hsvTmp[2] = (1.0 - s) * hsv1[2] + s * hsv2[2];\n\n            // Now convert this back to RGB\n            hsv2rgb(hsvTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.LAB) {\n            const lab1 = [];\n            const lab2 = [];\n            rgb2lab(rgb1, lab1);\n            rgb2lab(rgb2, lab2);\n            const labTmp = [];\n            labTmp[0] = (1 - s) * lab1[0] + s * lab2[0];\n            labTmp[1] = (1 - s) * lab1[1] + s * lab2[1];\n            labTmp[2] = (1 - s) * lab1[2] + s * lab2[2];\n\n            // Now convert back to RGB\n            lab2rgb(labTmp, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else if (model.colorSpace === ColorSpace.DIVERGING) {\n            vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n            table[tidx] = tmpVec[0];\n            table[tidx + 1] = tmpVec[1];\n            table[tidx + 2] = tmpVec[2];\n          } else {\n            vtkErrorMacro('ColorSpace set to invalid value.', model.colorSpace);\n          }\n          continue;\n        }\n\n        // We have a sharpness between [0.01, 0.99] - we will\n        // used a modified hermite curve interpolation where we\n        // derive the slope based on the sharpness, and we compress\n        // the curve non-linearly based on the sharpness\n\n        // First, we will adjust our position based on sharpness in\n        // order to make the curve sharper (closer to piecewise constant)\n        if (s < 0.5) {\n          s = 0.5 * (s * 2.0) ** (1.0 + 10.0 * sharpness);\n        } else if (s > 0.5) {\n          s = 1.0 - 0.5 * ((1.0 - s) * 2) ** (1 + 10.0 * sharpness);\n        }\n\n        // Compute some coefficients we will need for the hermite curve\n        const ss = s * s;\n        const sss = ss * s;\n        const h1 = 2.0 * sss - 3 * ss + 1;\n        const h2 = -2 * sss + 3 * ss;\n        const h3 = sss - 2 * ss + s;\n        const h4 = sss - ss;\n        let slope;\n        let t;\n        if (model.colorSpace === ColorSpace.RGB) {\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = rgb2[j] - rgb1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            table[tidx + j] = h1 * rgb1[j] + h2 * rgb2[j] + h3 * t + h4 * t;\n          }\n        } else if (model.colorSpace === ColorSpace.HSV) {\n          const hsv1 = [];\n          const hsv2 = [];\n          rgb2hsv(rgb1, hsv1);\n          rgb2hsv(rgb2, hsv2);\n          if (model.hSVWrap && (hsv1[0] - hsv2[0] > 0.5 || hsv2[0] - hsv1[0] > 0.5)) {\n            if (hsv1[0] > hsv2[0]) {\n              hsv1[0] -= 1.0;\n            } else {\n              hsv2[0] -= 1.0;\n            }\n          }\n          const hsvTmp = [];\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = hsv2[j] - hsv1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            hsvTmp[j] = h1 * hsv1[j] + h2 * hsv2[j] + h3 * t + h4 * t;\n            if (j === 0 && hsvTmp[j] < 0.0) {\n              hsvTmp[j] += 1.0;\n            }\n          }\n          // Now convert this back to RGB\n          hsv2rgb(hsvTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.LAB) {\n          const lab1 = [];\n          const lab2 = [];\n          rgb2lab(rgb1, lab1);\n          rgb2lab(rgb2, lab2);\n          const labTmp = [];\n          for (let j = 0; j < 3; j++) {\n            // Use one slope for both end points\n            slope = lab2[j] - lab1[j];\n            t = (1.0 - sharpness) * slope;\n\n            // Compute the value\n            labTmp[j] = h1 * lab1[j] + h2 * lab2[j] + h3 * t + h4 * t;\n          }\n          // Now convert this back to RGB\n          lab2rgb(labTmp, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else if (model.colorSpace === ColorSpace.DIVERGING) {\n          // I have not implemented proper interpolation by a hermite curve for\n          // the diverging color map, but I cannot think of a good use case for\n          // that anyway.\n          vtkColorTransferFunctionInterpolateDiverging(s, rgb1, rgb2, tmpVec);\n          table[tidx] = tmpVec[0];\n          table[tidx + 1] = tmpVec[1];\n          table[tidx + 2] = tmpVec[2];\n        } else {\n          vtkErrorMacro('ColorSpace set to invalid value.');\n        }\n\n        // Final error check to make sure we don't go outside [0,1]\n        for (let j = 0; j < 3; j++) {\n          table[tidx + j] = table[tidx + j] < 0.0 ? 0.0 : table[tidx + j];\n          table[tidx + j] = table[tidx + j] > 1.0 ? 1.0 : table[tidx + j];\n        }\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getUint8Table = function (xStart, xEnd, size) {\n    let withAlpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (publicAPI.getMTime() <= model.buildTime && model.tableSize === size && model.tableWithAlpha !== withAlpha) {\n      return model.table;\n    }\n    if (model.nodes.length === 0) {\n      vtkErrorMacro('Attempting to lookup a value with no points in the function');\n      return model.table;\n    }\n    const nbChannels = withAlpha ? 4 : 3;\n    if (model.tableSize !== size || model.tableWithAlpha !== withAlpha) {\n      model.table = new Uint8Array(size * nbChannels);\n      model.tableSize = size;\n      model.tableWithAlpha = withAlpha;\n    }\n    const tmpTable = [];\n    publicAPI.getTable(xStart, xEnd, size, tmpTable);\n    for (let i = 0; i < size; i++) {\n      model.table[i * nbChannels + 0] = Math.floor(tmpTable[i * 3 + 0] * 255.0 + 0.5);\n      model.table[i * nbChannels + 1] = Math.floor(tmpTable[i * 3 + 1] * 255.0 + 0.5);\n      model.table[i * nbChannels + 2] = Math.floor(tmpTable[i * 3 + 2] * 255.0 + 0.5);\n      if (withAlpha) {\n        model.table[i * nbChannels + 3] = 255;\n      }\n    }\n    model.buildTime.modified();\n    return model.table;\n  };\n  publicAPI.buildFunctionFromArray = array => {\n    publicAPI.removeAllPoints();\n    const numComponents = array.getNumberOfComponents();\n    for (let i = 0; i < array.getNumberOfTuples(); i++) {\n      switch (numComponents) {\n        case 3:\n          {\n            model.nodes.push({\n              x: i,\n              r: array.getComponent(i, 0),\n              g: array.getComponent(i, 1),\n              b: array.getComponent(i, 2),\n              midpoint: 0.5,\n              sharpness: 0.0\n            });\n            break;\n          }\n        case 4:\n          {\n            model.nodes.push({\n              x: array.getComponent(i, 0),\n              r: array.getComponent(i, 1),\n              g: array.getComponent(i, 2),\n              b: array.getComponent(i, 3),\n              midpoint: 0.5,\n              sharpness: 0.0\n            });\n            break;\n          }\n        case 5:\n          {\n            model.nodes.push({\n              x: i,\n              r: array.getComponent(i, 0),\n              g: array.getComponent(i, 1),\n              b: array.getComponent(i, 2),\n              midpoint: array.getComponent(i, 4),\n              sharpness: array.getComponent(i, 5)\n            });\n            break;\n          }\n        case 6:\n          {\n            model.nodes.push({\n              x: array.getComponent(i, 0),\n              r: array.getComponent(i, 1),\n              g: array.getComponent(i, 2),\n              b: array.getComponent(i, 3),\n              midpoint: array.getComponent(i, 4),\n              sharpness: array.getComponent(i, 5)\n            });\n            break;\n          }\n      }\n    }\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.buildFunctionFromTable = (xStart, xEnd, size, table) => {\n    let inc = 0.0;\n    publicAPI.removeAllPoints();\n    if (size > 1) {\n      inc = (xEnd - xStart) / (size - 1.0);\n    }\n    for (let i = 0; i < size; i++) {\n      const node = {\n        x: xStart + inc * i,\n        r: table[i * 3],\n        g: table[i * 3 + 1],\n        b: table[i * 3 + 2],\n        sharpness: 0.0,\n        midpoint: 0.5\n      };\n      model.nodes.push(node);\n    }\n    publicAPI.sortAndUpdateRange();\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.getNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    val[0] = model.nodes[index].x;\n    val[1] = model.nodes[index].r;\n    val[2] = model.nodes[index].g;\n    val[3] = model.nodes[index].b;\n    val[4] = model.nodes[index].midpoint;\n    val[5] = model.nodes[index].sharpness;\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  // For a specified index value, get the node parameters\n  publicAPI.setNodeValue = (index, val) => {\n    if (index < 0 || index >= model.nodes.length) {\n      vtkErrorMacro('Index out of range!');\n      return -1;\n    }\n    const oldX = model.nodes[index].x;\n    model.nodes[index].x = val[0];\n    model.nodes[index].r = val[1];\n    model.nodes[index].g = val[2];\n    model.nodes[index].b = val[3];\n    model.nodes[index].midpoint = val[4];\n    model.nodes[index].sharpness = val[5];\n    if (oldX !== val[0]) {\n      // The point has been moved, the order of points or the range might have\n      // been modified.\n      publicAPI.sortAndUpdateRange();\n      // No need to call Modified() here because SortAndUpdateRange() has done it\n      // already.\n    } else {\n      publicAPI.modified();\n    }\n    return 1;\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAvailableColors = () => {\n    if (model.indexedLookup && publicAPI.getSize()) {\n      return publicAPI.getSize();\n    }\n    if (model.tableSize) {\n      // Not sure if this is correct since it is only set if\n      // \"const unsigned char *::GetTable(double xStart, double xEnd,int size)\"\n      // has been called.\n      return model.tableSize;\n    }\n    return 16777216; // 2^24\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.getIndexedColor = (idx, rgba) => {\n    const n = publicAPI.getSize();\n    if (n > 0 && idx >= 0) {\n      const nodeValue = [];\n      publicAPI.getNodeValue(idx % n, nodeValue);\n      for (let j = 0; j < 3; ++j) {\n        rgba[j] = nodeValue[j + 1];\n      }\n      rgba[3] = 1.0; // NodeColor is RGB-only.\n      return;\n    }\n    const nanColor = publicAPI.getNanColorByReference();\n    rgba[0] = nanColor[0];\n    rgba[1] = nanColor[1];\n    rgba[2] = nanColor[2];\n    rgba[3] = 1.0; // NanColor is RGB-only.\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.fillFromDataPointer = (nb, ptr) => {\n    if (nb <= 0 || !ptr) {\n      return;\n    }\n    publicAPI.removeAllPoints();\n    for (let i = 0; i < nb; i++) {\n      publicAPI.addRGBPoint(ptr[i * 4], ptr[i * 4 + 1], ptr[i * 4 + 2], ptr[i * 4 + 3]);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.setMappingRange = (min, max) => {\n    const range = [min, max];\n    const originalRange = publicAPI.getRange();\n    if (originalRange[1] === range[1] && originalRange[0] === range[0]) {\n      return;\n    }\n    if (range[1] === range[0]) {\n      vtkErrorMacro('attempt to set zero width color range');\n      return;\n    }\n    const scale = (range[1] - range[0]) / (originalRange[1] - originalRange[0]);\n    const shift = range[0] - originalRange[0] * scale;\n    for (let i = 0; i < model.nodes.length; ++i) {\n      model.nodes[i].x = model.nodes[i].x * scale + shift;\n    }\n    model.mappingRange[0] = range[0];\n    model.mappingRange[1] = range[1];\n    publicAPI.modified();\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.adjustRange = range => {\n    const functionRange = publicAPI.getRange();\n\n    // Make sure we have points at each end of the range\n    const rgb = [];\n    if (functionRange[0] < range[0]) {\n      publicAPI.getColor(range[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[0], rgb);\n      publicAPI.addRGBPoint(range[0], rgb[0], rgb[1], rgb[2]);\n    }\n    if (functionRange[1] > range[1]) {\n      publicAPI.getColor(range[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    } else {\n      publicAPI.getColor(functionRange[1], rgb);\n      publicAPI.addRGBPoint(range[1], rgb[0], rgb[1], rgb[2]);\n    }\n\n    // Remove all points out-of-range\n    publicAPI.sortAndUpdateRange();\n    for (let i = 0; i < model.nodes.length;) {\n      if (model.nodes[i].x >= range[0] && model.nodes[i].x <= range[1]) {\n        model.nodes.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n    return 1;\n  };\n\n  //--------------------------------------------------------------------------\n  publicAPI.estimateMinNumberOfSamples = (x1, x2) => {\n    const d = publicAPI.findMinimumXDistance();\n    return Math.ceil((x2 - x1) / d);\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.findMinimumXDistance = () => {\n    if (model.nodes.length < 2) {\n      return -1.0;\n    }\n    let distance = Number.MAX_VALUE;\n    for (let i = 0; i < model.nodes.length - 1; i++) {\n      const currentDist = model.nodes[i + 1].x - model.nodes[i].x;\n      if (currentDist < distance) {\n        distance = currentDist;\n      }\n    }\n    return distance;\n  };\n  publicAPI.mapScalarsThroughTable = (input, output, outFormat, inputOffset) => {\n    if (publicAPI.getSize() === 0) {\n      vtkDebugMacro('Transfer Function Has No Points!');\n      return;\n    }\n    if (model.indexedLookup) {\n      publicAPI.mapDataIndexed(input, output, outFormat, inputOffset);\n    } else {\n      publicAPI.mapData(input, output, outFormat, inputOffset);\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.mapData = (input, output, outFormat, inputOffset) => {\n    if (publicAPI.getSize() === 0) {\n      vtkWarningMacro('Transfer Function Has No Points!');\n      return;\n    }\n    const alpha = Math.floor(publicAPI.getAlpha() * 255.0 + 0.5);\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n    const outputV = output.getData();\n    const inputV = input.getData();\n    const rgb = [];\n    if (outFormat === ScalarMappingTarget.RGBA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 4] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 4 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 4 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n        outputV[i * 4 + 3] = alpha;\n      }\n    }\n    if (outFormat === ScalarMappingTarget.RGB) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 3] = Math.floor(rgb[0] * 255.0 + 0.5);\n        outputV[i * 3 + 1] = Math.floor(rgb[1] * 255.0 + 0.5);\n        outputV[i * 3 + 2] = Math.floor(rgb[2] * 255.0 + 0.5);\n      }\n    }\n    if (outFormat === ScalarMappingTarget.LUMINANCE) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);\n      }\n    }\n    if (outFormat === ScalarMappingTarget.LUMINANCE_ALPHA) {\n      for (let i = 0; i < length; i++) {\n        const x = inputV[i * inIncr + inputOffset];\n        publicAPI.getColor(x, rgb);\n        outputV[i * 2] = Math.floor(rgb[0] * 76.5 + rgb[1] * 150.45 + rgb[2] * 28.05 + 0.5);\n        outputV[i * 2 + 1] = alpha;\n      }\n    }\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.applyColorMap = colorMap => {\n    const oldColorSpace = JSON.stringify(model.colorSpace);\n    if (colorMap.ColorSpace) {\n      model.colorSpace = ColorSpace[colorMap.ColorSpace.toUpperCase()];\n      if (model.colorSpace === undefined) {\n        vtkErrorMacro(`ColorSpace ${colorMap.ColorSpace} not supported, using RGB instead`);\n        model.colorSpace = ColorSpace.RGB;\n      }\n    }\n    let isModified = oldColorSpace !== JSON.stringify(model.colorSpace);\n    const oldNanColor = isModified || JSON.stringify(model.nanColor);\n    if (colorMap.NanColor) {\n      model.nanColor = [].concat(colorMap.NanColor);\n      while (model.nanColor.length < 4) {\n        model.nanColor.push(1.0);\n      }\n    }\n    isModified = isModified || oldNanColor !== JSON.stringify(model.nanColor);\n    const oldNodes = isModified || JSON.stringify(model.nodes);\n    if (colorMap.RGBPoints) {\n      const size = colorMap.RGBPoints.length;\n      model.nodes = [];\n      const midpoint = 0.5;\n      const sharpness = 0.0;\n      for (let i = 0; i < size; i += 4) {\n        model.nodes.push({\n          x: colorMap.RGBPoints[i],\n          r: colorMap.RGBPoints[i + 1],\n          g: colorMap.RGBPoints[i + 2],\n          b: colorMap.RGBPoints[i + 3],\n          midpoint,\n          sharpness\n        });\n      }\n    }\n    const modifiedInvoked = publicAPI.sortAndUpdateRange();\n    const callModified = !modifiedInvoked && (isModified || oldNodes !== JSON.stringify(model.nodes));\n    if (callModified) publicAPI.modified();\n    return modifiedInvoked || callModified;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  clamping: true,\n  colorSpace: ColorSpace.RGB,\n  hSVWrap: true,\n  scale: Scale.LINEAR,\n  nanColor: null,\n  belowRangeColor: null,\n  aboveRangeColor: null,\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n  allowDuplicateScalars: false,\n  table: null,\n  tableSize: 0,\n  buildTime: null,\n  nodes: null,\n  discretize: false,\n  numberOfValues: 256\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  model.table = [];\n  model.nodes = [];\n  model.nanColor = [0.5, 0.0, 0.0, 1.0];\n  model.belowRangeColor = [0.0, 0.0, 0.0, 1.0];\n  model.aboveRangeColor = [1.0, 1.0, 1.0, 1.0];\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime', 'mappingRange']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['useAboveRangeColor', 'useBelowRangeColor', 'colorSpace', 'discretize', 'numberOfValues']);\n  macro.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkColorTransferFunction(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkColorTransferFunction');\n\n// ----------------------------------------------------------------------------\n\nvar vtkColorTransferFunction$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkColorTransferFunction$1 as default, extend, newInstance };\n","import { v as vtkColorMaps$1 } from './ColorMaps.json.js';\n\nconst presetMap = Object.create(null);\nvtkColorMaps$1.filter(p => p.RGBPoints).filter(p => p.ColorSpace !== 'CIELAB').forEach(p => {\n  presetMap[p.Name] = p;\n});\n\n// ----------------------------------------------------------------------------\n\nconst rgbPresetNames = Object.keys(presetMap);\nrgbPresetNames.sort();\n\n// ----------------------------------------------------------------------------\n\nfunction getPresetByName(name) {\n  return presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nfunction addPreset(preset) {\n  if (!preset.RGBPoints || preset.ColorSpace === 'CIELAB') {\n    return;\n  }\n  if (!presetMap[preset.Name]) {\n    rgbPresetNames.push(preset.Name);\n    rgbPresetNames.sort();\n  }\n  presetMap[preset.Name] = preset;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction removePresetByName(name) {\n  const index = rgbPresetNames.indexOf(name);\n  if (index > -1) {\n    rgbPresetNames.splice(index, 1);\n  }\n  delete presetMap[name];\n}\n\n// ----------------------------------------------------------------------------\n\nvar vtkColorMaps = {\n  addPreset,\n  removePresetByName,\n  getPresetByName,\n  rgbPresetNames\n};\n\nexport { vtkColorMaps as default };\n","import Constants from './ImageMapper/Constants.js';\nimport { m as macro } from '../../macros2.js';\nimport vtkAbstractImageMapper from './AbstractImageMapper.js';\nimport { intersectWithLineForPointPicking, intersectWithLineForCellPicking } from './AbstractImageMapper/helper.js';\nimport { C as clampValue, R as multiply3x3_vect3, F as createUninitializedBounds, S as getSparseOrthogonalMatrix } from '../../Common/Core/Math/index.js';\nimport CoincidentTopologyHelper from './Mapper/CoincidentTopologyHelper.js';\n\nconst {\n  staticOffsetAPI,\n  otherStaticMethods\n} = CoincidentTopologyHelper;\nconst {\n  SlicingMode\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkImageMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageMapper');\n  publicAPI.getSliceAtPosition = pos => {\n    const image = publicAPI.getCurrentImage();\n    let pos3;\n    if (pos.length === 3) {\n      pos3 = pos;\n    } else if (Number.isFinite(pos)) {\n      const bds = image.getBounds();\n      switch (model.slicingMode) {\n        case SlicingMode.X:\n          pos3 = [pos, (bds[3] + bds[2]) / 2, (bds[5] + bds[4]) / 2];\n          break;\n        case SlicingMode.Y:\n          pos3 = [(bds[1] + bds[0]) / 2, pos, (bds[5] + bds[4]) / 2];\n          break;\n        case SlicingMode.Z:\n          pos3 = [(bds[1] + bds[0]) / 2, (bds[3] + bds[2]) / 2, pos];\n          break;\n      }\n    }\n    const ijk = [0, 0, 0];\n    image.worldToIndex(pos3, ijk);\n    const ex = image.getExtent();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let slice = 0;\n    switch (ijkMode) {\n      case SlicingMode.I:\n        slice = clampValue(ijk[0], ex[0], ex[1]);\n        break;\n      case SlicingMode.J:\n        slice = clampValue(ijk[1], ex[2], ex[3]);\n        break;\n      case SlicingMode.K:\n        slice = clampValue(ijk[2], ex[4], ex[5]);\n        break;\n      default:\n        return 0;\n    }\n    return slice;\n  };\n  publicAPI.setSliceFromCamera = cam => {\n    const fp = cam.getFocalPoint();\n    switch (model.slicingMode) {\n      case SlicingMode.I:\n      case SlicingMode.J:\n      case SlicingMode.K:\n        {\n          const slice = publicAPI.getSliceAtPosition(fp);\n          publicAPI.setSlice(slice);\n        }\n        break;\n      case SlicingMode.X:\n        publicAPI.setSlice(fp[0]);\n        break;\n      case SlicingMode.Y:\n        publicAPI.setSlice(fp[1]);\n        break;\n      case SlicingMode.Z:\n        publicAPI.setSlice(fp[2]);\n        break;\n    }\n  };\n  publicAPI.setXSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.X);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setYSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.Y);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setZSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.Z);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setISlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.I);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setJSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.J);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.setKSlice = id => {\n    publicAPI.setSlicingMode(SlicingMode.K);\n    publicAPI.setSlice(id);\n  };\n  publicAPI.getSlicingModeNormal = () => {\n    const out = [0, 0, 0];\n    const mat3 = publicAPI.getCurrentImage().getDirection();\n    switch (model.slicingMode) {\n      case SlicingMode.X:\n        out[0] = 1;\n        break;\n      case SlicingMode.Y:\n        out[1] = 1;\n        break;\n      case SlicingMode.Z:\n        out[2] = 1;\n        break;\n      case SlicingMode.I:\n        multiply3x3_vect3(mat3, [1, 0, 0], out);\n        break;\n      case SlicingMode.J:\n        multiply3x3_vect3(mat3, [0, 1, 0], out);\n        break;\n      case SlicingMode.K:\n        multiply3x3_vect3(mat3, [0, 0, 1], out);\n        break;\n    }\n    return out;\n  };\n  function computeClosestIJKAxis() {\n    let xyzMode;\n    switch (model.slicingMode) {\n      case SlicingMode.X:\n        xyzMode = 0;\n        break;\n      case SlicingMode.Y:\n        xyzMode = 1;\n        break;\n      case SlicingMode.Z:\n        xyzMode = 2;\n        break;\n      default:\n        model.closestIJKAxis = {\n          ijkMode: model.slicingMode,\n          flip: false\n        };\n        return;\n    }\n\n    // The direction matrix in vtkImageData is the indexToWorld rotation matrix\n    // with a column-major data layout since it is stored as a WebGL matrix.\n    const direction = publicAPI.getCurrentImage().getDirection();\n    const newMatrix = getSparseOrthogonalMatrix(direction);\n    // With {foo}Vector filled with 0s except at {foo}Mode position where it is 1\n    // We have xyzVector = (+/-) newMatrix * ijkVector\n    let ijkMode = 0;\n    for (; ijkMode < 3; ++ijkMode) {\n      if (newMatrix[xyzMode + 3 * ijkMode] !== 0) {\n        break;\n      }\n    }\n    const flip = newMatrix[xyzMode + 3 * ijkMode] < 0;\n    model.closestIJKAxis = {\n      ijkMode,\n      flip\n    };\n  }\n  publicAPI.setSlicingMode = mode => {\n    if (model.slicingMode === mode) {\n      return;\n    }\n    model.slicingMode = mode;\n    if (publicAPI.getCurrentImage()) {\n      computeClosestIJKAxis();\n    }\n    publicAPI.modified();\n  };\n  publicAPI.getClosestIJKAxis = () => {\n    if ((model.closestIJKAxis === undefined || model.closestIJKAxis.ijkMode === SlicingMode.NONE) && publicAPI.getCurrentImage()) {\n      computeClosestIJKAxis();\n    }\n    return model.closestIJKAxis;\n  };\n  publicAPI.getBounds = () => {\n    const image = publicAPI.getCurrentImage();\n    if (!image) {\n      return createUninitializedBounds();\n    }\n    if (!model.useCustomExtents) {\n      return image.getBounds();\n    }\n    const ex = model.customDisplayExtent.slice();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let nSlice = model.slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(model.slice);\n    }\n    switch (ijkMode) {\n      case SlicingMode.I:\n        ex[0] = nSlice;\n        ex[1] = nSlice;\n        break;\n      case SlicingMode.J:\n        ex[2] = nSlice;\n        ex[3] = nSlice;\n        break;\n      case SlicingMode.K:\n        ex[4] = nSlice;\n        ex[5] = nSlice;\n        break;\n    }\n    return image.extentToBounds(ex);\n  };\n  publicAPI.getBoundsForSlice = function () {\n    let slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.slice;\n    let halfThickness = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const image = publicAPI.getCurrentImage();\n    if (!image) {\n      return createUninitializedBounds();\n    }\n    const extent = image.getSpatialExtent();\n    const {\n      ijkMode\n    } = publicAPI.getClosestIJKAxis();\n    let nSlice = slice;\n    if (ijkMode !== model.slicingMode) {\n      // If not IJK slicing, get the IJK slice from the XYZ position/slice\n      nSlice = publicAPI.getSliceAtPosition(slice);\n    }\n    switch (ijkMode) {\n      case SlicingMode.I:\n        extent[0] = nSlice - halfThickness;\n        extent[1] = nSlice + halfThickness;\n        break;\n      case SlicingMode.J:\n        extent[2] = nSlice - halfThickness;\n        extent[3] = nSlice + halfThickness;\n        break;\n      case SlicingMode.K:\n        extent[4] = nSlice - halfThickness;\n        extent[5] = nSlice + halfThickness;\n        break;\n    }\n    return image.extentToBounds(extent);\n  };\n  publicAPI.intersectWithLineForPointPicking = (p1, p2) => intersectWithLineForPointPicking(p1, p2, publicAPI);\n  publicAPI.intersectWithLineForCellPicking = (p1, p2) => intersectWithLineForCellPicking(p1, p2, publicAPI);\n  publicAPI.getCurrentImage = () => publicAPI.getInputData();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  slicingMode: SlicingMode.NONE,\n  closestIJKAxis: {\n    ijkMode: SlicingMode.NONE,\n    flip: false\n  },\n  renderToRectangle: false,\n  sliceAtFocalPoint: false,\n  preferSizeOverAccuracy: false // Whether to use halfFloat representation of float, when it is inaccurate\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  vtkAbstractImageMapper.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['slicingMode']);\n  macro.setGet(publicAPI, model, ['closestIJKAxis', 'renderToRectangle', 'sliceAtFocalPoint', 'preferSizeOverAccuracy']);\n  CoincidentTopologyHelper.implementCoincidentTopologyMethods(publicAPI, model);\n\n  // Object methods\n  vtkImageMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageMapper');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageMapper$1 = {\n  newInstance,\n  extend,\n  ...staticOffsetAPI,\n  ...otherStaticMethods,\n  ...Constants\n};\n\nexport { vtkImageMapper$1 as default, extend, newInstance };\n","import { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkImageProperty from './ImageProperty.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageSlice');\n  publicAPI.getActors = () => publicAPI;\n  publicAPI.getImages = () => publicAPI;\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n    return isOpaque;\n  };\n\n  // Always render during opaque pass, to keep the behavior\n  // predictable and because depth-peeling kills alpha-blending.\n  // In the future, the Renderer should render images in layers,\n  // i.e. where each image will have a layer number assigned to it,\n  // and the Renderer will do the images in their own pass.\n  publicAPI.hasTranslucentPolygonalGeometry = () => false;\n  publicAPI.makeProperty = vtkImageProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce((a, b) => a && b[0] === b[1], true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(x => x);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      vtkBoundingBox.transformBounds(bds, tmp4, model.bounds);\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getBoundsForSlice = (slice, thickness) => {\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBoundsForSlice(slice, thickness);\n    // Check for the special case when the actor is empty.\n    if (!vtkBoundingBox.isValid(bds)) {\n      return bds;\n    }\n    publicAPI.computeMatrix();\n    const tmp4 = new Float64Array(16);\n    mat4.transpose(tmp4, model.matrix);\n    const newBounds = vtkBoundingBox.transformBounds(bds, tmp4);\n    return newBounds;\n  };\n\n  //----------------------------------------------------------------------------\n  // Get the minimum X bound\n  publicAPI.getMinXBound = () => publicAPI.getBounds()[0];\n\n  // Get the maximum X bound\n  publicAPI.getMaxXBound = () => publicAPI.getBounds()[1];\n\n  // Get the minimum Y bound\n  publicAPI.getMinYBound = () => publicAPI.getBounds()[2];\n\n  // Get the maximum Y bound\n  publicAPI.getMaxYBound = () => publicAPI.getBounds()[3];\n\n  // Get the minimum Z bound\n  publicAPI.getMinZBound = () => publicAPI.getBounds()[4];\n\n  // Get the maximum Z bound\n  publicAPI.getMaxZBound = () => publicAPI.getBounds()[5];\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    if (model.property !== null) {\n      let time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.property.getRGBTransferFunction() !== null) {\n        time = model.property.getRGBTransferFunction().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n  publicAPI.getSupportsSelection = () => model.mapper ? model.mapper.getSupportsSelection() : false;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [...vtkBoundingBox.INIT_BOUNDS]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageSlice');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageSlice$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageSlice$1 as default, extend, newInstance };\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n"],"names":["VideoViewport","constructor","props","super","canvas","element","videoWidth","videoHeight","loop","mute","isPlaying","scrollSpeed","playbackRate","frameRange","fps","videoCamera","panWorld","parallelScale","voiRange","lower","upper","getProperties","this","videoElement","muted","resetCamera","refreshRenderValues","canvasContext","fillRect","width","height","renderFrame","getNumberOfSlices","computedSlices","Math","round","duration","isNaN","numberOfFrames","getFrameOfReferenceUID","src","resize","clientWidth","clientHeight","canvasToWorld","canvasPos","destPos","pan","worldToCanvasRatio","getWorldToCanvasRatio","panOffsetCanvas","subCanvasPos","splice","worldToCanvas","worldPos","getRotation","canvasToIndex","transform","getTransform","invert","transformPoint","map","it","devicePixelRatio","indexToCanvas","indexPos","customRenderViewportToCanvas","transformationMatrix","getMatrix","ctx","resetTransform","drawImage","actor","getActors","render","triggerEvent","STACK_NEW_IMAGE","viewportId","id","viewport","renderingEngineId","time","currentTime","IMAGE_RENDERED","imageIndex","getCurrentImageIdIndex","numberOfSlices","initialRender","frame","getFrameNumber","setFrameNumber","pause","renderWhilstPlaying","requestAnimationFrame","getContext","setAttribute","document","createElement","autoplay","crossOrigin","addEventListeners","frameRangeExtractor","useCustomRenderingPipeline","addEventListener","ELEMENT_DISABLED","elementDisabledHandler","removeEventListeners","removeEventListener","remove","getImageDataMetadata","image","imageId","imagePlaneModule","MetadataModules","IMAGE_PLANE","rowCosines","columnCosines","rowCosineVec","colCosineVec","rows","columns","scanAxisNormal","origin","imagePositionPatient","xSpacing","columnPixelSpacing","ySpacing","rowPixelSpacing","xVoxels","yVoxels","hasPixelSpacing","bitsAllocated","numComps","direction","dimensions","spacing","numVoxels","setDataIds","imageIds","options","setVideo","viewReference","sliceIndex","frameNumber","Array","isArray","imageUrlModule","IMAGE_URL","rendered","Error","generalSeries","GENERAL_SERIES","modality","Modality","metadata","cineRate","CINE","setVideoURL","then","setFrameRange","Promise","resolve","window","setTimeout","videoURL","preload","loadedMetadataEventHandler","getImageIds","baseImageId","replace","i","togglePlayPause","play","e","scroll","delta","newTime","seekEventListener","evt","start","paused","end","setTime","timeInSeconds","length","getFrameRange","setProperties","undefined","setPlaybackRate","setScrollSpeed","setVOI","rate","unit","FRAME","SECOND","resetProperties","getScalarData","scalarData","context","getImageData","data","getRange","imageData","getDirection","getDimensions","getSpacing","worldToIndex","point","canvasPoint","pixelCoord","indexToWorld","destPoint","calibration","preScale","scaled","Object","defineProperty","get","enumerable","hasImageURI","imageURI","framesMatch","match","testURI","substring","index","indexOf","setColorTransform","setWindowLevel","windowWidth","windowCenter","setAverageWhite","averageWhite","feFilter","white","maxWhite","max","scaleWhite","c","wlScale","wlDelta","style","filter","setCamera","camera","focalPoint","focalPointCanvas","canvasCenter","panWorldDelta","fillStyle","getCurrentImageId","getReferenceId","specifier","isReferenceViewable","viewRef","referencedImageId","colonIndex","withNavigation","currentIndex","getSliceIndex","range","split","Number","setViewReference","getViewReference","viewRefSpecifier","getCamera","parallelProjection","position","viewUp","viewPlaneNormal","getFrameRate","getPan","offsetWidth","offsetHeight","drawWidth","floor","drawHeight","xOffsetWorld","yOffsetWorld","getCanvasToWorldRatio","canvasToWorldRatio","halfCanvas","halfCanvasWorldCoordinates","scale","translate","updateCameraClippingPlanesAndRange","addImages","stackInputs","actors","forEach","stackInput","getImage","imageActor","createActorMapper","push","uid","actorUID","callback","setActors","async","renderingEngine","viewportIds","getViewport","console","warn","addStackPromises","all","volumeInputs","immediateRender","suppressEvents","addVolumePromises","addVolumes","COLOR_TRANSPARENT","getRank","array","elem","left","right","mid","midElem","makeMappingArray","N","gamma","x","y0","y1","lut","xLinSpace","a","b","n","increment","vector","linspace","pow","xLinSpaceIndexes","inputArray","values","indexes","len","sort","searchSorted","colorPercent","colorDelta","getColormap","colormapData","colormap","name","colors","segmentedData","redLut","red","greenLut","green","blueLut","blue","rgba","createLinearSegmentedColormap","numColors","getId","getColorSchemeName","setColorSchemeName","getNumberOfColors","setNumberOfColors","getColor","isValidIndex","getColorRepeating","setColor","addColor","insertColor","removeColor","clearColors","buildLookupTable","setNumberOfTableValues","setTableValue","createLookupTable","performance","now","Date","voiLUT","shift","toString","minValue","maxValue","maxValueMapped","firstValueMapped","modalityLutValue","generateNonLinearVOILUT","value","min","generateLinearVOILUT","enabledElement","m","calculateTransform","setTransform","doesImageNeedToBeRendered","lastRenderedImageId","renderingTools","lastRenderedViewport","voi","rotation","hflip","vflip","modalityLUT","renderCanvas","renderCanvasData","renderCanvasContext","isColor","color","lastRenderedIsColor","getLut","cachedLut","maxPixelValue","minPixelValue","offset","lutArray","Uint8ClampedArray","vlutfn","storedValue","generateColorLUT","getRenderCanvas","invalidated","canvasWasColor","getCanvas","initializeRenderCanvas","colorLUT","stats","lastLutGenerateTime","canvasImageDataData","pixelData","getPixelData","lastGetPixelDataTime","canvasImageDataIndex","storedPixelDataIndex","numPixels","lastStoredPixelDataToCanvasImageDataTime","storedRGBAPixelDataToCanvasImageData","storedColorPixelDataToCanvasImageData","putImageData","lastPutImageDataTime","renderColorImage","imageSmoothingEnabled","pixelReplication","setToPixelCoordinateSystem","sx","displayedArea","tlhc","sy","y","brhc","saveLastRendered","computeAutoVoi","hasLut","hasVoi","maxVoi","slope","intercept","minVoi","ww","wc","lutMatches","mlutfn","storedPixelValue","generateNonLinearModalityLUT","generateLinearModalityLUT","getModalityLut","isPreScaled","generateLut","useAlphaChannel","minimum","collectedMultiplierTerms","petVOILutFunction","lutFunction","storedPixelDataToCanvasImageDataPET","Int16Array","Uint16Array","storedPixelDataToCanvasImageData","pixelValue","storedPixelDataToCanvasImageDataRGBA","renderGrayscaleImage","grayscaleLut","grayscale","clut","Table","renderPseudoColorImage","colormapId","clamp","lastRenderTime","renderTimeInMs","invalid","needsRedraw","angle","rotate","PI","widthScale","heightScale","presentationSizeMode","verticalScale","horizontalScale","translation","pt","viewportOrientation","cosA","cos","sinA","sin","newX","newY","state","initialDefaultViewport","labelmap","assign","createViewport","getImageFitScale","scaleFactor","imageSize","verticalRatio","horizontalRatio","isRotated","resetPan","resetZoom","forceFitToWindow","oldCanvasWidth","oldCanvasHeight","setCanvasSize","getImageSize","imageWidth","imageHeight","wasFitToWindow","fitToWindow","relWidthChange","relHeightChange","relChange","sqrt","relativeRescale","Transform","reset","clone","multiply","matrix","m11","m12","m21","m22","dx","dy","d","m0","m1","m2","m3","m4","m5","rad","s","validateParameterUndefinedOrNull","checkParam","errorMsg","vtkDebugMacro","DEFAULT_VALUES","mapper","property","bounds","extend","publicAPI","model","initialValues","arguments","boundsMTime","obj","set","setGet","getArray","classHierarchy","getVolumes","makeProperty","getProperty","getBounds","bds","mapperBounds","concat","modified","_","row","reduce","getMTime","bbox","computeMatrix","tmp4","Float64Array","MAX_VALUE","mt","mtime","getRedrawMTime","getInput","getInputAlgorithm","update","vtkVolume","vtkVolume$1","newInstance","useNativeDataType","volumeId","blendMode","imageVolume","loadVolume","vtkOpenGLTexture","volumeMapper","createVolumeMapper","setBlendMode","volumeActor","setMapper","getPointData","getScalars","getNumberOfComponents","setIndependentComponents","setDefaultVolumeVOI","getRGBTransferFunction","voiModifiedEventDetail","Events","VOI_MODIFIED","triggerVOIModified","PRIORITY","REQUEST_TYPE","RequestType","Prefetch","voiLutModule","voiLut","windowLevel","getVOIFromMetadata","imageIdIndex","generalSeriesModule","modalityLutModule","numImages","bytesPerImage","byteLength","voxelsPerImage","bytePerPixel","BYTES_PER_ELEMENT","scalingParameters","rescaleSlope","rescaleIntercept","scalingParametersToUse","suvFactor","suvbw","byteOffset","targetBuffer","type","priority","requestType","enabled","referencedImageIds","loadAndCacheImage","ignoreCache","imageScalarData","buffer","TypedArray","volumeBufferView","_getImageScalarDataFromImageVolume","getMinMax","getVOIFromMinMax","scaling","PT","_isCurrentImagePTPrescaled","handlePreScaledVolume","setMappingRange","scalarTexture","superDelete","delete","vtkSharedVolumeMapper","ONE_GB","_imageCache","Map","_volumeCache","_imageCacheSize","_volumeCacheSize","_maxCacheSize","_maxInstanceSize","setMaxCacheSize","newMaxCacheSize","errorMessage","isCacheable","getBytesAvailable","getMaxCacheSize","getMaxInstanceSize","getCacheSize","_decacheImage","cachedImage","imageLoadObject","cancelFn","decache","_decacheVolume","cachedVolume","volumeLoadObject","volume","cancelLoading","_restoreImagesFromBuffer","purgeCache","imageIterator","keys","done","next","removeImageLoadObject","IMAGE_CACHE_IMAGE_REMOVED","purgeVolumeCache","volumeIterator","removeVolumeLoadObject","VOLUME_CACHE_VOLUME_REMOVED","getVolumeLoadObject","timeStamp","getGeometry","geometryId","cachedGeometry","_geometryCache","geometry","getVolume","from","filterVolumesByReferenceId","referencedVolumeId","incrementImageCacheSize","sizeInBytes","eventDetails","incrementVolumeCacheSize","putGeometryLoadObject","geometryLoadObject","has","loaded","promise","GEOMETRY_CACHE_GEOMETRY_ADDED","catch","error","decrementImageCacheSize","decrement","decrementVolumeCacheSize","decacheIfNecessaryUntilBytesAvailable","numBytes","volumeImageIds","bytesAvailable","cachedImages","cachedImageIds","im","imageIdsToPurge","includes","putImageLoadObject","sharedCacheKey","toFixed","CACHE_SIZE_EXCEEDED","IMAGE_CACHE_IMAGE_ADDED","getImageLoadObject","isLoaded","getVolumeContainingImageId","volumeIds","imageIdToUse","imageIdToURI","getImageURIIndex","getCachedImageBasedOnImageURI","imageURIToUse","foundImageId","find","putVolumeLoadObject","VOLUME_CACHE_VOLUME_ADDED","imageCacheOffsetMap","size","viewPixelData","imageFrame","bufferView","log","RENDERING_DEFAULTS","MINIMUM_SLAB_THICKNESS","MAXIMUM_RAY_DISTANCE","freeze","ViewportStatus","BlendMode","BlendModes","GeometryType","DynamicOperatorType","CalibrationTypes","getEnabledElement","viewportUid","renderingEngineUid","dataset","getEnabledElementByIds","hasBeenDestroyed","FrameOfReferenceUID","getEnabledElementByViewportId","renderingEngines","getEnabledElements","enabledElements","getViewports","DEFAULT_SETTINGS","Symbol","RUNTIME_SETTINGS","OBJECT_SETTINGS_MAP","DICTIONARY","Settings","base","dictionary","create","seal","key","unset","endsWith","deleteCount","namespace","slice","deleteAll","prototype","hasOwnProperty","call","startsWith","iterate","import","root","isPlainObject","dump","deepSet","assert","subject","getRuntimeSettings","getDefaultSettings","subfield","defaultSettings","settingObj","setting","runtimeSettings","getObjectSettings","settings","objectSettingsMap","WeakMap","extendRuntimeSettings","references","last","current","previous","isValidKey","prefix","record","failCount","add","field","setAll","WeakSet","getPrototypeOf","separator","subKey","subContext","subContextValue","imageLoaders","unknownImageLoader","loadImageFromImageLoader","scheme","loader","IMAGE_LOADED","errorObject","IMAGE_LOAD_FAILED","loadImageFromCacheOrVolume","cachedVolumeInfo","loadStatus","convertToCornerstoneImage","loadImage","err","loadAndCacheImages","createAndCacheDerivedImage","preventCache","uuidv4","skipCreateBuffer","onCacheAdd","metaData","TypedArrayConstructor","getBufferConfiguration","targetBufferType","derivedImageId","genericMetadataProvider","imagePixelModule","bitsStored","highBit","samplesPerPixel","pixelRepresentation","localImage","createAndCacheLocalImage","createAndCacheDerivedImages","derivedImageIds","allPromises","newOptions","getDerivedImageId","promises","voiLUTFunction","Uint8Array","Float32Array","cancelLoadImage","filterRequests","additionalDetails","cancelLoadImages","cancelLoadAll","requestPool","getRequestPool","requests","pop","loadObject","cancel","clearRequestStack","registerImageLoader","imageLoader","registerUnknownImageLoader","oldImageLoader","unregisterAllImageLoaders","createAndCacheDerivedSegmentationImages","createAndCacheDerivedSegmentationImage","createInternalVTKRepresentation","PhotometricInterpretation","numComponents","dataArrayAttrs","numberOfComponents","setDimensions","setSpacing","setDirection","setOrigin","isDynamicVolume","scalarDataArrays","vtkScalarArray","addArray","setActiveScalars","addScalarDataArraysToImageData","getScalarDataArrays","scalarArray","setScalars","addScalarDataToImageData","volumeLoaders","unknownVolumeLoader","loadVolumeFromVolumeLoader","setupCacheOptimizationEventListener","VOLUME_LOADED","VOLUME_LOADED_FAILED","createAndCacheVolume","createAndCacheDerivedVolume","referencedVolume","scalarLength","volumeScalarData","generateVolumeScalarData","derivedImageData","derivedVolume","createLocalVolume","validDataTypes","createAndCacheVolumeFromImages","volumeProps","generateVolumePropsFromImageIds","imagePromises","performCacheOptimizationForVolume","registerVolumeLoader","volumeLoader","getVolumeLoaderSchemes","registerUnknownVolumeLoader","oldVolumeLoader","getUnknownVolumeLoaderSchema","createAndCacheDerivedSegmentationVolume","createLocalSegmentationVolume","useNorm16Texture","rendering","use16BitTexture","isVolumeBuffer","sharedArrayBuffer","createFloat32SharedArray","createUint8SharedArray","createUint16SharedArray","providers","addProvider","provider","removeProvider","removeAllProviders","getMetaData","queries","result","imageLoadPoolManager","grabDelay","setMaxSimultaneousRequests","Interaction","Thumbnail","RequestPoolManager","numRequests","interaction","thumbnail","prefetch","compute","awake","maxNumRequests","getMaxSimultaneousRequests","destroy","timeoutHandle","clearTimeout","addRequest","requestFn","requestDetails","startGrabbing","filterFunction","sendRequests","requestsToSend","syncImageCount","getNextRequest","requestResult","finally","startAgain","interactionPriorities","getSortedPriorityGroups","hasRemainingInteractionRequests","hasRemainingThumbnailRequests","hasRemainingPrefetchRequests","hasRemainingComputeRequests","Compute","enableCacheOptimization","shouldUseSAB","addEventListenerOnce","IMAGE_VOLUME_LOADING_COMPLETED","detail","_updateImageWithScalarDataView","_processImageCacheOffsetMap","compatibleScalarData","sampleImageIdWithImage","sampleImage","samplePixelData","getImageIdIndex","_processVolumeImages","view","_colormaps","registerColormap","Name","getColormapNames","findMatchingColormap","rgbPoints","colormapsVTK","rgbPresetNames","presetName","getPresetByName","colormapsCS3D","colormapName","matchedColormap","RGBPoints","presetRGBPoints","opacity","opacityPoints","getScalarOpacity","getDataPointer","createLinearRGBTransferFunction","cfun","addRGBPoint","spacingInNormalDirection","actorEntry","referenceId","sliceRange","getTransferFunctionNodes","transferFunction","getSize","nodeValue1","getNodeValue","setTransferFunctionNodes","nodes","removeAllPoints","node","transformWorldToIndex","el","event","CustomEvent","cancelable","dispatchEvent","workerRegistry","workerPoolManager","registerWorker","workerName","workerFn","maxWorkerInstances","overwrite","autoTerminateOnIdle","idleTimeThreshold","idleCheckIntervalId","clearInterval","workerProperties","instances","loadCounters","lastActiveTime","nativeWorkers","fill","worker","getNextWorkerAPI","workerInstances","instance","minLoadIndex","minLoadValue","currentLoadValue","api","executeTask","methodName","args","callbacks","reject","finalCallbacks","cb","processing","results","setInterval","terminateIdleWorkers","terminateWorkerInstance","terminate","workerInstance","BASE","iconContent","iconSize","viewBox","mousePoint","mousePointerGroupString","SEGMENTATION_CURSOR_BOUNDARIES","MINUS_RECT","PLUS_RECT","SCISSOR_ICON","RECTANGLE_ICON","CIRCLE_ICON","CursorSVG","Angle","ArrowAnnotate","Bidirectional","CobbAngle","CircleROI","EllipticalROI","FreehandROI","FreehandROISculptor","Length","Height","Probe","RectangleROI","TextMarker","Crosshairs","Eraser","Magnify","Pan","Rotate","StackScroll","WindowLevelRegion","WindowLevel","Zoom","SegmentationFreeHandEraseInside","SegmentationFreeHandFillInside","SegmentationFreeHandEraseOutside","SegmentationFreeHandFillOutside","SegmentationRectangleEraseInside","RectangleScissor","CircleScissor","getDefinedSVGCursorDescriptor","svgCursorNames","BidirectionalTool","toolProps","defaultToolProps","supportedInteractionTypes","configuration","preventHandleOutsideImage","getTextLines","defaultGetTextLines","isPointNearTool","annotation","canvasCoords","proximity","points","handles","canvasPoint1","canvasPoint2","line","distanceToPoint","toolSelectedCallback","eventDetail","highlighted","viewportIdsToRender","getViewportIdsWithToolToRender","getToolName","editData","movingTextBox","_activateModify","hideElementCursor","preventDefault","handleSelectedCallback","handle","handleIndex","worldPosition","findIndex","p","_endCallback","newAnnotation","hasMoved","activeHandleIndex","_deactivateModify","_deactivateDraw","resetElementCursor","firstLineSegmentLength","longAxis","shortAxisPoint0","shortAxisPoint1","longAxisVector","counterClockWisePerpendicularToLongAxis","currentShortAxisVector","shortAxis","isHandleOutsideImage","removeAnnotation","annotationUID","isDrawing","_dragDrawCallback","currentPoints","world","canvasCoordPoints","shortAxisDistFromCenter","vectorX","vectorY","xMid","yMid","startX","startY","endX","endY","_dragModifyCallback","deltaPoints","worldPosDelta","textBox","_dragModifyHandle","movingHandleIndex","canvasCoordHandlesCurrent","firstLineSegment","secondLineSegment","proposedPoint","proposedCanvasCoord","fixedHandleCanvasCoord","fixedHandleToProposedCoordVec","fixedHandleToOldCoordVec","proposedFirstLineSegment","_movingLongAxisWouldPutItThroughShortAxis","centerOfRotation","_getSignedAngle","firstPointX","firstPointY","secondPointX","secondPointY","rotatedFirstPoint","rotatedFirstPointY","rotatedSecondPoint","rotatedSecondPointY","newFirstPoint","newSecondPoint","translateHandleIndex","canvasCoordsCurrent","longLineSegment","shortLineSegment","longLineSegmentVec","longLineSegmentVecNormalized","proposedToCurrentVec","movementLength","movementAlongLineSegmentLength","newTranslatedPoint","_activateDraw","isInteractingWithTool","MOUSE_UP","MOUSE_DRAG","MOUSE_MOVE","MOUSE_CLICK","TOUCH_TAP","TOUCH_END","TOUCH_DRAG","renderAnnotation","svgDrawingHelper","renderStatus","annotations","getAnnotations","filterInteractableAnnotationsForElement","targetId","getTargetId","getRenderingEngine","styleSpecifier","toolGroupId","toolName","canvasCoordinates","lineWidth","lineDash","shadow","getAnnotationStyle","cachedStats","_throttledCalculateCachedStats","_calculateCachedStats","activeHandleCanvasCoords","isAnnotationVisible","isAnnotationLocked","handleGroupUID","drawHandles","dataId1","dataId2","lineUID","drawLine","secondLineUID","getLinkedTextBoxStyle","visibility","worldBoundingBox","topLeft","topRight","bottomLeft","bottomRight","textLines","canvasTextBoxCoords","getTextBoxCoordsCanvas","textBoxPosition","textBoxUID","boundingBox","drawLinkedTextBox","top","vectorInSecondLineDirection","extendedSecondLineSegment","worldPos1","worldPos2","worldPos3","worldPos4","targetIds","getTargetIdImage","index1","index2","index3","index4","handles1","handles2","scale1","units","units1","scale2","units2","dist1","_calculateLength","dist2","lengthUnit","widthUnit","_isInsideVolume","vector1","vector2","atan2","trailing","addNewAnnotation","getReferencedImageId","label","addAnnotation","pos1","pos2","dz","roundNumber","AnnotationTool","mouseMoveCallback","filteredAnnotations","annotationsNeedToBeRedrawn","activateHandleIndex","near","_imagePointNearToolOrHandle","nearToolAndNotMarkedActive","notNearToolAndMarkedActive","statsCalculator","createAnnotation","annotationBaseData","text","baseData","createAnnotationForViewport","createAndAddAnnotation","getHandleNearImagePoint","isCanvasAnnotation","canvasBoundingBox","annotationCanvasCoordinate","specifications","getStyle","fontFamily","fontSize","background","isSuvScaled","BaseVolumeViewport","cache","scalingModule","locked","lineOpacity","fillColor","fillOpacity","textbox","defaultLabelmapConfig","renderOutline","outlineWidthActive","outlineWidthInactive","activeSegmentOutlineWidthDelta","renderFill","renderFillInactive","fillAlpha","fillAlphaInactive","outlineOpacity","outlineOpacityInactive","RectangleROIThresholdTool","RectangleROITool","StackViewport","segmentationId","triggerAnnotationRenderForViewportIds","rectangleUID","drawRect","RectangleROIStartEndThresholdTool","numSlicesToPropagate","computePointsInsideVolume","BasicStatsCalculator","showTextBox","spacingInNormal","startCoord","_getStartCoordinate","endCoord","_getEndCoordinate","startCoordinate","endCoordinate","pointsInVolume","projectionPoints","projectionPointsImageIds","statistics","labelmapUID","_computeProjectionPoints","calculatePointsInsideVolume","_computePointsInsideVolume","filterAnnotationsWithinSamePlane","viewplaneNormal","_getCoordinateForViewplaneNormal","roundedStartCoord","roundedEndCoord","coord","roundedCoord","firstOrLastSlice","lineDashToUse","throttle","_calculateCachedStatsTool","startIJK","endIJK","startWorld","indexToWorldVec3","endWorld","_getIndexOfCoordinatesForViewplaneNormal","distance","newProjectionPoints","dist","newPoint","pointsInsideVolume","worldWidth","worldHeight","getWorldWidthAndHeightFromCorners","measureInfo","habdles","area","abs","modalityUnitOptions","isViewportPreScaled","modalityUnit","getModalityUnit","projectionPoint","worldPos1Index","worldProjectionPointIndex","indexOfProjection","worldPos2Index","boundsIJK","pointsInShape","pointInShapeCallback","statsCallback","getStatistics","mean","stdDev","statsArray","areaUnit","areaUnits","startPos","endPos","viewplaneNormalAbs","pos","cachedVolumeStats","AnnotationFrameRange","imageIdToFrames","framesToString","String","framesToImageId","newRangeString","eventBase","eventTarget","ANNOTATION_MODIFIED","getClosestImageIdForStackViewport","distanceImagePairs","ImagePositionPatient","dir","dot","calculateDistanceToImage","EPSILON","CONSTANTS","calculateBoundingBox","isWorld","xMin","Infinity","xMax","yMin","yMax","zMin","zMax","is3D","getBoundingBoxAroundShapeIJK","getBoundingBoxAroundShapeWorld","clipBounds","calibratedPixelSpacingMetadataProvider","utilities","Enums","clip","val","low","high","addContourSegmentationAnnotation","parentAnnotationUID","segmentation","segmentIndex","getSegmentation","representationData","CONTOUR","annotationUIDsMap","annotationsUIDsSet","Set","removeContourSegmentationAnnotation","polyline","closed","perimeter","point1","point2","firstPoint","lastPoint","isEqual","findHandlePolylineIndex","contour","closestDistance","closestIndex","testIndex","Labelmap","SegmentationRepresentations","AnnotationToPointData","TOOL_NAMES","convert","metadataProvider","referenceImageId","validateAnnotation","toolClass","ContourSequence","getContourSequence","ReferencedROINumber","ROIDisplayColor","random","register","RectangleROIStartEndThreshold","getContourHolesDataCanvas","worldHoleContours","childAnnotationUIDs","getContourHolesDataWorld","canvasHoleContours","worldHoleContour","numPoints","canvasHoleContour","updateContourPolyline","polylineData","transforms","targetWindingDirection","decimate","epsilon","polylineWorldPoints","currentPolylineWindingDirection","parentAnnotation","currentClosedState","lastToFirstDist","windingDirection","reverse","handlePoints","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","useRAF","TypeError","invokeFunc","thisArg","apply","startTimer","pendingFunc","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeSinceLastInvoke","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","Boolean","cancelAnimationFrame","cancelTimer","flush","pending","annotationCanvasPoints","corners","canvasPoints","handlesLeftToRight","_compareX","handlesTopToBottom","_compareY","bottom","_determineCorners","centerY","PIXEL_UNITS","SUPPORTED_REGION_DATA_TYPES","SUPPORTED_LENGTH_VARIANT","SUPPORTED_PROBE_VARIANT","UNIT_MAPPING","SQUARE","getCalibratedLengthUnitsAndScale","calibrationType","sequenceOfUltrasoundRegions","UNCALIBRATED","imageIndex1","imageIndex2","regions","region","regionLocationMinX0","regionLocationMaxX1","regionLocationMinY0","regionLocationMaxY1","regionDataType","physicalUnitsXDirection","physicalUnitsYDirection","physicalDeltaX","physicalDeltaY","ERMF","USER","ERROR","PROJECTION","getCalibratedProbeUnitsAndValue","supportedRegionsMetadata","referencePixelX0","referencePixelY0","yValue","getCalibratedAspect","aspect","getSphereBoundsInfo","circlePoints","centerWorld","radiusWorld","topLeftWorld","bottomRightWorld","viewRight","topLeftIJK","bottomRightIJK","pointsIJK","_computeBoundsIJKWithCamera","getViewportForAnnotation","viewports","intersectAABB","aabb1","aabb2","minX","maxX","minY","maxY","distanceToPointSquared","aabb","aabbWidth","aabbHeight","aabbSize","aabbCenter","translatedPoint","PointsManager","sum","count","runMean","create3","statsInit","noPointsCollection","newValue","pointLPS","newArray","idx","delta2","squaredDiffSum","named","singleArrayAsNumber","pointInEllipse","ellipse","inverts","precalculated","precalculatePointInEllipse","xRadius","yRadius","zRadius","invXRadiusSq","invYRadiusSq","invZRadiusSq","center","centerL","centerP","centerS","inside","getCanvasEllipseCorners","ellipseCanvasPoints","distanceToPointSquaredInfo","lineStart","lineEnd","closestPoint","distanceSquared","math","dotProduct","sign","NaN","intersectLine","line1Start","line1End","line2Start","line2End","x1","x2","y2","x3","y3","x4","y4","a1","b1","c1","r3","r4","a2","b2","c2","r1","r2","denom","num","ORIENTATION_TOLERANCE","isPointOnLineSegment","orientation","p1","p2","z1","z2","mirror","mirrorPoint","staticPoint","isClosed","numPolylinePoints","distFirstToLastPoints","containsPoint","numIntersections","holes","hole","shouldClose","maxSegmentIndex","intersects","xIntersection","containsPoints","numPoint","getArea","j","getSignedArea","refPoint","aX","aY","bX","getWindingDirection","getNormal3","vecArea","aZ","bY","bZ","_getAreaVector","getNormal2","areLineSegmentsIntersecting","q1","q2","line1MinX","line1MinY","line1MaxX","line1MaxY","line2MinX","line2MinY","line2MaxX","line2MaxY","orient","onSegment","q","r","orientationValue","getLineSegmentIntersectionsIndexes","intersections","maxI","PARALLEL_LINES_TOLERANCE","getLinesIntersection","diffQ1P1","diffQ2P2","denominator","line1AABB","line2AABB","numerator2","PolylinePointType","PolylinePointPosition","PolylinePointDirection","ensuresNextPointers","polylinePoints","currentPoint","getSourceAndTargetPointsList","targetPolyline","sourcePolyline","targetPolylinePoints","sourcePolylinePoints","sourceIntersectionsCache","intersectionPointDirection","Exiting","Entering","pointInside","vertexPoint","Vertex","coordinates","Inside","Outside","visited","intersectionsInfo","intersectedLineSegment","sourceLineSegmentId","intersectionCoordinate","coordinate","targetStartPointDistSquared","intersectionInfo","targetEdgePoint","Intersection","Edge","sourceEdgePoint","Unknown","cloned","sourceIntersectionPoints","lineSegmentId","intersectionPoint","lineSegStartDistSquared","getUnvisitedOutsidePoint","mergePolylines","targetNormal","sourceNormal","dotNormals","startPoint","mergedPolyline","subtractPolylines","subtractedPolylines","subtractedPolyline","getFirstLineSegmentIntersectionIndexes","initialI","intersectPolyline","sourceLen","intersectionPointIndexes","DEFAULT_EPSILON","epsilonSquared","partitionQueue","polylinePointFlags","numDecimatedPoints","startIndex","endIndex","endPoint","maxDistSquared","maxDistIndex","distSquared","decimatedPolyline","srcIndex","dstIndex","getLineSegmentIntersectionsCoordinates","polylineIndexes","intersection","getClosestLineSegmentIntersection","initialQ2Index","p2Index","q2Index","distances","intersectionPoints","midpoint","minDistance","segment","subPixelResolution","xDir","yDir","volumeSpacing","iVector","jVector","kVector","absViewRightDotI","absViewRightDotJ","absViewRightDotK","absViewUpDotI","absViewUpDotJ","absViewUpDotK","closeContourProximity","newCanvasPoint","commonData","lastWorldPos","newWorldPos","worldPosDiff","xDist","yDist","numPointsToAdd","lastCanvasPoint","canvasDist","canvasDir","distPerPoint","p1p","p1p2","p1p2Mag","projectionVectorMag","p1p2UnitVector","projectionVector","projectTo2D","sharedDimensionIndex","testPoints","every","points2D","firstDim","secondDim","projectedPolyline","isPointInsidePolyline3D","projectedHoles","hole2D","rect","lineSegments","rectToLineSegments","pointInSphere","sphere","radius","radius2","INSIDE","OUTSIDE","clipT","tE","tL","t","box","da","db","pointInShapeFn","iMin","iMax","jMin","jMax","kMin","kMax","getData","rowSpacing","columnSpacing","scanAxisSpacing","worldPosStart","rowStep","columnStep","scanAxisStep","xMultiple","yMultiple","zMultiple","currentPos","k","startPosJ","startPosI","pointIJK","pointToString","decimals","parseFloat","getPoint","idx3","getPolyDataPointIndexes","polyData","linesData","getLines","segmentSize","contours","findStartingPoint","entries","nextPoint","getPolyDataPoints","contoursIndexes","rawPointsData","getPoints","contourIndexes","axisList","isAxisAlignedRectangle","rectangleCornersIJK","rectangleVec1","rectangleVec2","calculateAnglesWithAxes","vec","axes","axis","scrollSlabs","VolumeViewport","useSlabThickness","numScrollSteps","currentStepIndex","sliceRangeInfo","newFocalPoint","newPosition","desiredStepIndex","VolumeScrollEventDetail","currentImageId","EVENTS","VOLUME_SCROLL_OUT_OF_BOUNDS","VOLUME_VIEWPORT_SCROLL","scrollVolume","debounceLoading","ChangeTypesForInterpolation","HandlesUpdated","InterpolationUpdated","InterpolationManager","toolNames","addTool","acceptAutoGenerated","annotationGroupSelector","selector","interpolationUID","autoGenerated","interpolationCompleted","handleAnnotationCompleted","originalToolName","viewportData","sliceData","getSliceData","hasInterpolationUID","filterData","parentKey","interpolationAnnotations","skipUIDs","interpolationAnnotation","handleAnnotationUpdate","changeType","isInterpolationUpdate","handleAnnotationDelete","createImageIdReferenceMap","imageIdsArray","segmentationImageIds","lpad","string","character","join","getter","seed","onFlood","onBoundary","equals","diagonals","startNode","permutations","perms","permutation","parseInt","permute","perm","countNonZeroes","prunedPermutations","stack","flooded","visits","currentArgs","flood","boundaries","job","getArgs","prevArgs","previousArgs","z","iKey","markAsVisited","member","markAsFlooded","nextArgs","pushAdjacent","markAsBoundary","getHoveredContourSegmentationAnnotation","annotationUIDs","getSegmentAtLabelmapBorder","worldPoint","searchRadius","labelmapData","LABELMAP","segmentationVolume","getScalarValueFromWorld","onEdge","getNeighborIndex","deltaI","deltaJ","neighborCanvas","isSegmentOnEdge","isSegmentOnEdgeCanvas","imageIdReferenceMap","segmentationImageId","segmentationRepresentations","getSegmentationIdRepresentations","segmentationRepresentationUID","segmentationActor","getActor","getMapper","getInputData","indexIJK","voxelManager","createVolumeVoxelManager","getAtIJKPoint","deltaK","neighborIJK","getAtIJK","isSegmentOnEdgeIJK","neighborRange","neighborIndex","getSegmentAtWorldPoint","desiredRepresentation","representationType","getSegmentAtWorldForLabelmap","Contour","contourData","segmentIndices","annotationsSet","getSegmentAtWorldForContour","invalidateBrushCursor","toolGroup","getToolGroup","tool","viewportsInfo","getViewportsInfo","viewportsInfoArray","getViewportIds","getBrushToolInstances","toolInstances","_toolInstances","toolInstance","getDeltaPoints","lastPoints","curr","getMeanPoints","page","_subtractPoints2D","client","point0","getDeltaDistance","_getDistance2D","_getDistance3D","getDeltaDistanceBetweenIPoints","currentDistance","_getMeanDistanceBetweenAllIPoints","lastDistance","copyPointsList","JSON","parse","stringify","copyPoints","prev","getMeanTouchPoints","touch","identifier","radiusX","radiusY","force","rotationAngle","pairedDistance","toolGroupIds","viewportInfo","Active","Passive","Enabled","ToolModes","filterViewportsWithToolEnabled","numViewports","viewportsWithToolEnabled","vp","_toolGroupHasActiveEnabledOrPassiveTool","toolOptions","toolMode","mode","EPS","vpCamera","requireParallelNormals","viewportsWithFrameOfReferenceUID","filterViewportsWithFrameOfReferenceUID","jumpToWorld","jumpWorld","normal","dotProd","projectedDelta","_applyShift","Right","ColorbarRangeTextPosition","getLuminanceFromRegion","luminance","spIndex","column","calculateMinMaxMean","pixelLuminance","globalMin","globalMax","spv","extractWindowLevelRegionToolData","getVolumeId","cornerstoneImageMetaData","Rows","Columns","extractImageDataVolume","getCornerstoneImage","extractImageDataStack","_scriptDir","currentScript","ICRPolySegApp","readyPromiseResolve","readyPromiseReject","Module","readBinary","moduleOverrides","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","scriptDirectory","self","location","href","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","responseType","send","response","out","bind","wasmBinary","POINTER_SIZE","wasmMemory","noExitRuntime","WebAssembly","abort","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","ABORT","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","maxBytesToRead","endIdx","endPtr","decode","subarray","str","u0","u1","u2","fromCharCode","ch","UTF8ToString","ptr","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","lengthBytesUTF8","updateGlobalBufferAndViews","buf","Int8Array","Int32Array","Uint32Array","wasmTable","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","wasmBinaryFile","path","dataURIPrefix","isDataURI","filename","getBinary","file","ASM_CONSTS","$0","updateProgress","ExitStatus","message","callRuntimeCallbacks","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","set_adjusted_ptr","add_ref","release_ref","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","SYSCALLS","varargs","getStr","structRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","f","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","getShiftFromSize","embind_charCodes","readLatin1String","ret","BindingError","throwBindingError","rawType","registeredInstance","ignoreDuplicateRegistrations","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","Emval","toValue","toHandle","floatReadValueFromPointer","new_","argumentList","dummy","exposePublicSymbol","numArguments","overloadTable","proto","humanName","prevFunc","argCount","ensureOverloadTable","wasmTableMirror","getWasmTableEntry","funcPtr","dynCall","sig","dynCallLegacy","embind__requireFunction","signature","rawFunction","argCache","fp","UnboundTypeError","getTypeName","___getTypeName","rv","_free","integerReadValueFromPointer","signed","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","outPtr","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","requireRegisteredType","impl","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","emval_get_global","globalThis","emval_registeredMethods","emval_newers","readEmAsmArgsArray","runEmAsmFunction","code","sigPtr","argbuf","readEmAsmArgs","emscripten_realloc_buffer","grow","ENV","getEnvStrings","strings","env","navigator","languages","printCharBuffers","printChar","stream","__isLeapYear","year","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","_strftime","maxsize","format","tm","tm_zone","date","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","leadingNulls","compareByDay","date1","date2","sgn","compare","getFullYear","getMonth","getDate","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","getTime","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","__addDays","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","twelveHour","__arraySum","jan1","dec31","off","ahead","stringy","dontAddNull","u8array","numBytesWritten","bytes","writeArrayToMemory","_proc_exit","codes","embind_init_charCodes","calledRun","asmLibraryArg","fd","dirp","dirfd","flags","bufsize","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","getterReturnType","setterArgumentType","fieldTypes","fieldName","getterContext","setter","setterContext","read","write","o","destructorFunction","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawArgTypesAddr","rawInvoker","fn","argTypes","firstElement","heap32VectorToArray","types","unboundTypes","seen","visit","throwUnboundTypeError","invokerArgsArray","replacePublicSymbol","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","craftInvokerFunction","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","stringSegment","ArrayBuffer","valueIsOfTypeString","_malloc","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","constructorSignature","destructorSignature","getterSignature","setterSignature","isVoid","returnType","destructorsRef","rd","caller","emval_lookupTypes","retType","signatureName","returnId","params","functionBody","invokerFunction","newer","craftEmvalAllocator","v","arg","dest","copyWithin","requestedSize","multiple","oldSize","maxHeapSize","cutDown","overGrownHeapSize","__environ","environ_buf","bufSize","writeAsciiToMemory","penviron_count","penviron_buf_size","iov","iovcnt","pnum","offset_low","offset_high","whence","newOffset","loc","info","receiveInstance","module","exports","unshift","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","binary","instantiate","reason","instantiateStreaming","createWasm","callMain","entryFunction","handleException","run","doRun","shouldRunNow","postRun","preRun","runCaller","ready","ICRPolySeg","_instance","initialize","locateFile","Dir","Forward","Backward","algo","requestData","inData","outData","input","output","extractContours","traverseLoop","pd","startLineId","startPtId","loopPoints","lineId","lastPtId","terminated","numInserted","cellPointIds","getCellPoints","ptId","lineCell","getPointCells","loops","clear","inLines","setData","li","getNumberOfCells","outLines","insertNextCell","vtkContourLoopExtraction","polySegConverters","polySeg","polySegInitializing","polySegInitializingPromise","initializePolySeg","progressCallback","convertContourToSurface","polylines","numPointsArray","convertContourRoiToSurface","convertLabelmapToSurface","convertContourToVolumeLabelmap","annotationUIDsInSegmentMap","segmentationVoxelManager","holesPolyline","projectedHole","point2D","setAtIJKPoint","convertContourToStackLabelmap","segmentationsInfo","segmentationVoxelManagers","segmentationInfo","manager","convertSurfaceToVolumeLabelmap","convertSurfaceToLabelmap","polys","convertSurfacesToVolumeLabelmap","segmentsInfo","targetImageData","totalSize","outputVolumesInfo","extent","getExtent","volumeInfo","roundedIndex","getSurfacesAABBs","surfacesInfo","aabbs","getAABB","numDimensions","cutSurfacesIntoPlanes","planesInfo","surfacesAABB","updateCacheCallback","numberOfPlanes","cutter","plane1","setCutFunction","surfacePolyData","planeInfo","planes","polyDataResults","polyDataInfo","aabb3","minZ","maxZ","isPlaneIntersectingAABB","getPolys","setInputData","setNormal","getOutputData","cutterOutput","buildLinks","loopExtraction","loopOutput","lines","numberOfCells","progress","vtkErrorMacro","dataDescription","EMPTY","setGetArray","setExtent","deleted","_len","inExtent","_key","extentArray","changeDetected","some","item","dims","nCells","getNumberOfPoints","ijk","SINGLE_POINT","X_LINE","Y_LINE","Z_LINE","XY_PLANE","YZ_PLANE","XZ_PLANE","XYZ_GRID","coords","extentToBounds","getSpatialExtent","ex","computeTransforms","ain","aout","worldToIndexVec3","indexToWorldBounds","bin","bout","worldToIndexBounds","onModified","getCenter","computeHistogram","worldBounds","voxelFunc","yStride","zStride","pixels","maximum","sumOfSquares","isum","inum","pixel","average","variance","sigma","computeIncrements","increments","incr","computeOffsetIndex","_ref","getOffsetIndexFromWorld","xyz","comp","offsetIndex","getComponent","vtkImageData","vtkImageData$1","clamping","allowDuplicateScalars","setArray","getType","prevValue","functionType","function","getFirstNonZeroValue","allZero","sharpness","setNodeValue","oldX","sortAndUpdateRange","addPoint","addPointLong","removePoint","setNodes","updateRange","oldRange","retVal","modifiedInvoked","addSegment","getValue","table","getTable","adjustRange","functionRange","estimateMinNumberOfSamples","findMinimumXDistance","ceil","currentDist","xStart","xEnd","stride","numNodes","lastValue","tidx","ss","sss","h1","h2","h3","h4","vtkPiecewiseFunction","vtkPiecewiseFunction$1","PLANE_TOLERANCE","COINCIDE","DISJOINT","distanceToPlane","projectPoint","xproj","xo","projectVector","vproj","n2","generalizedProjectPoint","intersectWithLine","outObj","betweenPoints","p21","p1Origin","den","fabsden","fabstolerance","intersectWithPlane","plane1Origin","plane1Normal","plane2Origin","plane2Normal","l0","l1","cross$1","absCross","maxc","iP","d1","d2","STATIC","evaluate","evaluateFunction","evaluateGradient","planeOrigin","planeNormal","vtkPlane","vtkPlane$1","vtkImageMarchingSquares","getContourValues","contourValues","setContourValues","cValues","ids","pixelScalars","pixelPts","edgeLocator","getPixelScalars","scalars","kernelX","kernelY","ii","getPixelPoints","produceLines","cVal","slicingMode","CASE_MASK","pId","pixelLines","getCase","eid","edgeVerts","getEdge","mergePoints","isInsertedEdge","x0","insertEdge","getOrigin","getKernels","cv","polydata","timeEnd","directionOfProjection","useHorizontalViewAngle","viewAngle","clippingRange","useOffAxisProjection","screenBottomLeft","screenBottomRight","screenTopRight","freezeFocalPoint","projectionMatrix","viewMatrix","cameraLightTransform","physicalTranslation","physicalScale","physicalViewUp","physicalViewNorth","dopbasis","upbasis","tmpMatrix","tmpMatrix2","tmpvec1","tmpvec2","tmpvec3","rotateMatrix","trans","computeViewPlaneNormal","orthogonalizeViewUp","vt","getViewMatrix","setPosition","computeDistance","setFocalPoint","setDistance","dolly","amount","roll","eye","at","up","viewUpVec4","viewDir","azimuth","yaw","elevation","pitch","zoom","factor","applyTransform","transformMat4","vuOld","posNew","fpNew","vuNew","setViewUp","getThickness","setThickness","thickness","setClippingRange","setThicknessFromFocalPoint","setRoll","getRoll","setObliqueAngles","alpha","beta","getOrientation","getOrientationWXYZ","getFrustumPlanes","getCameraLightTransformMatrix","computeCameraLightTransform","deepCopy","sourceCamera","physicalOrientationToWorldDirection","ori","oriq","coriq","qdir","getPhysicalToWorldMatrix","getWorldToPhysicalMatrix","physVRight","computeViewParametersFromViewMatrix","vmat","oldDist","setDirectionOfProjection","computeViewParametersFromPhysicalMatrix","mat","setViewMatrix","setProjectionMatrix","getProjectionMatrix","nearz","farz","cWidth","cRange","xmin","xmax","ymin","ymax","tmp","tan","znear","zfar","getCompositeProjectionMatrix","vMat","pMat","setDeviceAngles","screen","rotmat","dop","vup","setOrientationWXYZ","degrees","quatMat","newdop","newvup","computeClippingRange","vn","vtkCamera","vtkCamera$1","ColorSpace","Scale","ScalarMappingTarget","vtkWarningMacro","vtkColorTransferFunctionLabToMsh","lab","msh","L","M","acos","h","vtkColorTransferFunctionAdjustHue","unsatM","hueSpin","vtkColorTransferFunctionInterpolateDiverging","rgb1","rgb2","lab1","lab2","msh1","msh2","localS","adiff","vtkColorTransferFunctionAngleDiff","Mmid","mshTmp","labTmp","vtkColorTransferFunctionMshToLab","colorSpace","RGB","hSVWrap","LINEAR","nanColor","belowRangeColor","aboveRangeColor","useAboveRangeColor","useBelowRangeColor","tableSize","buildTime","discretize","numberOfValues","g","addRGBPointLong","addHSVPoint","addHSVPointLong","rgb","hsv","before","after","mappingRange","movePoint","addRGBSegment","g1","g2","addHSVSegment","s1","v1","s2","v2","hsv1","hsv2","mapValue","indexedLookup","getAnnotatedValueIndexInternal","getNanColorByReference","nodeVal","getRedValue","getGreenValue","getBlueValue","xStart_","xEnd_","lastR","lastG","lastB","tmpVec","usingLogScale","LOG10","logStart","logEnd","logX","log10","deltaRange","xn","discretizeIndex","getUseAboveRangeColor","getUseBelowRangeColor","HSV","hsvTmp","LAB","DIVERGING","getUint8Table","withAlpha","tableWithAlpha","nbChannels","tmpTable","buildFunctionFromArray","getNumberOfTuples","buildFunctionFromTable","inc","getNumberOfAvailableColors","getIndexedColor","nodeValue","fillFromDataPointer","nb","originalRange","mapScalarsThroughTable","outFormat","inputOffset","mapDataIndexed","mapData","getAlpha","inIncr","outputV","inputV","RGBA","LUMINANCE","LUMINANCE_ALPHA","applyColorMap","colorMap","oldColorSpace","toUpperCase","isModified","oldNanColor","NanColor","oldNodes","callModified","vtkColorTransferFunction","vtkColorTransferFunction$1","presetMap","vtkColorMaps","addPreset","preset","removePresetByName","staticOffsetAPI","otherStaticMethods","SlicingMode","NONE","closestIJKAxis","ijkMode","flip","renderToRectangle","sliceAtFocalPoint","preferSizeOverAccuracy","implementCoincidentTopologyMethods","computeClosestIJKAxis","xyzMode","X","Y","Z","getCurrentImage","newMatrix","getSliceAtPosition","pos3","isFinite","getClosestIJKAxis","I","J","K","setSliceFromCamera","cam","getFocalPoint","setSlice","setXSlice","setSlicingMode","setYSlice","setZSlice","setISlice","setJSlice","setKSlice","getSlicingModeNormal","mat3","useCustomExtents","customDisplayExtent","nSlice","getBoundsForSlice","halfThickness","intersectWithLineForPointPicking","intersectWithLineForCellPicking","vtkImageMapper","vtkImageMapper$1","INIT_BOUNDS","getImages","getIsOpaque","forceOpaque","forceTranslucent","isOpaque","getOpacity","hasTranslucentPolygonalGeometry","getMinXBound","getMaxXBound","getMinYBound","getMaxYBound","getMinZBound","getMaxZBound","getSupportsSelection","vtkImageSlice","vtkImageSlice$1","proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","transferHandlers","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","wrap","serialized","isError","ep","allowedOrigins","ev","allowedOrigin","test","isAllowedOrigin","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfers","transferCache","transfer","wireValue","transferables","toWireValue","postMessage","closeEndPoint","endpoint","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","_target","unregister","unregisterProxy","_thisArg","rawArgumentList","processArguments","construct","registerProxy","processed","arr","handler","serializedValue","msg","MAX_SAFE_INTEGER","l","bisector","compare1","compare2","lo","hi","zero"],"sourceRoot":""}